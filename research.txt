File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\launch_notebook_server.bat
----------------------------------------
set HOME_DIR=C:\Dev\projects\transfer\myversion
cd %HOME_DIR%
set PATH=%HOME_DIR%;%PATH%
set PYTHONPATH=%HOME_DIR%
set python=venv\Scripts\python.exe
call %python% -m jupyter notebook
timeout 10

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\main.py
----------------------------------------
# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.


def print_hi(name):
    # Use a breakpoint in the code line below to debug your script.
    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    print_hi('PyCharm')

# See PyCharm help at https://www.jetbrains.com/help/pycharm/

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\requirements.txt
----------------------------------------
nbformat==5.0.8
nbconvert==6.0.7

matplotlib
pandas

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\accum2t.py
----------------------------------------
import numpy as np
import pandas as pd


def histc(x, bins, side="right"):
    """
    group x by a sorted bins of cutting points and return the id
    args:
        x: np.array
        bins: sorted list/array that are comparable with x
    returns:
        ptr: np.arry of int8
            group id 0: NaN, inf data
            group id 1: data not included in the boundaries
            group id k: data that falls in [bins_{k}, bins_{k-1})

    
    example:
        x = np.array([np.nan, -2.0, -1.0, 0.0, 0.5, 1.0, 1.1, 1.5, 2.0, 3.0])
        bins =[-1.0, 0.0, 1.0, 3.0]
        
        histc(x, bins)
        # returns:
        # array([0, 1, 2, 3, 3, 4, 4, 4, 4, 1], dtype=int8)

    """
    ptr = np.zeros(len(x)).astype('int64')
    if x.dtype in ["float", "int"]:
        f = np.isfinite(x)
    else:
        f = np.ones(len(x)) > 0
    ptr[f] = np.searchsorted(bins, x[f], side=side) + 1
    if side == "right":
        ptr[x == bins[-1]] = len(bins)  # include the max value to last bin
    else:
        ptr[x == bins[0]] = 2  # include the min value to first bin
    ptr[ptr == (len(bins) + 1)] = 1
    return ptr


class AccumulateToTable:
    """
    A tool that wraps groupby for better visualization of results in 2D.

    Creates buskets with labels that enrich a given dataset, and then perform
    aggregation with respect to such labels, a sample case would be:

    Given a collection of trades from a backtest, we enrich it with 
    the underlying, the size, the time of day, triggering signal strength/std. 

    Then we can look at statistics of P&L of such trades with respect to
    underlying and time of day, to understand the liquidity.


    Parameters
    ----------------------
    x: array-like
        Only for backward compatibility, only the index of x is kept

    Attributes
    ----------------------
    n: int
        Length of data.
    index: pd.Index
        Index of internal data.
    xtra: dict
        Categorical basket and their bins' names.
    bkts: dict
        Numerical basket and their bins' cutoff values.
    ptrs: dict {str: numpy array of dtype np.int64}
        Basket names and their pointer values.

    Usage
    --------------------------
    # say trd is the DataFrame of option trades with columns: 
    #   vega, trade_size, trade_price, underlying, pl, vol

    ac2t = AccumulateToTable(trd)
    # a categorical basket
    ac2t.create_bkt(trd["underlying"], "underlying")
    # a numerical basket
    ac2t.create_bkt(100 * trd["vol"], "vol", bins=[0, 10, 15, 20, 100])

    pl_per_vega = trd["pl"] / (trd["trade_size"] * trd["vega"])

    # show the median of pl per vega conditional on underlying and vol:
    ac2t.accum2t(pl_per_vega, np.median, "underlying", "vol")
    """

    def __init__(self, x):
        self.__n = len(x)
        self.__index = x.index
        self.__xtra = {"total": pd.Series(['bad', 'total'])}
        self.__bkts = {}
        self.__ptrs = {"total": np.ones(len(x)).astype(np.int64)}

    def __len__(self):
        return self.__n

    @property
    def index(self):
        return self.__index

    @property
    def xtra(self):
        return self.__xtra
    
    @xtra.setter
    def xtra(self, key, val):
        self.__xtra[key] = val

    @property
    def bkts(self):
        return self.__bkts
    
    @bkts.setter
    def bkts(self, key, val):
        self.__bkts[key] = val

    @property
    def ptrs(self):
        return self.__ptrs
    
    @ptrs.setter
    def ptrs(self, key, val):
        self.__ptrs[key] = val
    
    def _check_length(self, x):
        assert len(x) == len(self), "x is not of length {}".format(len(self))

    def get_ptr(self, bkt):
        return self.ptrs[bkt]

    def get_label(self, bkt):
        if bkt in self.xtra:
            return self.xtra[bkt]
        
        elif bkt in self.bkts:
            names = ['bad', 'outlier']
            rbins = self.bkts[bkt]
            for i in range(1, len(rbins)-1):
                names.append(f"[{rbins[i - 1]}, {rbins[i]})")
            # we make the last bin closed on both sides
            names.append(f"[{rbins[-2]}, {rbins[-1]}]")
            return np.array(names)

        else:
            print("bkt {} not created!".format(bkt))
            return None

    def tick_xtra(self, key, vals):
        assert key in self.xtra, f"{key} is not categorical label."
        # check univariate querry
        if not pd.api.types.is_array_like(vals):
            vals = np.array(vals)
        pvals = np.where([x in vals for x in self.xtra[key]])[0]
        f = pd.Series(self.ptrs[key]).isin(pvals)
        f.index = self.index
        return f

    def create_bkt(self, x, bkt, bins=None, labels=None, sort=False):
        """
        Main API to create buckets or categorical labels for grouping, after
        this step, one can call the main methods `accum2t` with groups created
        via this method.

        Parameters
        ------------------
        x: array like, 1D
            Input data to be aggregated.
        bkt: str
            Name of the new group.
        bins: array like, optional, (default = None)
            Bins for hist count, used as the cut offs in creating numerical
            cutted buckets, see `np.searchsorted` for more details.
        labels: array like, optional, (default = None)
            If bins = None: Categorical labels used for creating categorical
            groups, passing labels explicitly determine its order.
            Otherwise, labels are used to replace the numerical range buckets in
            visualization. So instead of showing [-1000, 0] as the bucket, one
            can use "negative" instead.
        sort: bool, (default = False)
            Only applicable when creating categorical labels and use the default
            ascending sort order. 
        
        Example usage
        -----------------

        bdays = pd.bdate_range("2018-01-01", "2019-12-31")
        n_sample = len(bdays)
        mena = np.array([0, 0])
        cov = np.array([[ 1.0, -0.3],
                        [-0.3,  1.0]])
        x = np.random.multivariate_normal(mean, cov, n_sample)
        df = pd.DataFrame(index=bdays, data=x, columns=["ind", "dep"])

        # create numerical buckets            
        ac2t = AccumulateToTable(df)
        ac2t.create_bkt(df["x"], bkt="x-variable", bins=[-3, -2, -1, -0.5, 0.5, 1, 2, 3])

        # create categorical buckets, and sort by default order
        ac2t.create_bkt(df.index.strftime("%Y-%m"), bkt="year-month", sort=True)
        """

        self._check_length(x)
        if bkt in self.xtra or bkt in self.bkts:
            print("Overriding existing label.")
        
        if bins is not None:
            # use bins to segament data
            self.ptrs[bkt] = histc(x, bins, side="right")
            if labels is None:
                # numerical repr
                self.bkts[bkt] = bins.copy()
            else:
                # categorical labels enriched more values
                self.xtra[bkt] = np.array(["bad", "outlier", *labels])            
        else:
            # categorical, use the default
            tmp = pd.Series(x).astype("category")
            cat = np.array(tmp.cat.categories)
            ptr = tmp.cat.codes.values

            # if labels are not passed in, sort the unique labels
            if sort and labels is None:
                labels = np.sort(np.unique(cat))
            
            # reorder in prescribed way
            if labels is not None:
                x = np.array(labels)
                idx_x_order = np.argsort(x)
                idx_x_reorder = np.argsort(idx_x_order)
                idx_y_order = np.argsort(cat)
                idx_y_reorder = np.argsort(idx_y_order)
                cat = cat[idx_y_order][idx_x_reorder]  # covariant functor
                ptr = idx_x_order[idx_y_reorder[ptr]]  # contra-variant functor
            self.ptrs[bkt] = ptr
            self.xtra[bkt] = cat

    def accum2t(self, x, aggfunc, vlabel, hlabel='total', f=None):
        """
        Main method to perform analysis on data.

        Parameters
        ---------------
        x: array-like
            Input data. Most time 1D, but with complicated aggfunc, it can be N-D.
        aggfunc: callable, return must be a single numerical value.
            A function to be applied on x, for example:
            np.sum, np.mean, lambda x: np.quantile(x, 0.7)
        vlabel: str
            Vertical label to groupby with.
        hlabel: str, optional, (default = "total")
            Horizontal label to groupby with
        f: 1D array, bool, optional, (default = None)
            Conditional filter to be applied on x before analysis.
        
        Return
        -----------------
        gdf: pd.DataFrame
            aggfunc(x[f]; vlabel, hlabel) and their marginal values.
 
        """

        self._check_length(x)
        if isinstance(x, np.ndarray):
            if x.ndim == 1:
                x_ = pd.Series(x)
            else:
                x_ = pd.DataFrame(x)
        else:
            x_ = x

        vptr = self.get_ptr(vlabel)
        vname = self.get_label(vlabel)
        hptr = self.get_ptr(hlabel)
        hname = self.get_label(hlabel)

        if f is not None:
            vptr = vptr[f]
            hptr = hptr[f]
            x_ = x_[f]

        gdf = x_.groupby([vptr, hptr]).apply(aggfunc).unstack(level=1)
        gdf.index = vname[gdf.index]
        gdf.index.name = vlabel
        gdf.columns = hname[gdf.columns]
        gdf.columns.name = hlabel

        # total labels
        vtot = x_.groupby(vptr).apply(aggfunc).values
        htot = x_.groupby(hptr).apply(aggfunc).values
        atot = aggfunc(x_)
        gdf['all'] = vtot
        htot = pd.Series(index=gdf.columns,
                         data=np.append(htot, np.array(atot)))
        htot.name = 'all'
        gdf = gdf.append(htot)
        if hlabel == 'total':
            gdf = gdf[['all']]
        return gdf

    def accum2t_ratio(self, x, y, aggfunc, vlabel, hlabel='total', f=None):
        """
        Perform accum2t on x, y separately and divide them.
        
        
        Example
        ---------------
        # A sample use case is to calculate volume weighted PL by baskets
        # assume `trades` is a DataFrame of trade records
        # say we check the pl on active sell orders

        x = trades["pl"]
        y = trades["volume"]
        aggfunc = np.sum
        f = trades["price"] == trades["bid"]
        vwp = ac2t.accum2t_ratio(x, y, aggfunc, vlabel="symbol", hlabel="trade_time")

        Parameters
        ---------------
        x: array-like
            Numerator data.
        y: array-like
            Denominator data.
        aggfunc: callable, return must be a signle numerical value
            A function to be called on x, y, for example:
            np.sum, np.mean, lambda x: np.quantile(x, 0.7).
        vlabel: str
            Vertical label to groupby with.
        hlabel: str, (default = "total")
            Horizontal label to groupby with.
        f: 1D array-like, bool, optional, (default = None)
            Optional filter to be applied on x and y

        Returns
        -----------
        ratio: pd.DataFrame
            aggfunc(x[f]; vlabel, hlabel) / aggfunc(y[f]; vlabel, hlabel)
            and the margin basket ratios
        """
        ttx = self.accum2t(x, aggfunc, vlabel, hlabel, f)
        tty = self.accum2t(y, aggfunc, vlabel, hlabel, f)
        ratio = ttx / tty
        return ratio

    def accum2t_ratiop(self, x, aggfunc, vlabel, hlabel="total", f=None,
                       vertical=True, pct=True):
        """
        Check the conditional distribution of `accum2t` by one margin axis.


        Parameters
        ---------------
        x: array-like
            Input data.
        aggfunc: callable, return must be a signle numerical value
            A function to be called on x, y, for example:
            np.sum, np.mean, lambda x: np.quantile(x, 0.7).
        vlabel: str
            Vertical label to groupby with.
        hlabel: str, (default = "total")
            Horizontal label to groupby with.
        f: 1D array-like, bool, optional, (default = None)
            Optional filter to be applied on x and y.
        vertical: bool, (default = True)
            Margin by vlabel (vertical = False) where each row add up to 1.0
            or halebl (vertical = True) where each column add up to 1.0.
        pct: bool, (default = True)
            If True, multiply the results by 100 to show in percentage points.

        Returns
        ---------------
        tt: pd.DataFrame
            ratio of aggfunc(x[f]; vlabel, hlabel) conditional value with
            respect to their aggfunc(x[f]; vlabel/hlabel) marginals 
        """
        ttx = self.accum2t(x, aggfunc, vlabel, hlabel, f)
        if vertical:
            tt = ttx.divide(ttx.iloc[-1, :], axis=1)
        else:
            tt = ttx.divide(ttx.iloc[:, -1], axis=0)

        if pct:
            tt = 100 * tt
        return tt


def ac2t_fast(arr, x1, x2, y, aggfunc=np.mean, n_bkt=5, f=None):
    """
    some fast wrapper to create accum2t table, buckets are created
    according to equal spaced quantiles on x1, and x2
    :param arr: array-like, Only for backward compatibility, only the index of x is kept
    :param x1: pandas series, used for vlabel
    :param x2: pandas series, used for hlabel
    :param y: pandas series, to be aggregated
    :param aggfunc: callable, return must be a single numerical value.
            A function to be applied on x, for example:
            np.sum, np.mean, lambda x: np.quantile(x, 0.7)
    :param n_bkt: no of buckets to create on x1 and x2,
            the function will use equal spaced quantiles to create buckets,
            e.g. n_bkt=5, will create bins separated at [0.2, 0.4, 0.6, 0.8] quantiles
    :return: pd.DataFrame
            aggfunc(x[f]; x1, x2) and their marginal values.
    """
    ac2t = AccumulateToTable(arr)
    q = np.concatenate([[0.01], (np.arange(n_bkt)/n_bkt)[1:], [0.99]])
    ac2t.create_bkt(x1, bkt=x1.name, bins=x1.quantile(q).values)
    ac2t.create_bkt(x2, bkt=x2.name, bins=x2.quantile(q).values)
    output = ac2t.accum2t(y, aggfunc=aggfunc, vlabel=x1.name, hlabel=x2.name, f=f)
    return output

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\confusion_matrix.py
----------------------------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn.utils.multiclass import unique_labels


def plot_confusion_matrix(y_true, y_pred, classes,
                          normalize=False,
                          title=None,
                          cmap=plt.cm.Blues,
                          print_cm=True):
    """
    This function prints and plots the confusion matrix based on y_true and y_pred.
    Normalization can be applied by setting `normalize=True`.
    :param y_true: True value for the target
    :param y_pred: Predicted value for the target
    :param classes: list or numpy array of sorted classes like np.array(["down", "up"])
                    should be in the order consistent with ordered array of unique labels in y_true and y_pred,
                    e.g. y_true and y_pred can take values of 0 and 1, where 0 means "down", 1 means "up",
                    then classes=np.array(["down", "up"]), to keep consistent with an ordered labels [0, 1]
    :param normalize: if True, apply a normalization
    :param title: title for the plot
    :param cmap: color map
    :param print_cm: if True, print the confusion matrix
    :return: matplotlib ax

    Example1: classification
    ----------
    >>> import numpy as np
    >>> from data_analysis_toolbox import plot_confusion_matrix
    >>> y_true = [1, 0, 1, 1, 0, 1]
    >>> y_pred = [0, 0, 1, 1, 0, 1]
    >>> plot_confusion_matrix(y_true=y_true, y_pred=y_pred, classes=np.array(["down", "up"]))
    Confusion matrix, without normalization
    [[2 0]
     [1 3]]
    Out[8]: <matplotlib.axes._subplots.AxesSubplot at 0x7f5d13c05290>
    ----------

    Example2: we have PnL prediction and want to do confusion matrix on up/down
    ----------
    >>> import pandas as pd
    >>> import numpy as np
    >>> from data_analysis_toolbox import plot_confusion_matrix
    >>> y_true = pd.Series([1.5, -2, 1.0, -0.5, 0.0, 0.8])
    >>> y_pred = pd.Series([0.2, 0.5, 1.8, -1.5, -0.2, 1.0])
    >>> plot_confusion_matrix(y_true=(y_true>0).astype(np.int64),
    ...                       y_pred=(y_pred>0).astype(np.int64),
    ...                       classes=np.array(["down", "up"]))
    Confusion matrix, without normalization
    [[2 1]
     [0 3]]
    Out[13]: <matplotlib.axes._subplots.AxesSubplot at 0x7f5d10b10750>
    """
    if not title:
        if normalize:
            title = 'Normalized confusion matrix'
        else:
            title = 'Confusion matrix, without normalization'

    # Compute confusion matrix
    cm = confusion_matrix(y_true, y_pred)
    # Only use the labels that appear in the data
    classes = classes[unique_labels(y_true, y_pred)]
    if normalize:
        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]
        print("Normalized confusion matrix")
    else:
        print('Confusion matrix, without normalization')

    if print_cm:
        print(cm)

    fmt = '.2f' if normalize else 'd'
    ax = _plot_confusion_matrix(classes, title=title, cm=cm, fmt=fmt, cmap=cmap)
    return ax


def _plot_confusion_matrix(classes, title, cm, fmt='.2f', cmap=plt.cm.Blues):
    """
    to plot a confusion matrix with given confusion matrix
    :param classes: list or numpy array of sorted classes, e.g. np.array(["down", "up"]
    :param title: the title for the plot
    :param cm: the confusion matrix to plot, e.g. np.array([[a,b],[c,d]])
    :param fmt: number format to print in the plot,
                e.g. '.2f' for float with 2 digits precision,
                     '.2%' for percentage with 2 digits precision,
                     'd' for integer
    :param cmap: color map
    :return: matplotlib ax

    Example: PnL confusion matrix
    >>> import numpy as np
    >>> from data_analysis_toolbox import _plot_confusion_matrix
    >>> true_up_pnl, true_down_pnl, false_up_pnl, false_down_pnl = (1.2, 2.1, -1, -1.5)
    >>> _plot_confusion_matrix(np.array(['down', 'up']),
    ...                        title="PnL confusion matrix",
    ...                        cm=np.array([[true_down_pnl, false_up_pnl], [false_down_pnl, true_up_pnl]]),
    ...                        fmt='.2%')
    Out[17]: <matplotlib.axes._subplots.AxesSubplot at 0x7f5d10aadad0>
    """
    fig, ax = plt.subplots()
    im = ax.imshow(cm, interpolation='nearest', cmap=cmap)
    ax.figure.colorbar(im, ax=ax)
    # We want to show all ticks...
    ax.set(xticks=np.arange(cm.shape[1]),
           yticks=np.arange(cm.shape[0]),
           # ... and label them with the respective list entries
           xticklabels=classes, yticklabels=classes,
           title=title,
           ylabel='True label',
           xlabel='Predicted label')

    # Rotate the tick labels and set their alignment.
    plt.setp(ax.get_xticklabels(), rotation=45, ha="right",
             rotation_mode="anchor")

    # Loop over data dimensions and create text annotations.
    thresh = (cm.max() + cm.min()) / 2.
    for i in range(cm.shape[0]):
        for j in range(cm.shape[1]):
            ax.text(j, i, format(cm[i, j], fmt),
                    ha="center", va="center",
                    color="white" if cm[i, j] > thresh else "black")
    fig.tight_layout()
    return ax
........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\cscv.py
----------------------------------------
import pandas as pd
import numpy as np
import math
import itertools as itr
from typing import Callable, Union, List, Tuple
import matplotlib.pyplot as plt
from statsmodels.distributions.empirical_distribution import ECDF


def _sharpe(ret: Union[pd.Series, np.array]) -> float:
    return np.mean(ret) / np.std(ret) * np.sqrt(252)


def get_cscv_test(daily_returns: pd.DataFrame, plot: bool = True, axes: np.ndarray = None, n_bins: int = 12,
                  objective: Callable[[pd.Series], float] = 'sharpe') -> dict:
    """
    wrapper function to apply cscv(Combinatorially Symmetric Cross-Validation algorithm) test
    :param daily_returns: A DataFrame of trading daily_returns.
    :param axes: np.ndarray of matplotlib.pyplot.axes, optional, (default=None), axes to draw the scatter plot.
    :param plot: boolean to control plot display. Default is True.
    :param n_bins: An int of CSCV algorithm bin size to control overfitting calculation.Default is 12.
    :param objective: A function take return as input to calculate benchmark metrics. Default is sharpe
    :return: A dict of result include:
        'prob_nof': A float of non-overfitting probability.
        logits: A pandas Series of estimated logits of OOS rankings.
        R_n_star: A pandas Series of IS performance of th strategies that has the best ranking in IS.
        R_bar_n_star: A pandas Series of find the OOS performance of the strategies that has the best ranking in IS.
        dom_df: A pandas DataFrame of optimized_IS, non_optimized_OOS data.
        obj_above_zero: probability of out-of-sample objective to be above zero
    """
    cscv = CSCV(n_bins=n_bins, objective=objective)
    cscv.add_daily_returns(daily_returns)
    res = cscv.estimate_overfitting(plot=plot, axes=axes)
    return res


class CSCV(object):
    """
    Combinatorially symmetric cross-validation algorithm.
    Calculate backtesting about overfitting probability distribution and performance degradation.
    """

    def __init__(self, n_bins: int = 12, objective: Callable[[pd.Series], float] = 'sharpe') -> None:
        """

        :param n_bins: An int of CSCV algorithm bin size to control overfitting calculation.Default is 12.
        :param objective: A function take return as input to calculate benchmark metrics. Default is sharpe
        """
        assert isinstance(n_bins, int)
        assert n_bins % 2 == 0
        self.n_bins = n_bins
        self.objective = objective
        self.bins_enumeration = [set(x) for x in itr.combinations(range(n_bins), n_bins // 2)]

        self.Rs = [pd.Series(dtype=float) for i in range(len(self.bins_enumeration))]
        self.R_bars = [pd.Series(dtype=float) for i in range(len(self.bins_enumeration))]

    def add_daily_returns(self, daily_returns: pd.DataFrame) -> None:
        """
        Add daily_returns in algorithm.
        :param daily_returns: A DataFrame of trading daily_returns.
        """
        clean_returns = daily_returns.dropna(how='any')
        bin_size = clean_returns.shape[0] // self.n_bins
        bins = [clean_returns.iloc[i * bin_size: (i + 1) * bin_size] for i in range(self.n_bins)]

        if self.objective == 'sharpe':
            idx = pd.Index(clean_returns.columns)
            n_params = len(clean_returns.columns)
            bin_mu = np.array([np.mean(x) for x in bins])  # n_bin * n_param
            bin_std = np.array([np.std(x) for x in bins])  # n_bin * n_param
            # bin_len = np.array([[len(x)]*x.shape[1] for x in bins])  # n_bin * n_param, each value is bin_size
            # for set_id, is_set in enumerate(self.bins_enumeration):
            #     oos_set = set(range(self.n_bins)) - is_set
            #     is_ = np.array(list(is_set))
            #     oos_ = np.array(list(oos_set))
            #     R = [self.calculate_sharpe_from_array_mean_std(
            #         mus=bin_mu[is_][:, i], stds=bin_std[is_][:, i]) for i in range(n_params)]
            #     R_bar = [self.calculate_sharpe_from_array_mean_std(
            #         mus=bin_mu[oos_][:, i], stds=bin_std[oos_][:, i]) for i in range(n_params)]
            #     self.Rs[set_id] = self.Rs[set_id].append(pd.Series(R, index=idx))
            #     self.R_bars[set_id] = self.R_bars[set_id].append(pd.Series(R_bar, index=idx))
            n_bin_combi = len(self.bins_enumeration)  # 924
            n_bins_is = self.n_bins//2  # 6
            is_bin_idx = np.array([list(x) for x in self.bins_enumeration])  # n_bin_combination * n_bin/2: 924 * 6
            oos_bin_idx = np.array([np.setdiff1d(np.arange(self.n_bins), is_bin_idx[i], assume_unique=True) for i in
                                    range(is_bin_idx.shape[0])])
            # 924 * 1728 * 6
            mus_is = np.swapaxes(bin_mu[is_bin_idx.flatten()].reshape((n_bin_combi, n_bins_is, n_params), order='C'), 1, 2)
            stds_is = np.swapaxes(bin_std[is_bin_idx.flatten()].reshape((n_bin_combi, n_bins_is, n_params), order='C'), 1, 2)
            mus_oos = np.swapaxes(bin_mu[oos_bin_idx.flatten()].reshape((n_bin_combi, n_bins_is, n_params), order='C'), 1, 2)
            stds_oos = np.swapaxes(bin_std[oos_bin_idx.flatten()].reshape((n_bin_combi, n_bins_is, n_params), order='C'), 1, 2)

            # 924 * 1728
            mus_is_agg = np.mean(mus_is, axis=-1)
            mus_oos_agg = np.mean(mus_oos, axis=-1)

            # sum of squared deviation: ssd = sum(mu^2) + sum(std^2) - sum(mu_bar^2)
            ssd_is_agg = np.sum(np.power(mus_is, 2), axis=-1) + np.sum(np.power(stds_is, 2), axis=-1) - n_bins_is * np.power(mus_is_agg, 2)
            ssd_oos_agg = np.sum(np.power(mus_oos, 2), axis=-1) + np.sum(np.power(stds_oos, 2), axis=-1) - n_bins_is * np.power(mus_oos_agg, 2)

            # std agg: sqrt(ssd/ n_bins_is)
            stds_is_agg = np.sqrt(ssd_is_agg/n_bins_is)
            stds_oos_agg = np.sqrt(ssd_oos_agg/n_bins_is)

            # sharpe
            R = np.divide(mus_is_agg, stds_is_agg) * np.sqrt(252)
            R_bar = np.divide(mus_oos_agg, stds_oos_agg) * np.sqrt(252)

            self.Rs = [pd.Series(x, index=idx) for x in R]
            self.R_bars = [pd.Series(x, index=idx) for x in R_bar]

        else:
            for set_id, is_set in enumerate(self.bins_enumeration):
                oos_set = set(range(self.n_bins)) - is_set
                is_returns = pd.concat([bins[i] for i in is_set])
                oos_returns = pd.concat([bins[i] for i in oos_set])
                R = is_returns.apply(self.objective, axis=0)
                R_bar = oos_returns.apply(self.objective, axis=0)
                self.Rs[set_id] = self.Rs[set_id].append(R)
                self.R_bars[set_id] = self.R_bars[set_id].append(R_bar)

    def estimate_overfitting(self, plot: bool = True, axes: np.ndarray = None) -> dict:
        """
        Estimate overfitting probability.
        Generate the result on combinatorially symmetric cross-validation algorithm.
        Display related analysis charts.
        :param plot: boolean to control plot display. Default is True.
        :param axes: np.ndarray of matplotlib.pyplot.axes, optional, (default=None), axes to draw the scatter plot.
        :return: A dict of result include:
            'prob_nof': A float of non-overfitting probability.
            logits: A pandas Series of estimated logits of OOS rankings.
            R_n_star: A pandas Series of IS performance of th strategies that has the best ranking in IS.
            R_bar_n_star: A pandas Series of find the OOS performance of the strategies that has the best ranking in IS.
            dom_df: A pandas DataFrame of optimized_IS, non_optimized_OOS data.
            obj_above_zero: probability of out-of-sample objective to be above zero
        """
        # calculate strategy performance in IS(R_df) and OOS(R_bar_df)
        R_df = pd.DataFrame(self.Rs)
        R_bar_df = pd.DataFrame(self.R_bars)

        # calculate ranking of the strategies
        R_rank_df = R_df.rank(axis=1, ascending=False, method='first')
        R_bar_rank_df = R_bar_df.rank(axis=1, ascending=False, method='first')

        # find the IS performance of th trategies that has the best ranking in IS
        r_star_series = R_df[R_rank_df == 1].T.unstack(level=-1).dropna().sort_index(level=0)

        # find the OOS performance of the strategies that has the best ranking in IS
        r_bar_star_series = R_bar_df[R_rank_df == 1].T.unstack(level=-1).dropna().sort_index(level=0)

        # find the ranking of strategies which has the best ranking in IS
        r_bar_rank_series = R_bar_rank_df[R_rank_df == 1].T.unstack(level=-1).dropna().sort_index(level=0)

        # probability of overfitting

        # estimate logits of OOS rankings
        logits = (1 - ((r_bar_rank_series) / (len(R_df.columns) + 1))).map(lambda p: math.log(p / (1 - p))).droplevel(
            level=-1, axis=0)
        prob = (logits > 0).sum() / len(logits)  # non-overfit prob

        # stochastic dominance

        # calculate
        if len(r_bar_star_series) != 0:
            y = np.linspace(
                min(r_bar_star_series), max(r_bar_star_series), endpoint=True, num=1000
            )

            # build CDF performance of best candidate in IS
            R_bar_n_star_cdf = ECDF(r_bar_star_series.values)
            optimized = R_bar_n_star_cdf(y)

            # build CDF performance of average candidate in IS
            R_bar_mean_cdf = ECDF(R_bar_df.median(axis=1).values)
            non_optimized = R_bar_mean_cdf(y)

            #
            dom_df = pd.DataFrame(
                dict(optimized_IS=optimized, non_optimized_OOS=non_optimized)
                , index=y)
            dom_df["SD2"] = (dom_df.non_optimized_OOS - dom_df.optimized_IS).cumsum()
        else:
            dom_df = pd.DataFrame(columns=['optimized_IS', 'non_optimized_OOS', 'SD2'])

        ret = {
            'prob_nof': prob,
            'logits': logits,
            'R_n_star': r_star_series,
            'R_bar_n_star': r_bar_star_series,
            'dom_df': dom_df,
            'obj_above_zero': (r_bar_star_series > 0).mean(),
        }

        if plot:
            if axes is not None:
                if isinstance(axes, np.ndarray):
                    axes = axes.flatten()
                    if len(axes) < 3:
                        print('input axes need at least 3 axes')
                        axes = None
                else:
                    print('input axes is not np.ndarray')
                    axes = None

            if axes is None:
                fig, axes = plt.subplots(ncols=3, figsize=(12, 12))

            # probability distribution
            ax = axes[0]
            ax.hist(x=[l for l in ret['logits'] if l > -10000], bins='auto', label='logits')
            ax.axvline(0, ls='--', color='black', label='logits=0 threshold')
            ax.set_xlabel('Logits')
            ax.set_ylabel('Frequency')
            ax.plot(pd.Series(), label=f"Prob non-overfit: {prob:.2%}")
            ax.legend()
            ax.set_title(
                'Probability Distribution: Hist of Rank Logits\n(high logits imply consistency between IS and OOS)')
            # plt.show()

            # performance degradation
            ax = axes[1]
            common_idx = ret['R_n_star'].index.intersection(ret['R_bar_n_star'].index)
            ax.scatter(ret['R_n_star'].loc[common_idx], ret['R_bar_n_star'].loc[common_idx])
            ax.set_xlabel('In-sample Performance')
            ax.set_ylabel('Out-of-sample Performance Degradation')
            ax.plot(pd.Series(), label=f"Prob[SR OOS>0]={ret['obj_above_zero']:.2%}")
            ax.legend()
            ax.set_title('Performance degradation')
            # plt.show()

            # first and second Stochastic dominance
            ax = axes[2]
            ret['dom_df'][['optimized_IS', 'non_optimized_OOS']].plot(ax=ax, legend=False)
            ax2 = ax.twinx()
            ret['dom_df']['SD2'].plot(ax=ax2, ls='--', color='brown')
            # ret['dom_df'].plot(secondary_y=['SD2'])
            ax.set_xlabel('Performance optimized vs non-optimized')
            ax.set_ylabel('Frequency')
            ax2.set_ylabel('2nd Order Stochastic Dominance')
            ax2.axhline(0, ls='--', color='black', label='SD2 threshold')
            plt.title('Stochastic dominance')
            ax.legend(loc='upper left')
            ax2.legend(loc='upper right')
            plt.tight_layout()
            # plt.show()

        return ret


def concat_pair_mu_std(mu1: float, std1: float, n1: int, mu2: float, std2: float, n2: int) -> Tuple:
    """
    given mean, standard deviation, length of two array, return mean, standard deviation, length of concatenated array
    https://math.stackexchange.com/questions/3538788/standard-deviation-of-concatenation-of-two-vectors-whose-std-are-known
    n = n1 + n2
    mu = (n1 * mu1 + n2 * mu2) / n
    std^2 = 1/n * (n1*mu1^2 + n1*std1^2 - 2*mu*n1*mu1 + m*mu^2 + n2*mu2^2 + n2*std2^2 - 2*mu*n2*mu2 + n2*mu^2)
    :param mu1:
    :param std1:
    :param n1:
    :param mu2:
    :param std2:
    :param n2:
    :return:
    """
    n = n1 + n2
    mu = (n1 * mu1 + n2 * mu2) / n
    # sum of squared deviation
    ssd1 = n1 * mu1 ** 2 + n1 * std1 ** 2 - 2 * mu * n1 * mu1 + n1 * mu ** 2
    ssd2 = n2 * mu2 ** 2 + n2 * std2 ** 2 - 2 * mu * n2 * mu2 + n2 * mu ** 2

    std = np.sqrt((ssd1 + ssd2) / n)
    return mu, std, n


def concat_list_mu_std(l: List[Tuple]) -> Tuple:
    """
    given mean, standard deviation, length of list of arrays,
    return mean, standard deviation, length of concatenated array
    e.g. concat_list_mu_std([(mu1,std1,n1), (mu, std2, n2), ...])
    :param l: list of tuple, each tuple contain 3 value, in the form of (mu, std, len)
    :return: mu, std, len of concatenated array
    """
    mu, std, n = 0, 0, 0
    for array_stats in l:
        assert len(array_stats) == 3, "expect 3 value (mean, std, length) in each element of input list"
        mu0, std0, n0 = array_stats
        mu, std, n = concat_pair_mu_std(mu, std, n, mu0, std0, n0)
    return mu, std, n


def concat_list_mu_std_equal_len(mus: List, stds: List) -> Tuple:
    """
    special case for concat_list_mu_std, each array has same len
    return mean, standard deviation
    e.g. concat_list_mu_std([(mu1,std1), (mu, std2, n2), ...])
    :param l: list of tuple, each tuple contain 3 value, in the form of (mu, std, len)
    :return: mu, std, len of concatenated array
    """
    assert len(mus) == len(stds)
    mu = np.mean(mus)
    n = len(mus)
    # sum of squared deviation / arrary_len
    ssd = np.sum(np.power(mus, 2)) + np.sum(np.power(stds, 2)) - n * mu ** 2
    std = np.sqrt(ssd / n)
    return mu, std

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\fastml.py
----------------------------------------
import numpy as np
import pandas as pd
import optuna
import lightgbm as lgb

from sklearn.utils.validation import check_array, check_X_y, check_is_fitted
from sklearn.metrics import r2_score
from sklearn.base import (RegressorMixin, TransformerMixin, BaseEstimator,
    MetaEstimatorMixin, clone)
from sklearn.feature_selection._base import SelectorMixin
from sklearn.linear_model import lars_path, LinearRegression, Ridge, Lasso
from sklearn.svm import SVR, NuSVR
from sklearn.preprocessing import StandardScaler, RobustScaler
from sklearn.pipeline import Pipeline

import warnings
warnings.filterwarnings("ignore")


def softmax(score):
    """
    turn ouput decision function value into a probability for API compatibility
    """
    unnormalized_proba = 1 /  (1 + np.exp(-score))
    return unnormalized_proba / unnormalized_proba.sum(axis=1).reshape(-1, 1) 


def cross_val_score(estimator, X, y, score_func, cv, needs_proba=False):
    """
    A somehow fast version of sklearn.model_selection.cross_val_score

    Parameters
    ----------
    estimator : estimator object implementing 'fit'
        The object to use to fit the data.
    X : array-like of shape (n_samples, n_features)
        The data to fit. Can be for example a list, or an array.
    y : array-like of shape (n_samples,) or (n_samples, n_outputs), default=None
        The target variable to try to predict in the case of
        supervised learning.
    score_func: callable, score(y_true, y_pred)
        The scoring function.
    cv: cross validate object implementing `split` method.
        The object to generate cross validate iterator.

    Returns
    -------
    cv_score : float
        Average of scores of the estimator for each run of the cross validation.
    """
    X, y = check_X_y(X, y)
    scores = []
    for train_idx, val_idx in cv.split(X):
        X_train, y_train = X[train_idx], y[train_idx]
        X_val, y_val = X[val_idx], y[val_idx]
        model = clone(estimator)
        model.fit(X_train, y_train)
        
        # classification and evaluate with probability
        if needs_proba:
            if hasattr(model, "predict_proba"):
                y_pred = model.predict_proba(X_val)
            elif hasattr(model, "decision_function"):
                y_des = model.decision_function(X_val)
                y_pred = softmax(y_des)
            else:
                raise AttributeError("""classifier has neither `predict_proba`
                                        nor `decision_function` methods""")
        # regression or classification evaluated on final prediction
        else:
            y_pred = model.predict(X_val)
        score = score_func(y_val, y_pred)
        scores.append(score)
    cv_score = np.mean(scores)
    return cv_score


class SelectFromLasso(SelectorMixin, MetaEstimatorMixin, BaseEstimator):
    """
    TODO: somethings the LARS path is singular, need more robust ranking.

    Implement the LARS algorithm as a feature selection/estimator object.

    Parameters
    ---------------
    estimator : estimator object implementing 'fit', default = LinearRegression()
        The object to use to fit the data after selection step.
    n_features_to_select: int, default = None
        The number of features to select. If None, all features will be kept.
    verbose: int.
        The verbosity.
    params: dict.
        Other optional keywords in sklearn.linear_models.lars_path.


    Attributes
    ---------------
    rank_: numpy array, dtype = np.int
        The order of elimination under LARS, the last to eliminate has highest rank.
    coef_: numpy array, dtype = np.float
        The average absolute value of coefficient along the LARS path.

    """

    def __init__(self, estimator=LinearRegression(), n_features_to_select=None,
                 verbose=0, **params):
        self.n_features_to_select = n_features_to_select
        self.params = params
        self.estimator = estimator
        self.coef_ = None

    def fit(self, X, y):
        return self._fit(X, y)

    def _fit(self, X, y):
        X, y = check_X_y(X, y)
        n_features = X.shape[1]

        _, active, coefs = lars_path(X, y, **self.params)
        if self.n_features_to_select is None:
            n_features_to_select = n_features
        else:
            n_features_to_select = self.n_features_to_select

        features = active[:n_features_to_select]
        support = np.zeros(n_features, dtype=np.bool)
        support[features] = True
        rank = np.zeros(n_features)
        rank[active] = np.arange(n_features, 0, -1)

        self.support_ = support
        self.rank_ = rank
        self.coef_ = np.mean(np.abs(coefs), axis=1)
        estimator = clone(self.estimator)
        self.estimator_ = estimator.fit(X[:, features], y)
        return self
    
    def _get_support_mask(self):
        check_is_fitted(self)
        return self.support_
    
    def predict(self, X):
        """Reduce X to the selected features and then predict using the
           underlying estimator.
        Parameters
        ----------
        X : array of shape [n_samples, n_features]
            The input samples.
        Returns
        -------
        y : array of shape [n_samples]
            The predicted target values.
        """
        check_is_fitted(self)
        return self.estimator_.predict(self.transform(X))


class RFS(SelectorMixin, MetaEstimatorMixin, BaseEstimator):
    """
    Recursive feature selection, both forward selection/backward elimination, 
    with a customized Estimator, scoring criteria, and cross validation method.

    Parameters
    ----------
    estimator : estimator object implementing 'fit'
        The object to use to fit the data.
    score_func: callable, score(y_true, y_pred)
        The scoring function.
    cv: cross validate object implementing `split` method.
        The object to generate cross validate iterator.
    forward: bool, default = True
        If True, run forward feature selection, otherwise backward elimination.
    tol: float, default = None
        An optional numerical criteria to early stop the selection process.
    n_features_to_select: int, default = None
        If forward is True, the maximum number of feature to select. If not, the
        minimum number of features to kept.
    """
    def __init__(self, estimator, score_func, cv, forward=True, tol=None,
                 n_features_to_select=None, verbose=0):
        self.estimator = estimator
        self.score_func = score_func
        self.tol = tol
        self.n_features_to_select = n_features_to_select
        self.cv = cv
        self.verbose = verbose
        self.forward = forward

    def fit(self, X, y):
        return self._fit(X, y)
    
    def _fit(self, X, y):
        X, y = check_X_y(X, y)
        n_sample, n_features = X.shape
        
        if self.n_features_to_select is None:
            n_step = n_features
        else:
            if self.forward:
                n_step = self.n_features_to_select 
            else:
                n_step = n_features - self.n_features_to_select
        n_step = min(max(0, n_step), n_features)

        if self.tol is None:
            tol = 0.0
        else:
            tol = self.tol
        
        features = np.arange(n_features)
        
        if self.forward:
            tag = True
            base_score = 0
            support = np.zeros(n_features, dtype=np.bool)
        else:
            tag = False
            estimator = clone(self.estimator)
            base_score = cross_val_score(estimator, X, y, self.score_func, self.cv)
            support = np.ones(n_features, dtype=np.bool)
        
        candidate = np.ones(n_features, dtype=np.bool)
        rank = np.zeros(n_features, dtype=np.float)
        feature_importance = np.zeros(n_features, dtype=np.float)

        for step in range(n_step):
            scores = []
            w = step / (1 + step)
            for idx in features[candidate]:
                estimator = clone(self.estimator)
                support_ = support.copy()
                support_[idx] = tag
                score = cross_val_score(estimator, X[:, features[support_]], y, self.score_func, self.cv)
                feature_importance[idx] = w * feature_importance[idx] + (1 - w) * score
                rank[idx] += 1.0
                scores.append(score)
            scores = pd.Series(index=features[candidate], data=scores)
            best_idx, best_score = scores.idxmax(), scores.max()
            improve = best_score - base_score
            if improve < tol:
                break
            else:
                base_score = best_score
                support[best_idx] = tag
                candidate[best_idx] = False

        if self.forward:
            # unselected get a rank of 0
            rank = max(rank) - rank     
   
        self.support_ = support
        self.rank_ = rank
        self.feature_importance_ = feature_importance
        self.estimator_ = clone(self.estimator)
        features = np.arange(n_features)[support]
        if np.any(self.support_):
            self.estimator_.fit(X[:, features], y)
        else:
            # just fit on all data
            self.estimator_.fit(X, y)
        return self

    def predict(self, X):
        check_is_fitted(self)
        if np.any(self.support_):
            return self.estimator_.predict(self.transform(X))
        else:
            return np.zeros(X.shape[0])
    
    def _get_support_mask(self):
        check_is_fitted(self)
        return self.support_


class ZScoreTransform(TransformerMixin):
    def __init__(self, alpha, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.alpha = alpha

    def fit(self, X, y=None):
        return self

    def transform(self, X, y=None):
        X, y = check_X_y(X, y)
        X_ = pd.DataFrame(X)
        grp = X_.ewm(alpha=self.alpha)
        zscore = (X_ - grp.mean()) / grp.std()
        zscore = zscore.fillna(0)
        return zscore.values


class FastGBM(RegressorMixin, BaseEstimator):
    def __init__(self, cv, n_trials, *args, **kwargs):
        """
        automatic fit lightgbm regression
        """
        super().__init__(*args, **kwargs)
        self.cv = cv
        self.n_trials = n_trials 
        self.params = None

    def fit(self, X, y):
        X, y = check_X_y(X, y)

        def objective(trial):
            param = {
                "verbosity": -1,
                "boosting_type": "gbdt",
                "lambda_l1": trial.suggest_loguniform("lambda_l1", 1e-8, 10.0),
                "lambda_l2": trial.suggest_loguniform("lambda_l2", 1e-8, 10.0),
                "num_leaves": trial.suggest_int("num_leaves", 2, 256),
                "feature_fraction": trial.suggest_uniform("feature_fraction", 0.4, 1.0),
                "bagging_fraction": trial.suggest_uniform("bagging_fraction", 0.4, 1.0),
                "bagging_freq": trial.suggest_int("bagging_freq", 1, 7),
                "min_child_samples": trial.suggest_int("min_child_samples", 5, 100),
                "num_boost_rounds": trial.suggest_int("num_boost_rounds", 5, 100)
            }

            gbm = lgb.LGBMRegressor(**param)
            return cross_val_score(gbm, X, y, r2_score, self.cv)

        optuna.logging.set_verbosity(0)
        study = optuna.create_study(direction="maximize")
        study.optimize(objective, n_trials=self.n_trials, show_progress_bar=True)
        self.estimator_ = lgb.LGBMRegressor(**study.best_params).fit(X, y)
        self.params = study.best_params
        return self
    
    def predict(self, X):
        check_is_fitted(self)
        return self.estimator_.predict(X)
    
    def __repr__(self):
        return repr(self.estimator_)


class FastLR(RegressorMixin, BaseEstimator):
    """
    fast scan through common sklearn linear type models for regression task
    """
    def __init__(self, cv, n_trials, mode="light", *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.cv = cv
        self.n_trials = n_trials
        self.mode = mode
        self.space = self.get_space(mode)
    
    def get_space(self, mode):
        space = {}
        if mode == "light":
            space["preprocess"] = ["standard", "nothing"] 
            space["regressor"] = ["lr", "ridge"]
        else:
            space["preprocess"] = ["standard", "robust", "zscore", "nothing"]
            space["regressor"] = ["lr", "ridge", "svr", "lasso"]        
        return space
        
    def create_model(self, params):
        steps = []
        # check possible pre-processing
        preprocessing = params["preprocess"]

        if preprocessing == "standard":
            steps.append(("standar", StandardScaler()))
        elif preprocessing == "robust":
            steps.append(("robust", RobustScaler()))
        elif preprocessing == "zscore":
            alpha = params["zscore_alpha"]
            steps.append(("zscore", ZScoreTransform(alpha=alpha)))

        # check feature selection step
        selection = params["feature_selection"]
        if selection == "lasso":
            n_features_to_select = params["n_features_to_select"]
            steps.append(
                ("lasso_select",
                 SelectFromLasso(n_features_to_select=n_features_to_select)))

        lr_algo = params["regressor"]
        if lr_algo == "lr":
            steps.append(("lr", LinearRegression()))
        elif lr_algo == "ridge":
            alpha = params["ridge_alpha"]
            steps.append(("ridge", Ridge(alpha=alpha)))
        elif lr_algo == "svr":
            kernel = params["svr_kernel"]
            C = params["svr_C"]
            steps.append(("ridge", SVR(C=C, kernel=kernel)))
        else:
            alpha = params["lasso_alpha"]
            positive = params["lasso_positive"]
            fit_intercept = params["lasso_fit_intercept"]
            steps.append(("lasso", Lasso(alpha=alpha, positive=positive, fit_intercept=fit_intercept)))
        model = Pipeline(steps)
        return model

    def fit(self, X, y): 
        X, y = check_X_y(X, y)

        def objective(trial):
            steps = []    
            # check possible pre-processing
            preprocessing = trial.suggest_categorical("preprocess", self.space["preprocess"])

            if preprocessing == "standard":
                steps.append(("standar", StandardScaler()))
            elif preprocessing == "robust":
                steps.append(("robust", RobustScaler()))
            elif preprocessing == "zscore":
                alpha = trial.suggest_loguniform("zscore_alpha", 0.01, 0.3)
                steps.append(("zscore", ZScoreTransform(alpha=alpha)))
            
            # check feature selection step
            selection = trial.suggest_categorical("feature_selection", ["lasso", "nothing"])
            if selection == "lasso":
                k = trial.suggest_int("n_features_to_select", 1, X.shape[1]+1)
                steps.append(("lasso_select", SelectFromLasso(n_features_to_select=k)))

            lr_algo = trial.suggest_categorical("regressor", self.space["regressor"])
            if lr_algo == "lr":
                steps.append(("lr", LinearRegression()))
            elif lr_algo == "ridge":
                alpha = trial.suggest_loguniform("ridge_alpha", 1e-4, 10)
                steps.append(("ridge", Ridge(alpha=alpha)))
            elif lr_algo == "svr":
                kernel = trial.suggest_categorical("svr_kernel", ["rbf", "linear"])
                C = trial.suggest_loguniform("svr_C", 1e-4, 10)
                steps.append(("ridge", SVR(C=C, kernel=kernel)))
            else:
                alpha = trial.suggest_loguniform("lasso_alpha", 1e-4, 10)
                positive = trial.suggest_categorical("lasso_positive", [True, False])
                fit_intercept = trial.suggest_categorical("lasso_fit_intercept", [True, False])
                steps.append(("lasso", Lasso(alpha=alpha, positive=positive, fit_intercept=fit_intercept)))

            model = Pipeline(steps)
            return cross_val_score(model, X, y, r2_score, self.cv)

        optuna.logging.set_verbosity(0)
        study = optuna.create_study(direction="maximize")
        study.optimize(objective, n_trials=self.n_trials, show_progress_bar=True)
        estimator = self.create_model(study.best_params)
        self.estimator_ = estimator.fit(X, y)
        return self
    
    def predict(self, X):
        X = check_array(X)
        check_is_fitted(self)
        return self.estimator_.predict(X)

    def __repr__(self):
        return repr(self.estimator_)

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\filter.py
----------------------------------------
import numpy as np
import pandas as pd


def view_near(f, n=3):
    """
    Given a filter, create a blob around the True value of size n.

    Parameters:
    f: array-like, 1D, bool
        Filter.
    n: int, (default = 3)
        Number of nearest neighbor to see.
    
    Return:
    q: array-like, 1D, bool
        Filter that is aligned with f such that the True value of f is pasted
        to nearby `n` data points.
    """
    q = f.copy()
    for i in range(1, n + 1):
        q |= f.shift(i).fillna(False) | f.shift(-i).fillna(False)
    return q


def filtergood(x, f=None):
    """
    Convenient function to generate filter invalid data along with an optional filter. 

    Parameters
    ------------
    x: array-like, 1D
        Input data.
    f: array-like, bool, optional, (default = None)
        Optional filter.
    
    Return:
    --------------
    q: array-like, 1D, bool
        Filter aligned with `x` such that the value of `x` is finite and non-empty
        and satisfies `f`.
    """
    q = np.isfinite(x)
    if f is not None:
        q = q & f
    return q


def trimqt(x, low, high):
    """
    A helper function that calculate the percentile of x at low/high.
    """
    assert isinstance(low, float)
    assert isinstance(high, float)
    assert low <= 1.0
    assert low >= 0.0
    assert high <= 1.0
    assert high >= 0.0
    assert low <= high

    lo, hi = np.quantile(x, [low, high])
    return lo, hi


def inquantile(x, low, high, f=None):
    """
    Given an array of values and lower/upper percentiles, select those within the range.

    Parameters:
    x: array-like, 1D.
        Input data.
    low: float
        Lower bounds.
    high: float
        Upper bounds.
    f: array-like, 1D, bool, optional, (default = None)
        Optional filter.
    
    Return:
    q: array-like, 1D, bool
        Filter aligned with `x` such that `f` is satisfied and the value of
        `x` is bounded by `low` and `high` percentile.

    """

    f_good = filtergood(x, f)
    lo, hi = trimqt(x[f_good], low, high)
    q = f_good & (x < hi) & (x > lo)
    return q


def inrange(x, low, high, f=None):
    """
    Given an array of values and lower/upper limits, select those within the range.

    Parameters:
    x: array-like, 1D.
        Input data.
    low: float, array-like, 1D.
        Lower bounds.
    high: float, array-like, 1D.
        Upper bounds.
    f: array-like, 1D, bool, optional, (default = None)
        Optional filter.
    
    Return:
    q: array-like, 1D, bool
        Filter aligned with `x` such that `f` is satisfied and the value of
        `x` is bounded by `low` and `high` element-wise.

    """
    if np.all(low > high):
        high, low = low, high
    elif np.all(high >= low):
        pass
    else:
        raise ValueError('low, high are not properly ordered.')
    
    f_good = filtergood(x, f)    
    f_bound = (x <= high) & (x >= low)
    q = f_good & f_bound
    return q


def randchunk(x, n=10):
    """
    Randomly sample from various data input types.
    It returns the sampled index without replacement.
    
    Parameters
    ---------------
    x: array-like
        Input data to be sampled from.
    n: int, (default = 10)
        Number of samples to draw from.
    
    Return
    ---------------
    f: 1D array, bool
        f evaluate to True on selected samples.
    
    Example Usage
    ---------------
    df = pd.DataFrame(data=np.random.randn(100, 2), columns=list("AB"))
    r = randchunk(df["A"] > 1.0, 5)
    df[r]

    """
    def _randchunk_ndarray(x, n):
        if x.dtype == "bool":
            index = np.where(x)[0]
        else:
            index = np.arange(len(x))

        if len(index) < n:
            sample_indices = index
        else:
            sample_indices = np.random.choice(index, size=n, replace=False)
        f = np.ones(len(x)) < 0
        f[sample_indices] = True
        return f

    m = len(x)
    if isinstance(x, np.ndarray):
        return _randchunk_ndarray(x, n)
    elif isinstance(x, pd.Series):
        return _randchunk_ndarray(x.values, n)
    elif isinstance(x, pd.DataFrame):
        return _randchunk_ndarray(np.arange(m), n)
    else:
        raise TypeError('x must either be numpy array, or pandas series, or pandas dataframe.')

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\gscatter.py
----------------------------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, HuberRegressor
from sklearn.metrics import r2_score, mean_squared_error
import statsmodels.api as sm

from .filter import filtergood


def gscatter(x, y, f=None, aggfunc=np.mean, ngrp=100, show_stats=False,
             robust_regression=False, show_plot=True, ax=None,
             *args, **kwargs):
    """
    Given two pandas series/numpy arrays x, y that are aligned with each other,
    group them according to sorted x values and apply a customized aggregation
    function to y, then plot the aggregated group scatters.
    
    A OLS regression is called upon the vanilla (x, y) pairs and coefficients
    reported.

    Parameters
    -------------
    x: array-like
        Independent data.
    y: array-like
        Dependent data.
    f: array like, bool, optional, (default = None)
        An optional filter to be applied on x and y before analysis.
    aggfunc: callable, (default = numpy.mean)
        Function to be applied on grouped x and y.
    ngrp: int, (default = 100)
        Number of groups to "downsample" (x, y) pairs. In default setting, each
        point in the final output represent 1% of (filtered) data.
    show_stats: bool, (default = True)
        Whether to display the fitting statistics.
    robust_regression: bool, (default=False)
        Whether to apply a Huber regression instead of OLS to remove outlier affects.
    show_plot: bool, (default = True)
        Whether to display the scatter plot with regression fit.
    ax: matplotlib.pyplot.axes, optional, (default=None)
        An axes to draw the scatter plot.
    *args, **kwargs: ploting parameters passed to
                        matplotlib.plot.pyplot.scatter
    
    Return
    ---------------
    stats: dict
        Statistics of the fit and grouped x/y values.
    """

    f_good = filtergood(x) & filtergood(y)
    if f is not None:
        freq = (f & f_good).sum() / f_good.sum()
        f = f & f_good
    else:
        freq = 1
        f = f_good
    x = np.array(x[f])
    y = np.array(y[f])

    # reorder x, y by sorting x for further grouping
    ix = np.argsort(x)
    x = x[ix]
    y = y[ix]
    
    # No enough sample, just do a scatter plot.
    if len(x) <= ngrp:
        ngrp = len(x) - 1
    xg = np.zeros(ngrp,)
    yg = np.zeros(ngrp,)
    q, r = divmod(len(x), ngrp)
    cuts = list(range(0, (ngrp-r+1)*q, q))
    cuts.extend(list(range((ngrp-r+1)*q, len(x), q+1)))
    for i in range(ngrp):
        xg[i] = np.mean(x[cuts[i]:cuts[i+1]])
        yg[i] = aggfunc(y[cuts[i]:cuts[i+1]])

    # OLS to (x, y) data
    if robust_regression:
        mdl = HuberRegressor()
    else:
        mdl = LinearRegression()
    
    mdl.fit(x.reshape(-1, 1), y)
    xa = np.quantile(x, [0.001, 0.999])
    ya = mdl.predict(xa.reshape(-1, 1))
    y_pred = mdl.predict(x.reshape(-1, 1))
    r2 = r2_score(y, y_pred)
    mse = mean_squared_error(y, y_pred)

    stats = dict()
    stats['Beta'] = mdl.coef_[0]
    stats['Alpha'] = mdl.intercept_
    stats['RSquare'] = r2
    stats['NGroup'] = ngrp
    stats['Count'] = len(x)
    stats['IC'] = np.corrcoef(x, y)[0, 1]
    stats['Freq'] = freq
    stats['Good'] = f_good.mean()
    stats["RMSE"] = mse ** 0.5
    stats['ind_grp'] = xg
    stats['dep_grp'] = yg

    X2 = sm.add_constant(x.reshape(-1, 1))
    est = sm.OLS(y, X2)
    est = est.fit()
    stats["est"] = est

    if ax is None:
        fig = plt.figure()
        ax = fig.add_subplot(111)
    regline = f"y ~ {stats['Alpha']:.2f} + {stats['Beta']:.2f} * x, R2: {stats['RSquare']:.2%}, IC: {stats['IC']:.2%}"
    ax.plot(xa, ya, linewidth=3, alpha=0.5, label=regline)
    ax.scatter(xg, yg, *args, **kwargs)
    if show_plot:
        plt.legend()
        plt.show()

    if show_stats:
        print(est.summary2(xname=["Alpha", "Beta"]))

    return stats


def ggscatter(data, xcol, ycol, by, f=None, aggfunc=np.mean, ncol=2, ngrp=100,
              robust_regression=False):
    """
    Grouping version of gscatter, to display scatter drift over different labels.
    """
    if f is not None:
        grp = data[f].groupby(by)
    else:
        grp = data.groupby(by)
    
    stats = dict()
    
    N = len(grp) + 1
    nrow = (N + ncol - 1) // ncol
    _, axes = plt.subplots(nrow, ncol, figsize=[5 * ncol, 3 * nrow])
    stats = dict()

    func = lambda x, y, f, ax: gscatter(x, y, f, aggfunc=aggfunc, ngrp=ngrp,
                                        robust_regression=robust_regression,
                                        ax=ax, show_plot=False, show_stats=False)
    for idx, (name, xgrp) in enumerate(grp):
        i, j = divmod(idx, ncol)
        ax = axes[i][j]
        stats[name] = func(xgrp[xcol], xgrp[ycol], f=None, ax=ax)
        ax.legend()
        ax.set_title(name)
    
    # plot everything
    i, j = divmod(N - 1, ncol)
    ax = axes[i][j]
    stats["all"] = func(data[xcol], data[ycol], f=f, ax=ax)
    ax.legend()
    ax.set_title("all")
    plt.tight_layout()
    plt.show()

    # collect alpha/beta/r2 drift
    stats = pd.DataFrame.from_dict(stats, orient="index")[["Alpha", "Beta", "RSquare"]]
    stats.plot(subplots=True, marker="o", figsize=[6, 9])
    plt.show()
    return stats


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\labeling.py
----------------------------------------
import pandas as pd
import numpy as np
from tqdm import tqdm
from .resample_asof import ts_asof


def add_vertical_barrier(event_ts, ref_ts, hold_period=None):
    """
    Helper function that calculate the vertical blocks.
    """
    if hold_period is not None:
        vertical_ts = event_ts + pd.Timedelta(hold_period)
        nearest_ts = pd.merge_asof(pd.DataFrame(index=vertical_ts),
                                   pd.DataFrame(index=ref_ts, data={"ts": ref_ts}),
                                   left_index=True, right_index=True)
        vertical_ts = nearest_ts["ts"]
        vertical_ts.index = event_ts
    else:
        vertical_ts = pd.Series(index=event_ts, data=ref_ts[-1])
    return vertical_ts


def label_a_path(xdf, dt, row, trailing_stop=False):
    price_path = xdf.loc[dt:row["barrier"], "level"]
    sig_path = xdf.loc[dt:row["barrier"], "signal"]

    fixed_stop, fixed_limit = float(row["stop"]), float(row["limit"])
    df0 = (price_path - price_path.iloc[0]).to_frame()
    df0["signal"] = sig_path
    df0["stop"] = fixed_stop
    df0["limit"] = fixed_limit

    if trailing_stop:
        df0["stop"] = (df0["stop"] + df0["level"]).cummax()

    stopped = df0[df0["level"] < df0["stop"]].index.min()  # earliest stop loss
    limited = df0[df0["level"] > df0["limit"]].index.min()  # earliest profit taking
    blocked = sig_path[sig_path].index.min()  # earliest exit signal triggering

    is_stopped = stopped is not pd.NaT
    is_limited = limited is not pd.NaT
    is_blocked = blocked is not pd.NaT

    event_dt = row["barrier"]  # default is hold to maximum vertical barrier
    label = "V"
    if is_stopped and stopped < event_dt:
        event_dt = stopped
        label = "S"
    if is_limited and limited < event_dt:
        event_dt = limited
        label = "L"
    if is_blocked and blocked < event_dt:
        event_dt = blocked
        label = "B"

    target = df0.loc[event_dt]
    return dict(entry_ts=dt, sl=stopped, pt=limited, blk=blocked,
                exit=event_dt, target=target['level'], label=label)


def label_triple_barrier(event_ts, level, pl_unit, stop_factor=0.0,
                         limit_factor=0.0, hold_period=None,
                         signal=None, n_job=-1, trailing_stop=False):
    """
    Triple Barrier Labeler in the sense of de Prado Chap 3.

    Given a price history defined by `level`, two horizontal barriers defined
    by `pl_unit`, `stop_factor`, and `limit_factor`, two vertical barriers
    defined by `signal` and `hold_period`, a long and hold strategy will be 
    carried out for potential entering times defined by `event_ts` according
    to the following rules:
    
    1. The next available price in `level` will be used as the entry for each `event_ts`
    2. If `signal` is not None, the next available price in `level` will be used as exit
    3. If `stop_factor`/`limit_factor` is not None, the strategy exit when touching it.
    4. If `hold_period` is not None, the strategy will exit when holding longer than that.
    
    The final label of the event will be dertermined by the earliest of the 4 or
    less cases whenever they are meaningful. In the output, a string label is
    used to denote the earliest event that triggeres the exit:

    V: hold period
    S: stopped
    L: limit
    B: signal

    If two or more events are triggered at the same time, the label will be taken
    from this ordering, so if S and B are both the earliest event, S will be shown.

    Parameters
    ------------
    event_ts: pd.DateTimeIndex
        Represent the event timestamps to calculate labels for.
    level: pd.Series, index is pd.DateTimeIndex
        Time series level of a tradable.
    pl_unit: pd.Series, float
        Unit to measure the profit/loss of entry points.
    stop_factor: float, (default = 0.0)
        Stop loss the trade when PL is below `pl_unit * stop_factor`.
        If non-positive, will be ignored.
    limit_factor: float, (default = 0.0)
        Limit taking the trade when PL is above `pl_unit * limit_factor`.
        If non-positive, will be ignored.
    hold_period: str, optional, (default = None)
        To be parsed by pd.Timedelta. The maximum time to hold the position for.
        If unspecified, the position is carried until stop/limit is met.
    signal: optional, pd.DatetimeIndex,
        An optional signal for exiting the position.
    trailing_stop: bool
        If this is true, stop will mve upwards with the spot (but never move down)
    
    Return
    --------------
    res: pd.DataFrame
        index: event_ts
        entry_ts: timestamp when the position is entered
        sl: timestamp when the position is stopped loss
        pt: timestamp when the position is profit taking
        blk: timestamp when the position is blocked by signal/max holding
        exit: timestamp when the postion is exited
        target: the realized PL
        label: str
            V: maximum holding reached
            B: exit signal triggered
            S: stop loss
            L: profit taking

    """

    xdf = pd.DataFrame(index=level.index)

    # align entry and signal to level timestamps
    pid = ts_asof(event_ts, level.index, direction="forward")
    pid = pid[pid >= 0]
    entry_ts = pd.DatetimeIndex(level.index[pid])

    # earlist signal to trigger an exit event
    signal_exit = pd.Series(index=level.index, data=False)
    if signal is not None:
        eid = ts_asof(signal, level.index, direction="forward")
        signal_exit.iloc[eid[eid >= 0]] = True

    if limit_factor > 0:
        xdf["limit"] = limit_factor * pl_unit
    else:
        xdf["limit"] = pd.Series(index=level.index)  # NaNs
    
    if stop_factor > 0:
        xdf["stop"] = -stop_factor * pl_unit
    else:
        xdf["stop"] = pd.Series(index=level.index)  # NaNs
    
    xdf["signal"] = signal_exit
    xdf["level"] = level
    event_df = xdf.loc[entry_ts, :].copy()
    event_df["barrier"] = add_vertical_barrier(entry_ts, level.index, hold_period)

    res = []
    for dt, row in tqdm(event_df.iterrows()):
        res.append(label_a_path(xdf, dt, row, trailing_stop=trailing_stop))
    
    res = pd.DataFrame(res)
    res.index = event_ts
    res.index.name = "event_ts"
    return res.sort_index()

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\overfitting_tests.py
----------------------------------------
import pandas as pd
import numpy as np
import scipy.stats
from data_analysis.data_analysis.randomness_test import get_sharpe_distribution, get_p_value, get_sharpe_distribution_multi
from data_analysis.data_analysis.deprado import probabilistic_sharpe_ratio, deflated_sharpe_ratio
from data_analysis.data_analysis.cscv import get_cscv_test, _sharpe
import matplotlib.pyplot as plt
from typing import Union, Dict, Tuple
from enum import Enum



def _remove_silent_signal(clean_daily_pnls):
    for col in clean_daily_pnls.columns:
        if (clean_daily_pnls[col] == 0).all():
            clean_daily_pnls.drop(col, inplace=True, axis=1)
    return clean_daily_pnls


def run_overfitting_tests(df_daily_pnls: pd.DataFrame, df_positions: pd.DataFrame = None, df_tri_ret: pd.Series = None,
                          trials: int = 1000, signal_selected: str = None, seed: int = 0,
                          plot: bool = True, figname: str = None, bins: int = 30, verbose: bool = False) -> pd.DataFrame:
    """
    high level api to do SSL overfitting tests, PSR, DSR, CSCV, and generate tests report
    :param df_daily_pnls: DataFrame of daily pnls. This position DataFrame will be used to calculate sharpe, and also
            feed into PSR, DSR, CSCV tests.
            Each column contains pnl for one set of parameters, rows with NaN will be dropped
    :param df_positions: DataFrame of position used for all SSL tests, the column names should be same as df_daily_pnls.
            Each column contains position for one set of parameters, rows with NaN will be dropped
    :param df_tri_ret:  Series of tri daily return, used to generate Monte Carlo path for SSL shuffle test and
            SSL bootstrapping test
    :param trials: number of trials used in all SSL tests
    :param signal_selected: str of signal name to be tested, if it is None then only test the best sharpe,
            it should be in column of input DataFrame
    :param plot: boolean, whether to plot test results
    :param figname: str, whether to save the resulting plot, if save then no plot will be displayed
    :param bins: int, control the plot histogram bins
    :param seed: random seed used in all SSL tests
    :param verbose: whether to print timer
    :return:
    """
    clean_daily_pnls = df_daily_pnls.dropna(how='all', axis=1)
    clean_daily_pnls.dropna(how='any', inplace=True)
    clean_daily_pnls = _remove_silent_signal(clean_daily_pnls)
    sharpes = clean_daily_pnls.apply(_sharpe)
    best_sharpe = sharpes.max()
    best_sharpe_col = sharpes.sort_values(ascending=False).index[0]

    if df_tri_ret is not None:
        clean_tri_ret = df_tri_ret.dropna()  # drop the NaNs in tri returns
    if df_positions is not None:
        clean_pos = df_positions.loc[clean_tri_ret.index, clean_daily_pnls.columns]
        clean_pos = clean_pos.dropna(how='any')  # drop the NaNs in positions

    results = {'best_sharpe': best_sharpe,
               'best_sharpe_col': best_sharpe_col}

    if signal_selected:
        assert signal_selected in clean_daily_pnls.columns
        if df_positions is not None:
            assert signal_selected in clean_pos.columns

        selected = signal_selected
        selected_sharpe = sharpes.loc[selected]
        results.update({'selected_sharpe': selected_sharpe,
                        'selected_col': selected})
    else:
        selected = best_sharpe_col
        selected_sharpe = best_sharpe

    # SSL tests
    # we report 1 - p_val here, thus it follows convention that a higher test results suggest less likely to overfit
    if df_positions is not None and df_tri_ret is not None:
        if verbose:
            logtime("start to run SSL brownian test")
        ssl_brownian = get_sharpe_distribution(
            predictions=clean_pos.T.values, trials=trials, generator_option="normal", sr=selected_sharpe, seed=seed)
        results["SSL brownian"] = 1 - ssl_brownian[1]

        if verbose:
            logtime("start to run SSL shuffle test")
        ssl_shuffle = get_sharpe_distribution(
            predictions=clean_pos.T.values, trials=trials, generator_option="shuffle", original_array=clean_tri_ret.values,
            sr=selected_sharpe, seed=seed)
        results["SSL shuffle"] = 1 - ssl_shuffle[1]

        if verbose:
            logtime("start to run SSL bootstrapping test")
        ssl_bootstrapping = get_sharpe_distribution(
            predictions=clean_pos.T.values, trials=trials, generator_option="resample", original_array=clean_tri_ret.values,
            sr=selected_sharpe, seed=seed)
        results["SSL bootstrapping"] = 1 - ssl_bootstrapping[1]

    # PSR DSR
    # the sr parameter in PSR is daily sharpe rather than annual sharpe, thus cannot use best_sharpe here
    if verbose:
        logtime("start to run PSR test")
    # get probabilistic sharpe ratio, null hypothesis mean, standard deviation
    # no annualization is applied here
    psr, sr_benchmark, sr_std = probabilistic_sharpe_ratio(returns=clean_daily_pnls[selected])
    results["PSR"] = psr
    sr_benchmark, sr_std = sr_benchmark * np.sqrt(252), sr_std * np.sqrt(252)

    if verbose:
        logtime("start to run DSR test")
    # get deflated sharpe ratio, null hypothesis mean, standard deviation
    # no annualization is applied here
    dsr, expected_max_sr, max_sr_std = deflated_sharpe_ratio(trials_returns=clean_daily_pnls,
                                                             returns_selected=clean_daily_pnls[selected])
    results["DSR"] = dsr
    expected_max_sr, max_sr_std = expected_max_sr * np.sqrt(252), max_sr_std * np.sqrt(252)

    # plot
    if plot:
        _, axes = plt.subplots(nrows=4, ncols=2, figsize=(16, 18))
        if df_positions is not None and df_tri_ret is not None:
            x_min, x_max = min(sr_benchmark - 3 * sr_std, np.quantile(ssl_bootstrapping[0], 0.001), best_sharpe - 0.1), \
                        max(expected_max_sr + 4 * max_sr_std, np.quantile(ssl_bootstrapping[0], 0.999), best_sharpe + 0.1)
        else:
            x_min, x_max = min(sr_benchmark - 3 * sr_std, best_sharpe - 0.1), max(expected_max_sr + 4 * max_sr_std, best_sharpe + 0.1)
        x = np.linspace(x_min, x_max, 200)

        # DSR
        ax = axes[0][0]
        ax.plot(x, scipy.stats.norm.pdf(x, expected_max_sr, max_sr_std), label='DSR distribution')
        ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
        if signal_selected:
            ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

        ax.legend()
        ax.set_title('DSR sharpe distribution density')
        ax.set_xlim(x_min, x_max)

        # PSR
        ax = axes[0][1]
        ax.plot(x, scipy.stats.norm.pdf(x, sr_benchmark, sr_std), label='PSR distribution')
        ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
        if signal_selected:
            ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

        ax.legend()
        ax.set_title('PSR sharpe distribution density')
        ax.set_xlim(x_min, x_max)

        if df_positions is not None and df_tri_ret is not None:
            # brownian
            ax = axes[1][0]
            ax.hist(ssl_brownian[0], label='SSL Brownian distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Brownian Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

            # shuffle
            ax = axes[2][0]
            ax.hist(ssl_shuffle[0], label='SSL Shuffle distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Shuffle Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

            # bootstrapping
            ax = axes[3][0]
            ax.hist(ssl_bootstrapping[0], label='SSL Bootstrapping distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Bootstrapping Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

    # CSCV
    if verbose:
        logtime("start to run CSCV test")
    if plot:
        res_cscv = get_cscv_test(clean_daily_pnls, plot=plot, axes=np.array([axes[1][1], axes[2][1], axes[3][1]]))
        if figname is None:
            plt.show()
        else:
            plt.savefig(figname)
            plt.close()
    else:
        res_cscv = get_cscv_test(clean_daily_pnls, plot=plot)
    
    results["CSCV prob non-overfitting"] = res_cscv['prob_nof']
    results["CSCV OOS sharpe>0"] = res_cscv['obj_above_zero']

    if verbose:
        logtime("finished all tests")

    results = pd.DataFrame.from_dict(results, orient='index', columns=['value'])

    return results


def run_overfitting_tests_multi(df_daily_pnls: pd.DataFrame, df_positions: Union[pd.DataFrame, Dict[str, pd.DataFrame]] = None,
                                df_tri_ret: pd.DataFrame = None, trials: int = 1000, signal_selected: str = None,
                                seed: int = 0, plot: bool = True, figname: str = None, bins: int = 30,
                                verbose: bool = False) -> pd.DataFrame:
    """
    Multi tradable version of run_overfitting_tests.
    high level api to do SSL overfitting tests, PSR, DSR, CSCV, and generate tests report

    :param df_daily_pnls: DataFrame of daily pnls (aggregated across different tradable).
            This position DataFrame will be used to calculate sharpe, and also
            feed into PSR, DSR, CSCV tests.
            Each column contains pnl for one set of parameters, rows with NaN will be dropped
    :param df_positions: Multi-index column DataFrame, or dictionary of DataFrame of position used for all SSL tests.
            If Multi-index column DataFrame, 1st level is different parameter and 2nd level is different tradable.
            If dictionary of DataFrame, the key of dictionary is different parameters, and the values are DataFrames,
            with different column contains position for different position.
             Rows with NaN will be dropped
    :param df_tri_ret:  DataFrame of tri daily return of different tradable, used to generate Monte Carlo path for
            SSL shuffle test and SSL bootstrapping test
    :param trials: number of trials used in all SSL tests
    :param signal_selected: str of signal name to be tested, if it is None then only test the best sharpe,
            it should be in column of input DataFrame
    :param plot: boolean, whether to plot test results
    :param figname: str, whether to save the resulting plot, if save then no plot will be displayed
    :param bins: int, control the plot histogram bins
    :param seed: random seed used in all SSL tests
    :param verbose: whether to print timer
    :return:

    Example of inputs:
    df_daily_pnls:
                param1  param2
        day1    pnl11    pnl12
        day2    pnl21   pnl22
        day3    pnl31   pnl32
        ...

    df_positions:
        param       param1          param2
        tradable    EUR     JPY     EUR     JPY
        day1        pos11   pos12   pos13   pos14
        day2        pos21   pos22   pos23   pos24
        day3        pos31   pos32   pos33   pos34
        ...

    or {
        param1:
                            EUR     JPY
                day1        pos11   pos12
                day2        pos21   pos22
                day3        pos31   pos32
                ...  ,
        param2:
                            EUR     JPY
                day1        pos13   pos14
                day2        pos23   pos24
                day3        pos33   pos34   ,
                ...
        }

    df_tri_ret:
            EUR         JPY
    day1    tri_ret11   tri_ret12
    day2    tri_ret21   tri_ret22
    day3    tri_ret31   tri_ret32
    ...

    """
    clean_daily_pnls = df_daily_pnls.dropna(how='all', axis=1)
    clean_daily_pnls.dropna(how='any', inplace=True)
    clean_daily_pnls = _remove_silent_signal(clean_daily_pnls)
    sharpes = clean_daily_pnls.apply(_sharpe)
    best_sharpe = sharpes.max()
    best_sharpe_col = sharpes.sort_values(ascending=False).index[0]
    params = df_daily_pnls.columns

    if df_tri_ret is not None:
        assert isinstance(df_tri_ret, pd.DataFrame)
        clean_tri_ret = df_tri_ret.dropna(axis=0, how='any').sort_index(axis=1)  # drop the NaNs, and sort columns
        tradables = df_tri_ret.columns
    if df_positions is not None:
        if isinstance(df_positions, pd.DataFrame):
            assert df_positions.columns.nlevels == 2, """df_positions need to have 2 level of columns, 
            with 1st level as different parameter, and 2nd level as different tradable"""
            params_pos = list(set(col[0]for col in df_positions.columns))
            for p in params:
                assert p in params_pos, f"config {p} found in df_tri_ret but not in df_positions"
            for p in params_pos:
                assert p in params, f"config {p} found in df_positions but not in df_tri_ret"
            dict_positions = {p: df_positions[p] for p in params_pos}

        elif isinstance(df_positions, dict):
            for p in params:
                assert p in df_positions.keys(), f"config {p} found in df_tri_ret but not in df_positions"
            for p in df_positions.keys():
                assert p in params, f"config {p} found in df_positions but not in df_tri_ret"
            dict_positions = df_positions.copy()
        else:
            raise ValueError("df_positions should be DataFrame of dict of DataFrame")

        for p in dict_positions:
            for t in tradables:
                if t not in dict_positions[p].columns:
                    dict_positions[p][t] = 0    # make sure all tradable appear in each params
        positions = pd.concat(dict_positions, axis=1)
        # clean_pos = positions.loc[clean_tri_ret.index]
        # drop the NaNs, and sort columns, consistent with clean_tri_ret, thus numpy array are aligned
        clean_pos = positions.dropna(axis=0, how='any').sort_index(axis=1)

    results = {'best_sharpe': best_sharpe,
               'best_sharpe_col': best_sharpe_col}

    if signal_selected:
        assert signal_selected in clean_daily_pnls.columns
        if df_positions is not None:
            assert signal_selected in clean_pos.columns

        selected = signal_selected
        selected_sharpe = sharpes.loc[selected]
        results.update({'selected_sharpe': selected_sharpe,
                        'selected_col': selected})
    else:
        selected = best_sharpe_col
        selected_sharpe = best_sharpe

    # SSL tests
    # we report 1 - p_val here, thus it follows convention that a higher test results suggest less likely to overfit
    if df_positions is not None and df_tri_ret is not None:
        n_days = len(clean_pos.index)
        if verbose:
            logtime(f"number of configs: {len(params)}, number of tradables: {len(tradables)}, number of days: {n_days}")
        predictions = clean_pos.T.values.reshape([len(params), len(tradables), n_days])
        original_array = clean_tri_ret.T.values
        if verbose:
            logtime("start to run SSL brownian test")
        ssl_brownian = get_sharpe_distribution_multi(
            predictions=predictions, trials=trials, generator_option="normal", sr=selected_sharpe, seed=seed)
        results["SSL brownian"] = 1 - ssl_brownian[1]

        if verbose:
            logtime("start to run SSL shuffle test")
        ssl_shuffle = get_sharpe_distribution_multi(
            predictions=predictions, trials=trials, generator_option="shuffle",
            original_array=original_array,
            sr=selected_sharpe, seed=seed)
        results["SSL shuffle"] = 1 - ssl_shuffle[1]

        if verbose:
            logtime("start to run SSL bootstrapping test")
        ssl_bootstrapping = get_sharpe_distribution_multi(
            predictions=predictions, trials=trials, generator_option="resample",
            original_array=original_array,
            sr=selected_sharpe, seed=seed)
        results["SSL bootstrapping"] = 1 - ssl_bootstrapping[1]

    # PSR DSR
    # the sr parameter in PSR is daily sharpe rather than annual sharpe, thus cannot use best_sharpe here
    if verbose:
        logtime("start to run PSR test")
    # get probabilistic sharpe ratio, null hypothesis mean, standard deviation
    # no annualization is applied here
    psr, sr_benchmark, sr_std = probabilistic_sharpe_ratio(returns=clean_daily_pnls[selected])
    results["PSR"] = psr
    sr_benchmark, sr_std = sr_benchmark * np.sqrt(252), sr_std * np.sqrt(252)

    if verbose:
        logtime("start to run DSR test")
    # get deflated sharpe ratio, null hypothesis mean, standard deviation
    # no annualization is applied here
    dsr, expected_max_sr, max_sr_std = deflated_sharpe_ratio(trials_returns=clean_daily_pnls,
                                                             returns_selected=clean_daily_pnls[selected])
    results["DSR"] = dsr
    expected_max_sr, max_sr_std = expected_max_sr * np.sqrt(252), max_sr_std * np.sqrt(252)

    # plot
    if plot:
        _, axes = plt.subplots(nrows=4, ncols=2, figsize=(16, 18))
        if df_positions is not None and df_tri_ret is not None:
            x_min, x_max = min(sr_benchmark - 3 * sr_std, np.quantile(ssl_bootstrapping[0], 0.001), best_sharpe - 0.1), \
                           max(expected_max_sr + 4 * max_sr_std, np.quantile(ssl_bootstrapping[0], 0.999),
                               best_sharpe + 0.1)
        else:
            x_min, x_max = min(sr_benchmark - 3 * sr_std, best_sharpe - 0.1), max(expected_max_sr + 4 * max_sr_std,
                                                                                  best_sharpe + 0.1)
        x = np.linspace(x_min, x_max, 200)

        # DSR
        ax = axes[0][0]
        ax.plot(x, scipy.stats.norm.pdf(x, expected_max_sr, max_sr_std), label='DSR distribution')
        ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
        if signal_selected:
            ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

        ax.legend()
        ax.set_title('DSR sharpe distribution density')
        ax.set_xlim(x_min, x_max)

        # PSR
        ax = axes[0][1]
        ax.plot(x, scipy.stats.norm.pdf(x, sr_benchmark, sr_std), label='PSR distribution')
        ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
        if signal_selected:
            ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

        ax.legend()
        ax.set_title('PSR sharpe distribution density')
        ax.set_xlim(x_min, x_max)

        if df_positions is not None and df_tri_ret is not None:
            # brownian
            ax = axes[1][0]
            ax.hist(ssl_brownian[0], label='SSL Brownian distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Brownian Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

            # shuffle
            ax = axes[2][0]
            ax.hist(ssl_shuffle[0], label='SSL Shuffle distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Shuffle Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

            # bootstrapping
            ax = axes[3][0]
            ax.hist(ssl_bootstrapping[0], label='SSL Bootstrapping distribution', bins=bins)
            ax.axvline(best_sharpe, ls='--', color='black', label='best sharpe')
            if signal_selected:
                ax.axvline(selected_sharpe, ls='--', color='red', label='selected sharpe')

            ax.legend()
            ax.set_title('SSL Bootstrapping Sharpe Distribution histogram')
            ax.set_xlim(x_min, x_max)

    # CSCV
    if verbose:
        logtime("start to run CSCV test")
    if plot:
        res_cscv = get_cscv_test(clean_daily_pnls, plot=plot, axes=np.array([axes[1][1], axes[2][1], axes[3][1]]))
        if figname is None:
            plt.show()
        else:
            plt.savefig(figname)
            plt.close()
    else:
        res_cscv = get_cscv_test(clean_daily_pnls, plot=plot)

    results["CSCV prob non-overfitting"] = res_cscv['prob_nof']
    results["CSCV OOS sharpe>0"] = res_cscv['obj_above_zero']

    if verbose:
        logtime("finished all tests")

    results = pd.DataFrame.from_dict(results, orient='index', columns=['value'])

    return results


def highlight_report(df_test: pd.DataFrame, threshold: float = 0.9, props: str = 'color:white;background-color:green'):
    """

    :param df_test: output DataFrame of function run_overfitting_tests
    :param threshold: float between 0 and 1, test result with value larger than threshold would be highlighted
    :param props: string to define format
    :return:
    """

    class RowHighLight:
        def __init__(self, threshold: float, props: str):
            self.threshold = threshold
            self.props = props

        def __call__(self, row: pd.Series):
            if row.name in ['SSL brownian', 'SSL shuffle', 'SSL bootstrapping', 'PSR', 'DSR',
                            'CSCV prob non-overfitting',
                            'CSCV OOS sharpe>0']:
                return [self.props if x > self.threshold else '' for x in row]
            else:
                return [''] * len(row)

    return df_test.style.apply(RowHighLight(threshold, props), axis=1)


def logtime(message: str = None) -> None:
    print(pd.Timestamp.now(), message)


class OverfittingTest(Enum):
    Brownian = 'SSL brownian'
    Shuffle = 'SSL shuffle'
    Bootstrapping = 'SSL bootstrapping'
    PSR = 'PSR'
    DSR = 'DSR'


def run_overfitting_test_for_each_parameter(df_daily_pnls: pd.DataFrame, df_positions: pd.DataFrame = None,
                                            df_tri_ret: pd.Series = None, trials: int = 1000, seed: int = 0,
                                            scope: Tuple[OverfittingTest] = None, verbose: bool = False) -> pd.DataFrame:
    """
    run overfitting test for each parameter, instead of on "best sharpe" or selected parameter
    this can be useful for signal selection, e.g. choose any signal with both brownian test and DSR results>0.9

    :param df_daily_pnls: DataFrame of daily pnls. This position DataFrame will be used to calculate sharpe, and also
           feed into PSR, DSR, CSCV tests.
           Each column contains pnl for one set of parameters, rows with NaN will be dropped
    :param df_positions:  DataFrame of position used for all SSL tests, the column names should be same as df_daily_pnls.
           Each column contains position for one set of parameters, rows with NaN will be dropped
    :param df_tri_ret: Series of tri daily return, used to generate Monte Carlo path for SSL shuffle test and
            SSL bootstrapping test
    :param trials: number of trials used in all SSL tests
    :param seed: random seed used in all SSL tests
    :param scope: which tests to perform, e.g. (OverfittingTest.DSR,) if None then will do all tests.
    :param verbose: whether to print timer
    :return: DataFrame of overfitting results, index is different parameter, column is different tests (and also sharpe)
           each value is between 0 and 1, a value close to 1 means unlikely to overfit
    """
    if scope is None:
        scope = (OverfittingTest.Brownian, OverfittingTest.Shuffle, OverfittingTest.Bootstrapping,
                 OverfittingTest.PSR, OverfittingTest.DSR)
    clean_daily_pnls = df_daily_pnls.dropna(how='all', axis=1)
    clean_daily_pnls.dropna(how='any', inplace=True)
    clean_daily_pnls = _remove_silent_signal(clean_daily_pnls)
    sharpes = clean_daily_pnls.apply(_sharpe)

    if df_tri_ret is not None:
        clean_tri_ret = df_tri_ret.dropna()  # drop the NaNs in tri returns
    if df_positions is not None:
        clean_pos = df_positions.loc[clean_tri_ret.index, clean_daily_pnls.columns]
        clean_pos = clean_pos.dropna(how='any')  # drop the NaNs in positions

    results = dict()
    results['sharpe'] = sharpes
    if df_positions is not None and df_tri_ret is not None:
        if OverfittingTest.Brownian in scope:
            if verbose:
                logtime("start to run SSL brownian test")
            ssl_brownian = get_sharpe_distribution(
                predictions=clean_pos.T.values, trials=trials, generator_option="normal", seed=seed)
            results['SSL brownian'] = 1 - sharpes.apply(lambda sr: get_p_value(ssl_brownian[0], sr))

        if OverfittingTest.Shuffle in scope:
            if verbose:
                logtime("start to run SSL shuffle test")
            ssl_shuffle = get_sharpe_distribution(
                predictions=clean_pos.T.values, trials=trials, generator_option="shuffle", original_array=clean_tri_ret.values,
                seed=seed)
            results['SSL shuffle'] = 1 - sharpes.apply(lambda sr: get_p_value(ssl_shuffle[0], sr))

        if OverfittingTest.Bootstrapping in scope:
            if verbose:
                logtime("start to run SSL bootstrapping test")
            ssl_bootstrapping = get_sharpe_distribution(
                predictions=clean_pos.T.values, trials=trials, generator_option="resample", original_array=clean_tri_ret.values,
                seed=seed)
            results['SSL bootstrapping'] = 1 - sharpes.apply(lambda sr: get_p_value(ssl_bootstrapping[0], sr))

    if OverfittingTest.PSR in scope:
        if verbose:
            logtime("start to run PSR test")
        # get probabilistic sharpe ratio, null hypothesis mean, standard deviation
        # no annualization is applied here
        results['PSR'] = clean_daily_pnls.apply(lambda pnl: probabilistic_sharpe_ratio(returns=pnl)[0])

    if OverfittingTest.DSR in scope:
        if verbose:
            logtime("start to run DSR test")
        # get deflated sharpe ratio, null hypothesis mean, standard deviation
        # no annualization is applied here
        results['DSR'] = clean_daily_pnls.apply(lambda pnl: deflated_sharpe_ratio(trials_returns=clean_daily_pnls,
                                                                                  returns_selected=pnl)[0])

    results = pd.DataFrame(results)
    return results

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\randomness_test.py
----------------------------------------
import numpy as np
from functools import partial
from typing import Callable


# class Optimizer:
#     def __init__(self, space, score_func, random_state=0, n_rounds=10, n_calls=10):
#         self.space = space
#         self.score_func = score_func
#         self.tried_predicts = []

#     def score(self, values, estimator, X, y):
#             params = {key: val for key, val in zip(self.space.keys(), values)}
#             estimator.set_params(**params)
#             prediction = estimator.predict(X)          
#             score = self.score_func(y, prediction)
#             return {"param": params, "prediction": prediction, "score": score}


#     def optimize(self, estimator, X, y):
#         time0 = time.time()

#         result = [self.score(values, estimator, X, y) for values in product(*self.space.values())]
#         self.tried_predicts = np.array([x["prediction"] for x in result])

#         best_val = result[0]["score"]
#         best_params = result[0]["param"]
#         for i in result:
#             if i["score"] > best_val:
#                 best_val = i["score"]
#                 best_params = i["param"]
#         estimator.set_params(**best_params)

#         return estimator, best_val

def get_pass_threshold(predictions: np.array, threshold: float = 0.95, trials: int = 1000) -> float:
    # predictions include all predictions tried in sample for optimization, and it is 2d array
    size = len(predictions[0])
    rets = np.reshape(np.random.normal(size=size * trials), [size, trials])  # rets has shape of (2770, 2000)
    # pnls = np.matmul(predictions, rets)          # pnls has shape of (40, 2000), predictions has shape of (40, 2770)
    stds = (np.matmul(predictions ** 2, rets ** 2) / size - np.matmul(predictions,
                                                                      rets) ** 2 / size / size) ** 0.5 + 1e-10
    means = (np.matmul(predictions, rets) / size)
    max_sharpes = np.max(means / stds, axis=0) * np.sqrt(252)
    return np.quantile(max_sharpes, threshold)


def get_sim_pvalue(predictions: np.array, score: float, trials: int = 1000) -> float:
    # predictions include all predictions tried in sample for optimization, and it is 2d array
    size = len(predictions[0])
    rets = np.reshape(np.random.normal(size=size * trials), [size, trials])  # rets has shape of (2770, 2000)
    # pnls = np.matmul(predictions, rets)          # pnls has shape of (40, 2000), predictions has shape of (40, 2770)
    stds = (np.matmul(predictions ** 2, rets ** 2) / size - np.matmul(predictions,
                                                                      rets) ** 2 / size / size) ** 0.5 + 1e-10
    means = (np.matmul(predictions, rets) / size)
    max_sharpes = np.max(means / stds, axis=0) * np.sqrt(252)
    return np.mean(max_sharpes > score)


def get_sharpe_distribution(predictions: np.array, trials: int = 1000, generator_option: str = 'normal',
                            generator: Callable[[int], np.array] = None, original_array: np.array = None,
                            seed: int = 0, sr: float = None, alpha: float = None) -> np.array:
    """
    Get the null distribution for SSL overfitting test.

    :param predictions: numpy 2d-array, each element is the position series through time
    :param trials:
    :param generator_option: 'normal', 'resample' or 'shuffle'
    :param generator: user-defined random path generator
    :param original_array: needed for 'resample' and 'shuffle' options 
    :param seed: random seed
    :param sr: sharpe ratio for calculating p-value
    :param alpha: significance level for calculating critical value
    :return: max_sharpes, p_val, crit_val
    """
    # predictions include all predictions tried in sample for optimization, and it is 2d array
    if seed is not None:
        np.random.seed(seed)

    if generator is None:
        if generator_option == 'normal':
            generator = np.random.normal
        elif generator_option == 'shuffle':
            assert original_array is not None, 'original return array not provided'
            generator = partial(gen_from_original_series, original_array=original_array, trials=trials, replace=False)
        elif generator_option == 'resample':
            assert original_array is not None, 'original return array not provided'
            generator = partial(gen_from_original_series, original_array=original_array, trials=trials, replace=True)
        else:
            raise NotImplementedError("Available generator_option: \'normal\', \'shuffle\', \'resample\'")

    size = len(predictions[0])

    rets = np.reshape(generator(size=size * trials), [size, trials], order='F')  # rets has shape of (2770, 2000)

    # pnls = np.matmul(predictions, rets)          # pnls has shape of (40, 2000), predictions has shape of (40, 2770)
    stds = (np.matmul(predictions ** 2, rets ** 2) / size - np.matmul(predictions, rets) ** 2 / size / size) ** 0.5 + 1e-10
    means = (np.matmul(predictions, rets) / size)
    max_sharpes = np.max(means / stds, axis=0) * np.sqrt(252)

    p_val = None
    crit_val = None

    if sr is not None:
        p_val = np.mean(max_sharpes > sr)
    
    if alpha is not None:
        crit_val = np.quantile(max_sharpes, 1 - alpha)
    
    return max_sharpes, p_val, crit_val


def gen_from_original_series(original_array: np.array, size: int, trials: int, replace: bool) -> np.array:
    if replace:
        return np.random.choice(original_array, size=size, replace=replace)
    else:
        result = []
        for i in range(trials):
            result.extend(np.random.choice(original_array, size=size // trials, replace=replace))
        return result


def get_critical_value(max_sharpes: np.array, alpha: float = 0.1) -> float:
    """
    Get the critical value for SSL overfitting test.

    :param max_sharpes: sharpe distribution produced by get_sharpe_distribution
    :param alpha: significance level for calculating critical value
    :return:
    """
    return np.quantile(max_sharpes, 1 - alpha)


def get_p_value(max_sharpes: np.array, sr: float) -> float:
    """
    Get the p value for SSL overfitting test.

    :param max_sharpes: sharpe distribution produced by get_sharpe_distribution
    :param sr: sharpe ratio for calculating p-value
    :return:
    """
    return np.mean(max_sharpes > sr)


def get_sharpe_distribution_multi(predictions: np.array, trials: int = 1000, generator_option: str = 'normal',
                            generator: Callable[[int], np.array] = None, original_array: np.array = None,
                            seed: int = 0, sr: float = None, alpha: float = None) -> np.array:
    """
    Multi tradable version of get_sharpe_distribution.
    Get the null distribution for SSL overfitting test.
    Where the pnl of each tradable are aggregated on each snapshot, and then calculate sharpe of the aggregated pnl.

    :param predictions: numpy 3d-array, shape in (params, tradables, days)
    :param trials: int, number of trials used to generate the nul distribution
    :param generator_option: 'normal', 'resample' or 'shuffle'
                'normal': the tri of each tradable follows a brownian motion, and uncorrelated with other tradables
                'resample': bootstrapping the snapshots, so that for a random scenario, the i-th snapshot return of all
                            tradables, all comes from j-th snapshot return of original tri. Thus correlation are kept.
                'shuffle: shuffle the snapshots, i.e. no replacement. Still make sure the i-th snapshot return of all
                            tradables, all comes from j-th snapshot return of original tri. Thus correlation are kept.
    :param generator: user-defined random path generator
    :param original_array: needed for 'resample' and 'shuffle' options,
            numpy 2d-array, shape in (tradables, days)
    :param seed: random seed
    :param sr: sharpe ratio for calculating p-value
    :param alpha: significance level for calculating critical value
    :return: max_sharpes, p_val, crit_val
    """
    # predictions include all predictions tried in sample for optimization, and it is 2d array
    if seed is not None:
        np.random.seed(seed)

    n_param, n_tradable, size = predictions.shape

    if generator is None:
        if generator_option == 'normal':
            generator = np.random.normal
            rets = np.reshape(generator(size=size * trials * n_tradable), [size, n_tradable, trials])
        else:
            assert original_array is not None, 'original return array not provided'
            assert original_array.shape[0] == n_tradable, 'original return array and input predicitons has different number of tradables '
            tradable_idx = np.arange(original_array.shape[-1])
            if generator_option == 'shuffle':
                generator = partial(gen_from_original_series, original_array=tradable_idx, trials=trials, replace=False)
            elif generator_option == 'resample':
                generator = partial(gen_from_original_series, original_array=tradable_idx, trials=trials, replace=True)
            else:
                raise NotImplementedError("Available generator_option: \'normal\', \'shuffle\', \'resample\'")

            rets_idx = generator(size=size * trials)
            rets = np.reshape(original_array[:, rets_idx], [n_tradable, trials, size])
            rets = np.transpose(rets, [2, 0, 1])

    # std**2 = pnl_square_mean - pnl_mean_square
    # where pnl = np.einsum('ijk,kjm->im', predictions, rets)
    # pnl_square_mean should be : np.einsum('imk->im',np.einsum('ijk,kjm->imk', predictions, rets)**2) / size
    # we loop over n_params here to prevent memory overflow
    pnl_square_mean = np.array([np.einsum('mk->m', np.einsum('jk,kjm->mk', predictions[a], rets)**2)
                                for a in range(predictions.shape[0])]) / size
    stds = (pnl_square_mean - np.einsum('ijk,kjm->im', predictions, rets, optimize=True) ** 2 / size / size) ** 0.5 + 1e-10
    # einsum std is faster than np.std
    # stds = np.array([np.std(np.einsum('jk,kjm->mk', predictions[a], rets), axis=1)
    #           for a in range(predictions.shape[0])])

    means = (np.einsum('ijk,kjm->im', predictions, rets, optimize=True) / size)
    max_sharpes = np.max(means / stds, axis=0) * np.sqrt(252)

    p_val = None
    crit_val = None

    if sr is not None:
        p_val = np.mean(max_sharpes > sr)

    if alpha is not None:
        crit_val = np.quantile(max_sharpes, 1 - alpha)

    return max_sharpes, p_val, crit_val
........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\resample_asof.py
----------------------------------------
import pandas as pd
import numpy as np
from typing import Union


def ts_asof(
        source_dt,
        target_dt,
        direction: str="forward",
        **kwargs
    ) -> np.array:
    """
    For 2 sorted array-like inputs, we align them up by a `direction`
    search, then return the pointer from the left input to the right input.

    The implementation is based on pd.merge_asof:
    https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.merge_asof.html

    Parameters
    ---------------
    source_dt: array-like, sorted
        Input array.

    target_dt: array-like, sorted
        Target array. 

    direction: str, (default="forward")
        see `direction` in pd.merge_asof

    **kwargs:
        additional keywards accepted by the pd.merge_asof function.

    Returns
    -----------
    pid: numpy array, dtype=np.int
        When pid == -1, it is equivalanet to a failure in matching.

    Example Usage
    ------------

    >> Input:

    a = np.array([2.0, 4.0, 5.0, 6.0, 8.0, 11.0])
    b = np.array([1.0, 2.5, 3.0, 5.0, 10.0, 10.0])
    pid = ts_asof(a, b)
    
    >> Output:
    array([ 1,  3,  3,  4,  4, -1])

    Explained:
    [0]              [1]    [2]     [3]         [4]         [5]    (index of a)
    2.0              4.0    5.0     6.0         8.0         11.0   (value of a)
         --->|       ----->>|       --------------->>|      ---->? (`ts_asof`)
    1.0     2.5  3.0        5.0                      10.0/10.0     (value of b)
    [0]     [1]  [2]        [3]                      [4]/[5]       (index of b)

    """
    source = pd.DataFrame(index=source_dt)
    target = pd.DataFrame(index=target_dt, data={"pid": np.arange(len(target_dt))})
    pid = pd.merge_asof(source, target, left_index=True, right_index=True,
                        direction=direction, **kwargs)["pid"].values
    pid[np.isnan(pid)] = -1
    return pid.astype(np.int64)


def resample_asof(
        event_ts: pd.DatetimeIndex,
        df: pd.DataFrame,
        is_index=False,
        tscol: str=None,
        agg:dict=dict(),
        xtra:bool=False,
        **kwargs
    ) -> pd.DataFrame:

    """
    Customized resample that combines pandas.merge_asof and pandas.resample function.

    Parameters
    -----------
    event_ts: pd.DatetimeIndex, sorted
        We will resample `df` according to this schedule.
    df: pd.DataFrame.
        Input samples.
    is_index: bool, (default = False)
        Whether the sorted object is represented by the index of `df`.
    tscol: str, (default = None)
        Column name in `df` that signifies the timestamps if `is_index` is False,
        need to be sorted as well.
    agg: dict, (default = {})
        Specify custome aggregation functions of each column.
        For those not specified, the column is resampled by taking the last valid record.
    xtra: bool, (default = False)
        Whether to create additional fields about the resampled bars.
    kwargs: optional kwargs that will pass to pd.merge_asof.

    Returns
    -----------
    xdf: pd.DataFrame
        Resample the columns of input dataframe `df` by the `agg`.
        If `xtra = True`, then it generate 2 additional columns: 
            cnt: dtype = np.int64
                Number of observations in resampled buffer.
            tt2obs: dtype = np.float64
                Gap from current matched value to previous founds one.
        The index is always the sampled `dt` on valid points, even if the input
        `df` is sampled based on a `tscol`.
    """

    aggfunc = {key: "last" for key in df.columns}
    aggfunc.update(agg)
    direction = kwargs.pop("direction", "forward")

    if is_index:
        source_dt = df.index
    else:
        source_dt = df[tscol]

    pid = ts_asof(source_dt, event_ts, direction=direction, **kwargs)
    f = pid >= 0
    pid = pid[f].astype(np.int64)
    sdf = df[f].groupby(pid).agg(aggfunc)
    ppid = sdf.index
    sdf.index = event_ts[ppid]

    if xtra:
        source_valid = source_dt[f]
        target_valid = event_ts[ppid]
        ones = pd.Series(index=df.index[f], data=1.0)
        sdf["cnt"] = ones.groupby(pid).sum().values
        last_obs = pd.Series(source_valid).groupby(pid).last()
        sdf["t2obs"] = (target_valid  -  last_obs).values
    
    # enrich back the failure columns
    xdf = pd.DataFrame(index=event_ts)
    for col in sdf.columns:
        xdf[col] = sdf[col]
    return xdf

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\score.py
----------------------------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import (r2_score, mean_absolute_error, f1_score,
    accuracy_score, recall_score, precision_score, confusion_matrix)
from sklearn.utils.multiclass import unique_labels

from .filter import inquantile, filtergood


def eval_score(y_true, y_pred):
    """
    core scoring that evaluate several criterias on continuous target and predictions

    Metrics
    --------------
    Continuous:    
        r2: R-Square.
        mae: Relative mean absolute error.

    Categorical: discretize y_true/y_pred into positive/negative.
        accuracy: Accuracy.
        f1-score: F1 score.
        recall: Recall score.
        precision: Precision score. 

    Parameters
    ----------
    y_true: numpy array of type float
        True label.
    y_pred: numpy array of type float
        Prediction label.
    
    Return
    ---------
    score: dict
    """

    score = {}
    score["r2"] = r2_score(y_true, y_pred)
    score["mae"] = mean_absolute_error(y_true, y_pred) / np.mean(np.abs(y_true))
    y_true_bin = (y_true > 0).astype(np.int64)
    y_pred_bin = (y_pred > 0).astype(np.int64)
    score["accuracy"] = accuracy_score(y_true_bin, y_pred_bin)
    score["f1-score"] = f1_score(y_true_bin, y_pred_bin)
    score["recall"] = recall_score(y_true_bin, y_pred_bin)
    score["precision"] = precision_score(y_true_bin, y_pred_bin)
    return score


def bootstrap_eval(y_true, y_pred, n_rounds=100, sample_size=0.5):
    """
    Naive bootstrap to collect metric scores.
    """
    def eval(y_true, y_pred, n_rounds, sample_size):
        idx = np.arange(len(y_true))
        size = int(len(y_true) * sample_size) if sample_size <= 1 else sample_size
        scores = []
        for i in range(n_rounds):
            np.random.seed(i)
            sample_idx = np.random.choice(idx, size=size)
            score = eval_score(y_true[sample_idx], y_pred[sample_idx])
            scores.append(score)
        scores = pd.DataFrame(scores)
        return scores

    f = np.isfinite(y_true) & np.isfinite(y_pred)
    stats = eval(y_true[f], y_pred[f], n_rounds, sample_size)
    return stats


def calc_quantile_improvement_curve(y_pred, y_true, f=None, show_plot=True,
                                    qts=[0.5, 0.25, 0.2, 0.15, 0.1, 0.05],
                                    one_sided=False, n_col=2, **kwargs):
    """
    TODO: support time series based sampling and target based sampling.

    A convenient function that evaluate the goodness of prediction.

    Parameters:
    y_pred: numpy array of type float
        Prediction label.
    y_true: numpy array of type float
        True label.
    f: optional, numpy array of type bool, (default = None)
        A filter to be applied.
    show_plot: bool, (default = True)
        Control visualization of output.
    qts: list of float in (0, 1), (default = [0.5, 0.25, 0.2, 0.15, 0.1, 0.05])
        The percentiles of prediction to zoom into tails.
    one_sided: bool, (default = False)
        Control whether to focus on one-sided tail of the percentiles.
    n_col: int, (default = 2)
        Number of columns in the visualization subplot, require `show_plot=True`
    kwargs: dict
        Optional keywards to be passed to `bootstrap_eval`.
    
    Note:
        Metrics like `r2_score` are usually more meaningful with `one_sided=False`.

    """
    f_good = filtergood(y_pred, f) & filtergood(y_true, f)
    y_pred_filtered = y_pred[f_good]
    y_filtered = y_true[f_good]

    mus = []
    stds = []
    cnt = []
    for qt in qts:
        if one_sided:
            if qt > 0.5:
                q = inquantile(y_pred_filtered, qt, 1.0)
            else:
                q = inquantile(y_pred_filtered, 0, qt)
        else:
            q = ~inquantile(y_pred_filtered, qt, 1-qt)
        y_pred_trim = y_pred_filtered[q]
        y_trim = y_filtered[q]
        out = bootstrap_eval(y_trim, y_pred_trim, **kwargs)
        mus.append(out.mean())
        stds.append(out.std())
        cnt.append(q.sum())
    mus = pd.DataFrame(index=qts, data=mus)
    stds = pd.DataFrame(index=qts, data=stds)
    cnt = pd.Series(index=qts, data=cnt)
    
    n_fig = mus.shape[1]
    n_row = (n_fig + n_col - 1) // n_col

    if show_plot:
        _ = plt.subplots(n_row, n_col, figsize=[n_col * 6, n_row * 4])
        for idx, col in enumerate(mus):
            ax = plt.subplot(n_row, n_col, idx+1)
            ax.errorbar(x=mus.index, y=mus[col], yerr=stds[col])
            ax.set_title(col)
        plt.tight_layout()
        plt.show()
    return mus, stds, cnt


def calc_quantile_improvement_curve_mul(y_preds, y_true, f=None, show_plot=True,
                                        qts=[0.5, 0.25, 0.2, 0.15, 0.1, 0.05],
                                        one_sided=False, n_col=2, **kwargs):
    """
    a similar implementation of calc_quantile_improvement_curve, but for multiple predictions on
    same target, useful to compare different model results
    :param y_preds:
    :param y_true:
    :param f:
    :param show_plot:
    :param qts:
    :param one_sided:
    :param n_col:
    :param kwargs:
    :return:
    """
    f_good = filtergood(y_preds).all(axis=1) & filtergood(y_true, f) & f
    y_pred_filtered = y_preds[f_good]
    y_filtered = y_true[f_good]

    df_mus = dict()
    df_stds = dict()
    df_cnt = dict()

    for col in y_preds.columns:
        mus = []
        stds = []
        cnt = []
        for qt in qts:
            if one_sided:
                if qt > 0.5:
                    q = inquantile(y_pred_filtered[col], qt, 1.0)
                else:
                    q = inquantile(y_pred_filtered[col], 0, qt)
            else:
                q = ~inquantile(y_pred_filtered[col], qt, 1 - qt)
            y_pred_trim = y_pred_filtered[col][q]
            y_trim = y_filtered[q]
            out = bootstrap_eval(y_true=y_trim, y_pred=y_pred_trim, **kwargs)
            mus.append(out.mean())
            stds.append(out.std())
            cnt.append(sum(q))
        mus = pd.DataFrame(index=qts, data=mus)
        stds = pd.DataFrame(index=qts, data=stds)
        cnt = pd.Series(index=qts, data=cnt)

        df_mus[col] = mus
        df_stds[col] = stds
        df_cnt[col] = df_cnt

    n_fig = mus.shape[1]
    n_row = (n_fig + n_col - 1) // n_col

    if show_plot:
        fig, axes = plt.subplots(n_row, n_col, figsize=[n_col * 6, n_row * 4])
        for column in y_preds.columns:
            mus = df_mus[column]
            stds = df_stds[column]
            for idx, col in enumerate(mus):
                ax = plt.subplot(n_row, n_col, idx + 1)
                ax.errorbar(x=mus.index, y=mus[col], yerr=stds[col], label=column)
                ax.set_title(col)
        plt.tight_layout()
        for idx in range(len(mus)):
            ax = plt.subplot(n_row, n_col, idx + 1)
            ax.legend(loc='upper right')
        plt.show()
    return df_mus, df_stds, df_cnt


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\splitter.py
----------------------------------------
import numpy as np
import pandas as pd
from sklearn.model_selection import TimeSeriesSplit
from sklearn.base import clone
import math
from tqdm.autonotebook import tqdm


class WalkForwardCV:
    """
    To create time series cross validation partition to train models with
    forward looking labels.

    parameters
    ------------
    n_splits: int
        Number of basic splits to perform.
    gap: int, (default = 0)
        Number of samples to skip in the validation set.
    min_period: int, (default = 0)
        Minimum number of data points required in the training set.
    
    """
    def __init__(self, n_splits, gap=0, min_period=0):
        self.n_splits = n_splits
        self.gap = gap
        self.min_period = min_period
    
    def split(self, X, y=None, groups=None):
        """
        CV generator passed to ML models.

        Parameters:
        ---------------
        X: numpy array of shape (n_samples, n_features)
            The input samples.
        y: Ignored.
        groups: Ignored.
        
        Returns:
        ------------------
        cv generator
        """
        tss = TimeSeriesSplit(n_splits=self.n_splits)
        for train_idx, val_idx in tss.split(X, y):
            if len(train_idx) <= self.min_period:
                continue
            
            if len(val_idx) <= self.gap:
                continue

            yield train_idx, val_idx[self.gap:]

    def get_n_splits(self, X=None, y=None, groups=None):
        """
        Calculate actual number of cross validation splits which is required 
        by some sklearn models to pre-generate place holders.

        Parameters:
        ---------------
        X: numpy array of shape (n_samples, n_features)
            The input samples.
        y: Ignored.
        groups: Ignored.

        Returns:
            n_splits: int
        
        Note:
            The returned n_splits is usually smaller than self.n_splits. If the
            `min_period = 0` and `gap = 0`, then they are always the same.
        """

        val_size, r = divmod(len(X), self.n_splits+1)
        # size of the k-th fold is (r + val_size * k), where k=1, 2, ...self.n_splits
        if val_size <= self.gap:
            return 0
        trim = int(np.floor((self.min_period - r) / val_size))
        n_splits = self.n_splits - trim
        return n_splits


class WalkForwardSplit:
    """
    To create split to online update models.

    expanding window:
    |-------train-----------|---gap---|----test-----|
    
    rolling window:
                |---train---|---gap---|----test-----|
    
    In situations where the "y" is observed with a delay of `gap`, one can
    only train model and deploy it on test set with a gap.
    
    Parameter
    ----------------------

    train_size: int
        In case of expanding window (`expanding`=True), this is the initial
        size of training dataset. Otherwise, it is the size of rolling training window.
    gap: int
        The delay in deploying the trained model.
    test_size: int.
        Determine the size on which the lastest model is rolled out before a
        re-train is triggered.
    expanding: bool, (default = False)
        If true, use expanding window for training, otherwise use rolling.  

    """

    def __init__(self, train_size, test_size, gap, expanding=False):
        self.train_size = train_size
        self.test_size = test_size
        self.gap = gap
        self.expanding = expanding

    def split(self, X, y=None, verbose=True):
        if verbose:
            return tqdm(self._split(X, y),
                        total=math.ceil((len(X) - self.train_size - self.gap) / self.test_size))
        else:
            return self._split(X, y)
    
    def _split(self, X, y=None):
        min_test_start = self.train_size + self.gap
        
        for test_start in range(min_test_start, len(X), self.test_size):
            if self.expanding:
                train_start = 0
            else:
                train_start = test_start - min_test_start
            train_end = test_start - self.gap
            test_end = min(test_start + self.test_size, len(X))
            yield np.arange(train_start, train_end), np.arange(test_start, test_end)


def walkforward_training(X, y, model, splitter, verbose=True):
    """
    An convenient wrapper of fitting a model with a prescribed online training 
    schedule. 

    Note:
        The model does not support online update, i.e, the new model is re-trained
        completely instead of performing an `partial_fit` or `forward/backward`
        update step.
    
    Parameters:
    -------------
    X: numpy array of shape (n_samples, n_features)
        Input data.
    y: numpy array of shape (n_samples,)
        Target.
    model: estimator
        Model object that implemented `fit` and `predict` methods.
    splitter: iterator
        Yield (train, test) splits for continuous training and deployment.
    verbose: boolean
        Whether to turn on tqdm thus display the progress bar

    Returns
    ----------------
    models: List[Tuple(model, train_idx, test_idx)]
        List of fitting details.
    y_pred: array-like
        Model predictions.

    """
    y_pred = np.empty(y.shape)
    y_pred[:] = np.nan
    
    models = []
    if isinstance(X, pd.DataFrame):
        assert isinstance(y, pd.Series)
        assert np.all(X.index == y.index)
        is_df = True
    else:
        is_df = False
    
    for train_idx, test_idx in splitter.split(X, y, verbose=verbose):
        mdl = clone(model)
        if is_df:
            mdl.fit(X.iloc[train_idx, :], y.iloc[train_idx])
            y_pred[test_idx] = mdl.predict(X.iloc[test_idx, :])
        else:
            mdl.fit(X[train_idx], y[train_idx])
            y_pred[test_idx] = mdl.predict(X[test_idx, :])
        models.append([mdl, train_idx, test_idx])

    if is_df:
        y_pred = pd.Series(index=y.index, data=y_pred, name="y_pred")
    return models, y_pred

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\statx.py
----------------------------------------
import numpy as np
import pandas as pd
from .filter import inquantile, filtergood


def trimfunc(x, func, f=None, trim=0.01):
    q = inquantile(x, trim, 1-trim, f)
    return func(x[q])


def statx(x, f=None, trim=0.01, quantiles=None):
    """
    show summary statistic of a random variable x (filtered by f).
    stats:
        quantiles: [0.001, 0.01, 0.1, 0.25, 0.4, 0.5, 0.6, 0.75, 0.9, 0.99, 0.999]
        mean/std, trimmed mean/std
    
    args:
        x: sample to run statistics upon.
        f: optional fiter to be applied to x.
        trim: tail quantile to be filtered in trim mean/std calculation.
        quantiles: list[float], default below.
    """
    quantiles = quantiles or [0.001, 0.01, 0.1, 0.25, 0.4, 0.5, 0.6, 0.75, 0.9, 0.99, 0.999]

    # get data of interest
    f_good = filtergood(x, f)
    x = x[f_good]

    # calc quantiles for display
    dx = dict()
    vals = np.quantile(x, quantiles)
    for i in range(len(quantiles)):
        qt = quantiles[i]
        key = f"{qt:.1%}"
        dx[key] = vals[i]
    dx['nanmean'] = np.mean(x)
    dx['std'] = np.std(x)
    dx['max'] = np.max(x)
    dx['min'] = np.min(x)
    dx['cnt'] = len(x)
    dx['freq'] = np.mean(f_good)

    # trim away outlier level 1
    dx['trimmean@{:.0%}'.format(trim)] = trimfunc(x, func=np.mean, trim=trim)
    dx['trimstd@{:.0%}'.format(trim)] = trimfunc(x, func=np.std, trim=trim)
    s = pd.Series(dx)
    return s

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\data_analysis\__init__.py
----------------------------------------
from .gscatter import gscatter, ggscatter
from .statx import trimfunc, statx
from .filter import inrange, inquantile, filtergood, randchunk, view_near
from .accum2t import AccumulateToTable, ac2t_fast
from .labeling import label_triple_barrier
from .resample_asof import resample_asof, ts_asof
from .score import calc_quantile_improvement_curve, calc_quantile_improvement_curve_mul
from .splitter import WalkForwardCV, WalkForwardSplit, walkforward_training
from .confusion_matrix import plot_confusion_matrix, _plot_confusion_matrix
from .randomness_test import get_pass_threshold, get_sim_pvalue, get_sharpe_distribution, get_critical_value, get_p_value
........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\data.csv
----------------------------------------
utc_time,SPY,TLT,LQD,GLD,XLE,USO,QQQ,FXI,EEM,HYG,USDJPY,EURKRW,AUDJPY,EURNOK,SX5E,NKY,HSCEI
2008-06-03 20:00:00+00:00,0.217837262,0.127651414,0.074574012,0.225210531,0.318894931,0.371315806,0.260975246,0.409645908,0.324975399,0.1006921,0.10935,0.06,0.14495,0.06475,0.223058164,0.235249924,0.340501913
2008-06-04 20:00:00+00:00,0.22153191,0.165260174,0.074574012,0.228669437,0.324842544,0.337387348,0.249436689,0.394329278,0.332408952,0.096626406,0.1096,0.06,0.1448,0.0647,0.222252792,0.230585776,0.344118101
2008-06-05 20:00:00+00:00,0.200933048,0.143496187,0.0783828,0.233721218,0.310189275,0.339882249,0.245815008,0.392617499,0.325985409,0.096626406,0.108425,0.06,0.14435,0.06434999999999999,0.222211098,0.234447686,0.344606295
2008-06-06 20:00:00+00:00,0.230239927,0.143736024,0.073135999,0.23859305,0.359130675,0.471479306,0.272494131,0.408440189,0.304123375,0.096626406,0.108925,0.06,0.14265,0.06434999999999999,0.231356904,0.232225926,0.337229499
2008-06-09 20:00:00+00:00,0.22293082,0.147668237,0.073135999,0.235596445,0.335439465,0.449255153,0.263613427,0.416981502,0.308606679,0.097171156,0.11109999999999999,0.06,0.14505,0.06509999999999999,0.235183325,0.243028924,0.337229499
2008-06-10 20:00:00+00:00,0.218235344,0.176594265,0.073135999,0.246072703,0.342790048,0.458778361,0.26369951,0.391790697,0.33767606,0.097171156,0.11192500000000001,0.06,0.14505,0.06485,0.235982707,0.25200092,0.36832532
2008-06-11 20:00:00+00:00,0.221965762,0.143873,0.073135999,0.257500609,0.339538327,0.376199798,0.267620844,0.418222378,0.323407681,0.097171156,0.11130000000000001,0.06,0.14429999999999998,0.06555,0.239815627,0.24756888,0.363778786
2008-06-12 20:00:00+00:00,0.224776362,0.176048124,0.0737229,0.24381525,0.352670565,0.438055067,0.266597234,0.399713164,0.322075852,0.097171156,0.109275,0.06,0.1433,0.06715,0.230614442,0.257116106,0.366524835
2008-06-13 20:00:00+00:00,0.221174999,0.142841268,0.0792,0.240183325,0.340898103,0.445214612,0.256762515,0.412104591,0.346850189,0.085853359,0.108025,0.06,0.1411,0.066375,0.226626618,0.255015554,0.372648612
2008-06-16 20:00:00+00:00,0.215873268,0.140936712,0.0792,0.254979959,0.334649524,0.397827277,0.243682137,0.402254596,0.3472259,0.08339889,0.105725,0.06,0.1401,0.066775,0.222163764,0.244067829,0.362057362
2008-06-17 20:00:00+00:00,0.211819756,0.169873573,0.075357354,0.25121582,0.341294043,0.412713896,0.253386751,0.388008903,0.337784559,0.08339889,0.10339999999999999,0.06,0.13244999999999998,0.0663,0.217877208,0.239217281,0.354589314
2008-06-18 20:00:00+00:00,0.224071551,0.132967337,0.0741225,0.249352124,0.336632575,0.395455506,0.266278393,0.410660221,0.345999602,0.081932106,0.102675,0.06,0.12795,0.06565,0.223634183,0.234624314,0.345157213
2008-06-19 20:00:00+00:00,0.216779151,0.159460878,0.0741225,0.249692143,0.342533979,0.401335882,0.247705443,0.39595707,0.336739696,0.0867864,0.10265,0.06,0.1268,0.0653,0.223757048,0.243096937,0.351320723
2008-06-20 20:00:00+00:00,0.222638724,0.131670215,0.0721791,0.246534078,0.340487672,0.46117569,0.264159827,0.417524599,0.354214125,0.085039975,0.1058,0.06,0.1259,0.06545,0.233775493,0.247942375,0.350643068
2008-06-23 20:00:00+00:00,0.223769982,0.119094218,0.075348892,0.265126482,0.346290599,0.415965632,0.276047353,0.423896418,0.342760687,0.085039975,0.105,0.06,0.12905,0.064625,0.229016831,0.250796673,0.352058536
2008-06-24 20:00:00+00:00,0.2284997,0.138511399,0.074458599,0.2597482,0.342593999,0.398155854,0.261699699,0.418141025,0.339757419,0.085039975,0.103825,0.06,0.12555,0.06375,0.229595911,0.250023248,0.350945074
2008-06-25 20:00:00+00:00,0.210753949,0.131850604,0.074458599,0.263905322,0.341079199,0.434841854,0.254763533,0.397928556,0.321051844,0.085039975,0.10404999999999999,0.06,0.126025,0.063475,0.217155903,0.248345344,0.347625789
2008-06-26 20:00:00+00:00,0.2341439,0.152976527,0.074458599,0.265394877,0.344280366,0.470095793,0.274155166,0.403541778,0.330166942,0.085039975,0.104975,0.06,0.124825,0.063225,0.228883293,0.239373925,0.349484704
2008-06-27 20:00:00+00:00,0.227576999,0.15154496,0.074458599,0.272874333,0.342975,0.425676451,0.27259075,0.430142098,0.310688566,0.085039975,0.10935,0.06,0.12835000000000002,0.06332499999999999,0.23367943,0.246740611,0.35311227
2008-06-30 20:00:00+00:00,0.219784466,0.148959035,0.074458599,0.278768888,0.325327866,0.443400225,0.280018233,0.395192056,0.336150711,0.085039975,0.112225,0.06,0.129475,0.0633,0.228379088,0.244408372,0.348236362
2008-07-01 20:00:00+00:00,0.225217233,0.130859977,0.074458599,0.274689611,0.326193166,0.451884517,0.263485983,0.412761332,0.321801477,0.085039975,0.11197499999999999,0.06,0.130175,0.06344999999999999,0.2327442,0.241996378,0.348236362
2008-07-02 20:00:00+00:00,0.238764999,0.149596563,0.07427,0.286256466,0.348566,0.44256618,0.276233599,0.413735197,0.318972666,0.085039975,0.11082499999999999,0.06,0.129125,0.063525,0.232529887,0.24066265,0.353482612
2008-07-03 20:00:00+00:00,0.232136127,0.15308245,0.07427,0.280487133,0.338818433,0.444408677,0.275306799,0.404480469,0.320679423,0.085039975,0.107825,0.06,0.127525,0.06332499999999999,0.229754249,0.23946217,0.364692886
2008-07-07 20:00:00+00:00,0.239382967,0.139853031,0.07427,0.269700511,0.34905058,0.437870064,0.2699665,0.388272371,0.326177186,0.085039975,0.10485,0.06,0.12342499999999999,0.061900000000000004,0.230459625,0.22905453,0.351322532
2008-07-08 20:00:00+00:00,0.222679527,0.148120999,0.07427,0.2511453,0.347580199,0.459798999,0.251253025,0.399840363,0.33538875,0.084968999,0.10552500000000001,0.06,0.12422499999999999,0.061175,0.236388087,0.23714654,0.362586307
2008-07-09 20:00:00+00:00,0.226152967,0.137803333,0.07427,0.260296666,0.338486366,0.467828145,0.276628333,0.394278891,0.328291937,0.082925,0.1045,0.06,0.124375,0.06125,0.234223592,0.233319389,0.363659332
2008-07-10 20:00:00+00:00,0.234264727,0.137979377,0.07427,0.26791235,0.342181,0.48463717,0.2820119,0.40072527,0.315433032,0.082925,0.10525000000000001,0.06,0.12405,0.061425,0.239928429,0.234033201,0.361194071
2008-07-11 20:00:00+00:00,0.237303105,0.159578053,0.07427,0.308386533,0.3423248,0.478526825,0.2818746,0.405740483,0.329156813,0.082925,0.10647500000000001,0.06,0.12442500000000001,0.060825,0.250617915,0.233559019,0.356388288
2008-07-14 20:00:00+00:00,0.24150613,0.147403283,0.076915,0.283811194,0.345875999,0.478851593,0.292418716,0.416506332,0.322852466,0.082925,0.10825,0.06,0.12539999999999998,0.060575000000000004,0.246159639,0.23559213,0.362513802
2008-07-15 20:00:00+00:00,0.242347838,0.122064244,0.076915,0.295150822,0.354642283,0.49774739,0.293583199,0.417164599,0.339697833,0.082925,0.116725,0.06,0.12835000000000002,0.060599999999999994,0.254785298,0.245359988,0.388933241
2008-07-16 20:00:00+00:00,0.225957934,0.156256666,0.08584,0.279626533,0.359813399,0.525924153,0.279021049,0.398978763,0.33323023,0.082925,0.11782500000000001,0.06,0.129225,0.06075,0.246877004,0.244708657,0.387534997
2008-07-17 20:00:00+00:00,0.231009454,0.130795322,0.078767499,0.280057822,0.359408266,0.509897109,0.261601266,0.436320675,0.326336453,0.082925,0.11477499999999999,0.06,0.12685000000000002,0.06085,0.236882193,0.2379818,0.385170234
2008-07-18 20:00:00+00:00,0.220012279,0.145073777,0.0794496,0.277938833,0.347580083,0.515831806,0.280374891,0.428609872,0.300728924,0.082925,0.111125,0.06,0.12365,0.060899999999999996,0.229198277,0.239577447,0.380466162
2008-07-21 20:00:00+00:00,0.224507972,0.12236,0.0794496,0.279090799,0.349227999,0.493145199,0.2690514,0.40739,0.311992999,0.072540245,0.11065,0.06,0.122575,0.060774999999999996,0.226000258,0.239577447,0.36529223
2008-07-22 20:00:00+00:00,0.21149773,0.141666488,0.077687586,0.273530241,0.339193958,0.5076389,0.260509283,0.381919153,0.31081246,0.0741397,0.11082499999999999,0.06,0.12265000000000001,0.060325,0.225801867,0.22548302,0.361311398
2008-07-23 20:00:00+00:00,0.217548361,0.151695123,0.077553606,0.263454427,0.346185168,0.523277611,0.266890037,0.394329108,0.302541326,0.072370791,0.10735,0.06,0.12125,0.059775,0.219143592,0.22133695,0.35145517
2008-07-24 20:00:00+00:00,0.22457109,0.156136081,0.077553606,0.269904209,0.348477604,0.498348203,0.268964213,0.394329108,0.302541326,0.0769159,0.107475,0.06,0.12045,0.059800000000000006,0.224114358,0.214455129,0.354038199
2008-07-25 20:00:00+00:00,0.223620923,0.152752679,0.077553606,0.267065232,0.34433773,0.507752902,0.271748862,0.411076347,0.323895021,0.0769159,0.10797499999999999,0.06,0.12185,0.0593,0.223719497,0.221917715,0.360382528
2008-07-28 20:00:00+00:00,0.228273265,0.163309744,0.074945491,0.264663309,0.341059339,0.481232428,0.271625934,0.42359693,0.292825348,0.0769159,0.1063,0.06,0.11967499999999999,0.05955,0.226158531,0.218254795,0.355112455
2008-07-29 20:00:00+00:00,0.218550363,0.12690413,0.075625286,0.26222259,0.33731103,0.51175925,0.265008813,0.402260699,0.304716202,0.0769159,0.10402499999999999,0.06,0.11789999999999999,0.059675000000000006,0.225038868,0.221928459,0.350325307
2008-07-30 20:00:00+00:00,0.208940901,0.124120811,0.075625286,0.25883719,0.332765869,0.491035566,0.257176067,0.380972913,0.279018325,0.0769159,0.102975,0.06,0.11935000000000001,0.058675,0.218683139,0.215704153,0.34389266
2008-07-31 20:00:00+00:00,0.21373009,0.125758397,0.072831095,0.26044773,0.343355999,0.441905455,0.262737218,0.390029669,0.290192965,0.0769159,0.10279999999999999,0.06,0.12,0.058975,0.219663477,0.216763107,0.33910138
2008-08-01 20:00:00+00:00,0.223844443,0.130964618,0.072831095,0.252278453,0.34253174,0.496559748,0.26124852,0.397447339,0.296465111,0.067267999,0.102825,0.06,0.1235,0.059225,0.225223622,0.222723247,0.338330367
2008-08-04 20:00:00+00:00,0.2179447,0.140181313,0.072831095,0.25527046,0.359773309,0.473987002,0.270403937,0.411031386,0.322487134,0.067267999,0.10210000000000001,0.06,0.12415,0.059675000000000006,0.226533355,0.22045755,0.342055978
2008-08-05 20:00:00+00:00,0.211514792,0.124071209,0.072831095,0.256712027,0.344288575,0.466061419,0.248710269,0.413870617,0.298638632,0.067130716,0.10220000000000001,0.06,0.1276,0.060925,0.216249322,0.220795733,0.343252404
2008-08-06 20:00:00+00:00,0.20301481,0.14125919,0.076696844,0.247793823,0.335777451,0.475948532,0.249296151,0.396833982,0.299317376,0.070826,0.09907500000000001,0.06,0.1275,0.060475,0.21243194,0.210685497,0.343252404
2008-08-07 20:00:00+00:00,0.222601645,0.119281627,0.074437757,0.249396772,0.337700186,0.466491595,0.261137918,0.390027582,0.328135497,0.0684485,0.097725,0.06,0.12494999999999999,0.0594,0.216644078,0.214389976,0.343493379
2008-08-08 20:00:00+00:00,0.214048583,0.104142093,0.074178539,0.249349234,0.337519574,0.452679149,0.256988102,0.380805108,0.324044967,0.064288,0.09762499999999999,0.06,0.12960000000000002,0.059725,0.217209652,0.21320655,0.346352421
2008-08-11 20:00:00+00:00,0.208130879,0.148493693,0.074737088,0.272057786,0.345156673,0.458671148,0.251872616,0.374631217,0.311504932,0.06739,0.0983,0.06,0.13165,0.060425000000000006,0.215525453,0.210125142,0.345437353
2008-08-12 20:00:00+00:00,0.218177436,0.10944519,0.074737088,0.275761795,0.344101088,0.459587721,0.25411479,0.399101634,0.326253911,0.06739,0.09897500000000001,0.06,0.136125,0.05975,0.218656818,0.21238123,0.341711917
2008-08-13 20:00:00+00:00,0.219723816,0.12709179,0.074170721,0.261695562,0.335246093,0.447583665,0.260670767,0.371571304,0.323662581,0.06739,0.10362500000000001,0.06,0.143825,0.059025,0.227853455,0.217654029,0.342509845
2008-08-14 20:00:00+00:00,0.2123918,0.14399612,0.074170721,0.264351965,0.338281162,0.445714341,0.256225116,0.414274847,0.29918863,0.058205,0.10122500000000001,0.06,0.1441,0.0538,0.227513825,0.219500147,0.337930358
2008-08-15 20:00:00+00:00,0.213639341,0.15553906,0.07377855,0.278125344,0.338893876,0.450691848,0.257977841,0.36572826,0.315942616,0.058205,0.09872500000000001,0.06,0.14475,0.053724999999999995,0.223877338,0.216939507,0.337118218
2008-08-18 20:00:00+00:00,0.217468252,0.140105648,0.073629462,0.275757488,0.343094839,0.467320819,0.259259767,0.369771304,0.312624518,0.058205,0.097775,0.06,0.1433,0.05605,0.221173047,0.214549571,0.337937525
2008-08-19 20:00:00+00:00,0.21596564,0.157098802,0.073915803,0.273995695,0.334357506,0.434219764,0.268038613,0.39833746,0.327060702,0.070124,0.0983,0.06,0.1421,0.05582499999999999,0.228779716,0.223212602,0.342530198
2008-08-20 20:00:00+00:00,0.215258378,0.145959223,0.074332855,0.27749706,0.32170193,0.398483709,0.270237944,0.380891352,0.321804995,0.070124,0.0978,0.06,0.14055,0.056075,0.226257271,0.224433979,0.336869423
2008-08-21 20:00:00+00:00,0.211196909,0.154235046,0.074332855,0.273934272,0.327499009,0.443031327,0.254373425,0.368758,0.323391813,0.070124,0.10227499999999999,0.06,0.14515,0.05585,0.230864851,0.230829101,0.345503389
2008-08-22 20:00:00+00:00,0.20813489,0.152647032,0.074881516,0.27557946,0.328125933,0.430309245,0.256701253,0.390866773,0.32496856,0.069371967,0.0987,0.06,0.1439,0.056150000000000005,0.223091584,0.233094668,0.345503389
2008-08-25 20:00:00+00:00,0.226385927,0.154172962,0.073786032,0.26739079,0.335527365,0.454116516,0.265266,0.367768345,0.323093093,0.063015,0.099025,0.06,0.14495,0.05582499999999999,0.226693177,0.22819448,0.340366864
2008-08-26 20:00:00+00:00,0.219161183,0.149639453,0.073306485,0.274308346,0.341967883,0.431324064,0.264756448,0.364055355,0.317324558,0.063015,0.0989,0.06,0.147575,0.056125,0.223644426,0.229859069,0.347318925
2008-08-27 20:00:00+00:00,0.212021667,0.142506511,0.072965039,0.269148502,0.338530367,0.44553339,0.255529234,0.380666341,0.311273837,0.063015,0.1001,0.06,0.147925,0.05635,0.222583972,0.230103243,0.340819557
2008-08-28 20:00:00+00:00,0.214873581,0.142028772,0.07368598,0.271507055,0.334172325,0.457921022,0.269495476,0.371732621,0.296402916,0.063015,0.09985,0.06,0.14565,0.057575,0.218333792,0.231170073,0.346466405
2008-08-29 20:00:00+00:00,0.212487652,0.113896753,0.07368598,0.264720367,0.330224188,0.448733962,0.269223423,0.393899917,0.31696486,0.063015,0.1008,0.06,0.14615,0.05752500000000001,0.218387886,0.223881043,0.349831307
2008-09-02 20:00:00+00:00,0.215564301,0.130747851,0.07539618,0.274354511,0.348439059,0.443857761,0.266063476,0.391019642,0.304275702,0.063015,0.1011,0.06,0.15495,0.058175,0.216741518,0.229379113,0.353586125
2008-09-03 20:00:00+00:00,0.215305381,0.11539469,0.074347606,0.267816846,0.344659934,0.4282006,0.273153618,0.399127846,0.327279767,0.063015,0.10095000000000001,0.17190000000000003,0.1625,0.058425000000000005,0.222656059,0.229143019,0.361169796
2008-09-04 20:00:00+00:00,0.236292639,0.126451697,0.074347606,0.26848312,0.349399962,0.4422044,0.272808562,0.411546884,0.345472948,0.063015,0.10435,0.17149999999999999,0.16335,0.058675,0.23948397,0.231709373,0.366982742
2008-09-05 20:00:00+00:00,0.227240363,0.128971599,0.074836909,0.263352037,0.346897152,0.43849787,0.273226651,0.414407989,0.321581758,0.063015,0.1104,0.1743,0.17420000000000002,0.059074999999999996,0.245811042,0.242579908,0.377698652
2008-09-08 20:00:00+00:00,0.216865732,0.116198697,0.074152813,0.27298753,0.363020581,0.396637477,0.276424934,0.401114079,0.330813097,0.063015,0.10339999999999999,0.17300000000000001,0.16927499999999998,0.058725,0.234559342,0.234266986,0.373990642
2008-09-09 20:00:00+00:00,0.239208425,0.119245234,0.074152813,0.280062383,0.370194313,0.42124575,0.278489686,0.420881722,0.355940846,0.063015,0.10742499999999999,0.1759,0.178675,0.058625,0.237821239,0.238690438,0.377881166
2008-09-10 20:00:00+00:00,0.227236821,0.148838941,0.073351314,0.287793,0.35983888,0.402825358,0.261274511,0.430221009,0.327672225,0.063015,0.105425,0.16949999999999998,0.177775,0.058675,0.235917829,0.240768551,0.38258575
2008-09-11 20:00:00+00:00,0.228644529,0.149593451,0.075414393,0.298492641,0.357113019,0.420319641,0.266758604,0.430984859,0.350214027,0.063015,0.109125,0.16155,0.17739999999999997,0.059824999999999996,0.237575432,0.243348199,0.385329938
2008-09-12 20:00:00+00:00,0.236235199,0.119539167,0.077139377,0.287830813,0.347768111,0.414475496,0.272552306,0.418491382,0.336055051,0.063015,0.106075,0.16010000000000002,0.177175,0.0594,0.231706808,0.241458768,0.392191276
2008-09-15 20:00:00+00:00,0.258953476,0.192054446,0.077139377,0.305409525,0.365691513,0.420234725,0.287652074,0.462478211,0.377914065,0.063015,0.12655,0.17379999999999998,0.191025,0.062575,0.250164479,0.241458768,0.392191276
2008-09-16 20:00:00+00:00,0.247845418,0.142376511,0.077139377,0.312115869,0.367950568,0.406584623,0.2752611,0.470121031,0.345641534,0.063015,0.125425,0.2007,0.199725,0.063975,0.262238043,0.285868368,0.437681184
2008-09-17 20:00:00+00:00,0.269514629,0.177197881,0.077139377,0.3635822,0.367778872,0.438000887,0.297020318,0.547413907,0.392607081,0.063015,0.12342499999999999,0.1725,0.196175,0.064125,0.266595583,0.262168173,0.442310173
2008-09-18 20:00:00+00:00,0.253600403,0.178662604,0.077139377,0.396947953,0.332879274,0.469333829,0.267193332,0.559145093,0.378465474,0.063015,0.127525,0.1934,0.20427499999999998,0.06325,0.268875645,0.268481782,0.462149509
2008-09-19 20:00:00+00:00,0.261331599,0.1129559,0.077139377,0.3781888,0.35597,0.431021579,0.257035,0.516556635,0.460203,0.063015,0.11852499999999999,0.1839,0.19177499999999997,0.06255,0.244381521,0.257799168,0.447331275
2008-09-22 20:00:00+00:00,0.265242333,0.141380328,0.077139377,0.390680758,0.35944,0.449402806,0.289386266,0.512074989,0.380725832,0.063015,0.12112500000000001,0.1852,0.190225,0.06245,0.24357514,0.256018402,0.435024537
2008-09-23 20:00:00+00:00,0.274252833,0.154134503,0.077139377,0.366603104,0.361643,0.472338885,0.301213833,0.52864233,0.42370479,0.063015,0.1232,0.18510000000000001,0.18682500000000002,0.062875,0.254291855,0.256018402,0.450409037
2008-09-24 20:00:00+00:00,0.268071549,0.186465837,0.077139377,0.342333776,0.357681049,0.439068316,0.29731025,0.518970711,0.429787621,0.063015,0.120725,0.18350000000000002,0.181525,0.0625,0.256902186,0.248814957,0.427388048
2008-09-25 20:00:00+00:00,0.254512733,0.140433734,0.077139377,0.355920555,0.348617166,0.44776395,0.290173333,0.50468981,0.42436013,0.112215,0.1235,0.1832,0.185075,0.062275,0.250585335,0.250545091,0.42231972
2008-09-26 20:00:00+00:00,0.257993583,0.165042764,0.077139377,0.360255714,0.361188166,0.475309248,0.3095952,0.510389974,0.413165041,0.112215,0.127575,0.18789999999999998,0.189925,0.06235,0.272705379,0.255792463,0.42376018
2008-09-29 20:00:00+00:00,0.3167958,0.204079538,0.077139377,0.394381395,0.429274999,0.536713635,0.30539,0.648077023,0.534726575,0.112215,0.13365,0.2066,0.200825,0.06265,0.291490311,0.271317147,0.452216102
2008-09-30 20:00:00+00:00,0.281563496,0.132817373,0.077139377,0.384024155,0.385651936,0.525604635,0.311345792,0.595431006,0.489541725,0.11732,0.131,0.23379999999999998,0.208125,0.0636,0.293432853,0.288175711,0.462149456
2008-10-01 20:00:00+00:00,0.295794312,0.160314272,0.077139377,0.365729182,0.403650444,0.491834917,0.324690789,0.604175296,0.449469364,0.11732,0.1273,0.21960000000000002,0.20837499999999998,0.06375,0.297008268,0.281169735,0.462149456
2008-10-02 20:00:00+00:00,0.309533973,0.179071024,0.077139377,0.394171885,0.421223157,0.479317832,0.338249473,0.599105983,0.528244076,0.11732,0.13119999999999998,0.2245,0.2138,0.06434999999999999,0.30367961,0.286594703,0.456021198
2008-10-03 20:00:00+00:00,0.323834722,0.19739298,0.077139377,0.379904068,0.457508804,0.499233024,0.368511228,0.596868183,0.526277611,0.11732,0.1282,0.2266,0.20735,0.06575,0.289090059,0.297824538,0.465199434
2008-10-06 20:00:00+00:00,0.330719515,0.227245971,0.077139377,0.410880723,0.49629065,0.535031541,0.339100294,0.665196847,0.619399961,0.11732,0.15039999999999998,0.2266,0.25120000000000003,0.07235,0.330641846,0.316403599,0.491036636
2008-10-07 20:00:00+00:00,0.355381957,0.157280565,0.077139377,0.397158771,0.492121714,0.526841092,0.389788078,0.635972871,0.630119715,0.11732,0.146675,0.2266,0.256375,0.073925,0.329275436,0.334467129,0.491036636
2008-10-08 20:00:00+00:00,0.369699138,0.196578306,0.077139377,0.403923733,0.462738022,0.542258909,0.413594671,0.657522428,0.646996375,0.11732,0.166375,0.2266,0.285775,0.08289999999999999,0.375659477,0.400482973,0.541160162
2008-10-09 20:00:00+00:00,0.401062245,0.192632856,0.077139377,0.390602333,0.61649619,0.522046838,0.390910785,0.657677627,0.681853896,0.11732,0.151475,0.2266,0.28657499999999997,0.08145,0.369744837,0.386884448,0.539683097
2008-10-10 20:00:00+00:00,0.426987631,0.182123725,0.077139377,0.48050019,0.536422851,0.591328838,0.407929957,0.756637364,0.732161935,0.11732,0.176075,0.2266,0.32305,0.08647500000000001,0.443768487,0.460517429,0.644840484
2008-10-13 20:00:00+00:00,0.37410285,0.184972873,0.077139377,0.417338514,0.537036626,0.511778238,0.364843621,0.614979264,0.585219569,0.11732,0.158575,0.2266,0.313875,0.0864,0.388448557,0.460517429,0.601902344
2008-10-14 20:00:00+00:00,0.350065947,0.223250639,0.077139377,0.394817746,0.540692917,0.557023251,0.383857575,0.64221804,0.601209115,0.11732,0.143425,0.27140000000000003,0.27665,0.080975,0.368703877,0.452196313,0.580849435
2008-10-15 20:00:00+00:00,0.422341515,0.254071511,0.077139377,0.398758699,0.629698428,0.583733805,0.410165684,0.674770728,0.686477754,0.11732,0.156825,0.2682,0.2999,0.089975,0.411822962,0.403047474,0.586140434
2008-10-16 20:00:00+00:00,0.404226794,0.189168272,0.077139377,0.39476343,0.624843785,0.616616199,0.433246143,0.693462583,0.711584379,0.11732,0.15645,0.2682,0.324025,0.11285,0.49478665,0.466680919,0.64328301
2008-10-17 20:00:00+00:00,0.4231304,0.156589409,0.077139377,0.403838555,0.587178666,0.601223664,0.438633877,0.729193206,0.74857173,0.11732,0.1489,0.2682,0.302775,0.11035,0.471211772,0.4764147,0.655662038
2008-10-20 20:00:00+00:00,0.362056752,0.167312066,0.077139377,0.367416666,0.533172363,0.551795286,0.402273473,0.652087662,0.652924166,0.11732,0.137075,0.35810000000000003,0.282825,0.1074,0.429422208,0.450752363,0.636830153
2008-10-21 20:00:00+00:00,0.362761684,0.221408558,0.077139377,0.379168373,0.512773242,0.559413772,0.393650638,0.657091833,0.655246377,0.11732,0.1389,0.3482,0.292275,0.11265,0.397117936,0.422696063,0.613766191
2008-10-22 20:00:00+00:00,0.419956947,0.246579198,0.077139377,0.411129769,0.624400631,0.591417533,0.411546363,0.728794576,0.753223412,0.11732,0.1583,0.40850000000000003,0.321375,0.11720000000000001,0.426740969,0.446086478,0.61041354
2008-10-23 20:00:00+00:00,0.41052511,0.179026376,0.14598238,0.379779833,0.597781657,0.603765904,0.440708621,0.727507432,0.734160142,0.11732,0.1748,0.42810000000000004,0.346525,0.1367,0.435377973,0.471113804,0.64372924
2008-10-24 20:00:00+00:00,0.486187999,0.190465077,0.14598238,0.41092109,0.652473166,0.624871396,0.487473799,0.806128898,0.821505203,0.11732,0.202475,0.40850000000000003,0.39575000000000005,0.14355,0.488621571,0.55314732,0.708835246
2008-10-27 20:00:00+00:00,0.474948991,0.177832761,0.131299431,0.418489536,0.654516582,0.664226014,0.48176258,0.789456779,0.803556142,0.11732,0.22135000000000002,0.41259999999999997,0.4191,0.14400000000000002,0.510763663,0.631731221,0.848308351
2008-10-28 20:00:00+00:00,0.427605115,0.212950399,0.132688,0.406506114,0.608212652,0.674745671,0.423851663,0.746567138,0.684546857,0.11732,0.2059,0.41259999999999997,0.393275,0.13465,0.482773957,0.566980381,0.76775427
2008-10-29 20:00:00+00:00,0.457097459,0.154956833,0.1341115,0.403666666,0.602778398,0.630938708,0.445437849,0.791903964,0.743306666,0.11732,0.198775,0.4154,0.364375,0.126975,0.459720523,0.554127645,0.74651436
2008-10-30 20:00:00+00:00,0.434128754,0.237171269,0.1341115,0.411397934,0.584409236,0.605888783,0.43784167,0.776565008,0.749607253,0.11732,0.194725,0.4154,0.36685,0.123975,0.455701672,0.515323649,0.736357637
2008-10-31 20:00:00+00:00,0.425662447,0.156029533,0.1341115,0.412976438,0.575371684,0.618353119,0.420486805,0.776234901,0.74190709,0.11732,0.200875,0.36,0.382575,0.1267,0.444102814,0.552944102,0.753864854
2008-11-03 21:00:00+00:00,0.41413308,0.171468931,0.1309268,0.399091968,0.563733622,0.641202443,0.424254912,0.723355279,0.683099333,0.2437201,0.187825,0.3592,0.3611,0.1202,0.421081511,0.552944102,0.737059813
2008-11-04 21:00:00+00:00,0.385757308,0.20289915,0.1320432,0.378910495,0.530769066,0.635656135,0.403916666,0.667566467,0.596831904,0.2437201,0.170875,0.3568,0.344925,0.11384999999999999,0.361867212,0.504729895,0.665743892
2008-11-05 21:00:00+00:00,0.409160073,0.1946547,0.1320432,0.357513619,0.544883868,0.622711831,0.425771515,0.714981016,0.672440952,0.2437201,0.174575,0.3268,0.3354,0.11352499999999999,0.366497148,0.457679464,0.634879743
2008-11-06 21:00:00+00:00,0.449015098,0.1704292,0.130904803,0.355393428,0.603596526,0.694173317,0.46870887,0.757017027,0.710321052,0.2437201,0.18197500000000003,0.3398,0.35167499999999996,0.1185,0.416704234,0.492264601,0.705875615
2008-11-07 21:00:00+00:00,0.41796621,0.212368555,0.123300144,0.348367777,0.562439657,0.676501405,0.438499529,0.720974033,0.667495466,0.2437201,0.17947500000000002,0.34409999999999996,0.356175,0.1217,0.392315057,0.51517429,0.690453836
2008-11-10 21:00:00+00:00,0.424959142,0.1832284,0.1277296,0.343591742,0.573994757,0.696545304,0.44854171,0.739775313,0.674032999,0.2437201,0.173325,0.33990000000000004,0.343725,0.11699999999999999,0.38437347,0.477933164,0.686181394
2008-11-11 21:00:00+00:00,0.437931733,0.16454238,0.1166044,0.353400944,0.570351231,0.688330715,0.470865473,0.773131491,0.710941726,0.2437201,0.177375,0.3392,0.347525,0.12145,0.408424279,0.486091424,0.6848913
2008-11-12 21:00:00+00:00,0.462447778,0.195538725,0.122051955,0.349458571,0.638055894,0.696451264,0.481517224,0.79261861,0.746360088,0.2437201,0.18982500000000002,0.3429,0.369175,0.12315,0.441560356,0.486326423,0.68929263
2008-11-13 21:00:00+00:00,0.439638484,0.217098266,0.135315066,0.378619047,0.568539178,0.618877089,0.450810484,0.7711222,0.697771371,0.2437201,0.1942,0.34509999999999996,0.37782499999999997,0.13119999999999998,0.438399186,0.525003526,0.739904136
2008-11-14 21:00:00+00:00,0.471537726,0.243592823,0.127088,0.37942592,0.590857859,0.668646377,0.441588578,0.779817076,0.749852361,0.2437201,0.1886,0.345,0.372325,0.1285,0.432030236,0.522095062,0.719018713
2008-11-17 21:00:00+00:00,0.490990791,0.212948722,0.121780833,0.365568142,0.621753715,0.678274734,0.511913868,0.801370088,0.778568365,0.2437201,0.18864999999999998,0.4168,0.382675,0.12655,0.453694482,0.5201854,0.706524603
2008-11-18 21:00:00+00:00,0.490415578,0.195099933,0.1164502,0.362363799,0.626372826,0.623157735,0.511187621,0.834645654,0.817015933,0.2437201,0.181925,0.4152,0.37627499999999997,0.12855,0.451400424,0.537230197,0.720152609
2008-11-19 21:00:00+00:00,0.521402543,0.247276238,0.11873,0.368222257,0.657077929,0.608359079,0.540319771,0.84469659,0.874834346,0.2437201,0.17885,0.4152,0.356625,0.13385,0.47375276,0.544429431,0.722748668
2008-11-20 21:00:00+00:00,0.555180499,0.267421453,0.11873,0.371837023,0.733136133,0.624614267,0.582299466,0.861321723,0.88649053,0.2437201,0.18975,0.4153,0.38512500000000005,0.13365,0.505271899,0.592948108,0.772901329
2008-11-21 21:00:00+00:00,0.5150452,0.278304133,0.122533142,0.430515,0.681299884,0.582617047,0.543549689,0.817739859,0.794885514,0.2437201,0.18215,0.44299999999999995,0.39112499999999994,0.1434,0.515825147,0.588111744,0.761243506
2008-11-24 21:00:00+00:00,0.47372694,0.300184674,0.122533142,0.43670923,0.663757221,0.624423314,0.517571684,0.792584617,0.795262666,0.2437201,0.1769,0.4437,0.390725,0.1485,0.46743503,0.588111744,0.743653912
2008-11-25 21:00:00+00:00,0.465404101,0.319293421,0.122533142,0.427428006,0.63937887,0.624471955,0.51441644,0.805466693,0.807088882,0.2437201,0.1752,0.4447,0.38792499999999996,0.14385,0.455851967,0.570875543,0.72726674
2008-11-26 21:00:00+00:00,0.441830089,0.297224995,0.122667714,0.439140895,0.612854578,0.604798266,0.475094842,0.751832898,0.749551047,0.2437201,0.17197500000000002,0.43700000000000006,0.382275,0.1426,0.451330532,0.556866787,0.702175957
2008-11-28 18:00:00+00:00,0.442504224,0.271789866,0.122667714,0.4401604,0.612261852,0.632844476,0.486865585,0.761800566,0.753173777,0.2437201,0.163075,0.38659999999999994,0.3582,0.13542500000000002,0.419352909,0.500893242,0.635081779
2008-12-01 21:00:00+00:00,0.507673391,0.318986888,0.122667714,0.429639666,0.655781043,0.645450631,0.504177564,0.781346622,0.805716307,0.2437201,0.1745,0.38659999999999994,0.36725,0.13574999999999998,0.451811117,0.49303182,0.627110338
2008-12-02 21:00:00+00:00,0.486170721,0.280805114,0.122667714,0.418099714,0.645309789,0.667477539,0.497858984,0.764893207,0.777003119,0.2437201,0.18072500000000002,0.3815,0.376875,0.14055,0.441471837,0.528849074,0.655172295
2008-12-03 21:00:00+00:00,0.479723214,0.376755496,0.121685758,0.424493561,0.644378554,0.69631288,0.488325452,0.746855423,0.771414455,0.2437201,0.18335,0.38270000000000004,0.376375,0.13995,0.434374691,0.514629958,0.633585846
2008-12-04 21:00:00+00:00,0.497381894,0.330233142,0.121685758,0.417950238,0.67522688,0.71183284,0.513557833,0.765162886,0.785823219,0.2437201,0.183725,0.3599,0.36229999999999996,0.1449,0.432167432,0.518600215,0.642268199
2008-12-05 21:00:00+00:00,0.47327211,0.349129497,0.121685758,0.416712742,0.689181305,0.723680555,0.480366484,0.750260266,0.762108942,0.2437201,0.18280000000000002,0.3553,0.356475,0.1475,0.470206279,0.515863673,0.615335117
2008-12-08 21:00:00+00:00,0.463515964,0.352909409,0.11806203,0.41680979,0.643604947,0.727579428,0.500961543,0.701189701,0.7228408,0.264698285,0.174425,0.34380000000000005,0.348825,0.15039999999999998,0.422395262,0.500097577,0.599057202
2008-12-09 21:00:00+00:00,0.479258947,0.315871017,0.11806203,0.406900466,0.630745557,0.740232166,0.501892178,0.693039804,0.723686666,0.264788099,0.172675,0.3251,0.340775,0.1501,0.417819982,0.496440025,0.604313424
2008-12-10 21:00:00+00:00,0.476249078,0.324653509,0.11806203,0.404604761,0.599669936,0.712350068,0.468507699,0.682181442,0.714430457,0.264788099,0.167825,0.325,0.338925,0.1431,0.40900371,0.474288896,0.60753081
2008-12-11 21:00:00+00:00,0.473489936,0.317028605,0.114702857,0.41803242,0.602016098,0.701854057,0.487110375,0.689665622,0.727217155,0.264788099,0.1684,0.3231,0.329925,0.13845000000000002,0.408899766,0.465214075,0.608305873
2008-12-12 21:00:00+00:00,0.468231817,0.316450575,0.113901593,0.415080049,0.621120463,0.728798333,0.472586771,0.676860244,0.742660539,0.264788099,0.180925,0.3231,0.338925,0.135,0.429092388,0.507648316,0.655885657
2008-12-15 21:00:00+00:00,0.47574921,0.276681999,0.114362133,0.427177238,0.603203684,0.725051976,0.486505663,0.715350163,0.739814057,0.264788099,0.181125,0.32909999999999995,0.335675,0.142625,0.428517861,0.476277486,0.666455625
2008-12-16 21:00:00+00:00,0.448042764,0.316222247,0.114362133,0.421273752,0.58416847,0.7590524,0.453902638,0.700854003,0.700191787,0.264788099,0.185825,0.33640000000000003,0.337925,0.15375,0.420497053,0.46764738,0.657229485
2008-12-17 21:00:00+00:00,0.443776063,0.290911796,0.114362133,0.432074633,0.585819347,0.735747688,0.460832999,0.70335861,0.677540044,0.264788099,0.193125,0.3406,0.326275,0.16105,0.414383389,0.468936477,0.642219015
2008-12-18 21:00:00+00:00,0.427253699,0.3667168,0.114362133,0.416058899,0.597128199,0.72548453,0.459307199,0.691321433,0.6703825,0.264788099,0.18100000000000002,0.34380000000000005,0.31822500000000004,0.16745000000000002,0.404905598,0.461661079,0.62032024
2008-12-19 21:00:00+00:00,0.41506525,0.363648239,0.114362133,0.409153456,0.578381666,0.730862514,0.4220313,0.66169631,0.634507856,0.331610999,0.17302499999999998,0.3406,0.310425,0.17024999999999998,0.381650848,0.457395924,0.617763483
2008-12-22 21:00:00+00:00,0.410079666,0.342590022,0.1187156,0.410343952,0.559525933,0.712266314,0.433052,0.631912182,0.637896706,0.34997,0.168875,0.33659999999999995,0.302575,0.168,0.377528642,0.43646702,0.623568875
2008-12-23 21:00:00+00:00,0.41574,0.378821062,0.1187156,0.405384828,0.54795635,0.733190793,0.4368368,0.639813577,0.620964779,0.34997,0.16667500000000002,0.33659999999999995,0.299175,0.1703,0.370286102,0.43646702,0.635321732
2008-12-24 21:00:00+00:00,0.400858533,0.262548795,0.1187156,0.406025088,0.551214133,0.740243161,0.443381333,0.629102017,0.646970355,0.34997,0.16485,0.3306,0.297075,0.17065000000000002,0.37028428,0.435981814,0.635760538
2008-12-26 21:00:00+00:00,0.402737733,0.344978903,0.1187156,0.412986253,0.553864733,0.743811333,0.433089966,0.675903435,0.632785558,0.34997,0.1641,0.33270000000000005,0.296125,0.16905,0.37028428,0.411766693,0.635760538
2008-12-29 21:00:00+00:00,0.4036879,0.291261279,0.1187156,0.422313642,0.525966,0.754224628,0.421172499,0.669416811,0.658849999,0.3585639,0.16495,0.3323,0.29502500000000004,0.16875,0.367914962,0.407364117,0.605613063
2008-12-30 21:00:00+00:00,0.391223156,0.245496696,0.1187156,0.420325888,0.517019737,0.764681904,0.414074245,0.632231139,0.610010499,0.3585639,0.166575,0.33509999999999995,0.289875,0.17010000000000003,0.357387195,0.405387824,0.604977411
2008-12-31 21:00:00+00:00,0.375977838,0.319476658,0.1187156,0.422451511,0.49118714,0.726207126,0.390984501,0.658648835,0.588357995,0.359670899,0.16670000000000001,0.33509999999999995,0.293825,0.16690000000000002,0.3621232,0.405387824,0.595255689
2009-01-02 21:00:00+00:00,0.343950715,0.312915755,0.1187156,0.417378857,0.490881218,0.700846863,0.401924863,0.646275542,0.629560695,0.359670899,0.16574999999999998,0.33509999999999995,0.29065,0.165575,0.331761365,0.405387824,0.576173951
2009-01-05 21:00:00+00:00,0.355805122,0.287797686,0.1187156,0.403037765,0.473400331,0.666797571,0.386058575,0.616246099,0.603078275,0.359670899,0.1616,0.33509999999999995,0.288825,0.16845,0.33790229,0.401133048,0.559300385
2009-01-06 21:00:00+00:00,0.348422028,0.308214045,0.1187156,0.403712073,0.45568587,0.657230714,0.379086735,0.603323058,0.579920072,0.359670899,0.15945,0.3481,0.290325,0.16645,0.33543395,0.398598112,0.560040091
2009-01-07 21:00:00+00:00,0.375949063,0.277051099,0.1187156,0.386119047,0.4859108,0.697778233,0.395277242,0.641090882,0.600309431,0.294402499,0.160325,0.3222,0.28785,0.1649,0.344784201,0.384069754,0.565143579
2009-01-08 21:00:00+00:00,0.374140252,0.276799063,0.1187156,0.389134349,0.489463928,0.694077142,0.38231588,0.619440467,0.58613221,0.294402499,0.167775,0.3243,0.29045000000000004,0.164875,0.352817769,0.406841106,0.598840637
2009-01-09 21:00:00+00:00,0.380745226,0.270603547,0.1187156,0.374506888,0.476875549,0.686308477,0.411238682,0.628982817,0.569567784,0.326345,0.16670000000000001,0.3284,0.2925,0.16335,0.353917667,0.406564932,0.575186339
2009-01-12 21:00:00+00:00,0.402083631,0.211141448,0.1187156,0.363865257,0.501206637,0.693908174,0.417784357,0.677416832,0.602203117,0.3376132,0.170625,0.3245,0.300525,0.16079999999999997,0.362779309,0.406564932,0.5964768
2009-01-13 21:00:00+00:00,0.395013831,0.286801449,0.1187156,0.352018152,0.492895356,0.649712114,0.410719082,0.646677223,0.627351496,0.3332218,0.17157499999999998,0.3356,0.3045,0.1613,0.379044699,0.422739694,0.599524191
2009-01-14 21:00:00+00:00,0.415943354,0.219890982,0.1187156,0.350148817,0.542227687,0.651003112,0.428688184,0.741615332,0.656009935,0.3322068,0.1739,0.33549999999999996,0.31337499999999996,0.15515,0.416547038,0.422675345,0.583877522
2009-01-15 21:00:00+00:00,0.416558947,0.276612157,0.1187156,0.363594928,0.546243712,0.634033368,0.443098421,0.6991473,0.634880965,0.3326082,0.174975,0.32939999999999997,0.31845,0.15837500000000002,0.430969735,0.452520274,0.615397294
2009-01-16 21:00:00+00:00,0.410948887,0.251721564,0.1187156,0.363113195,0.52514634,0.624937699,0.42254888,0.652935088,0.638462568,0.3313859,0.17129999999999998,0.32899999999999996,0.30912500000000004,0.1586,0.410869723,0.441046693,0.598531701
2009-01-20 21:00:00+00:00,0.454360031,0.275807434,0.1187156,0.374333517,0.568454031,0.673879498,0.470561438,0.728905282,0.689451961,0.325003,0.17835,0.33770000000000006,0.32817500000000005,0.1602,0.435770023,0.462388723,0.591796849
2009-01-21 21:00:00+00:00,0.412090973,0.248646999,0.139672,0.376105666,0.532231178,0.658375642,0.433790368,0.735562249,0.633269333,0.330954666,0.18245,0.33880000000000005,0.335675,0.16005,0.431861925,0.479340724,0.614691898
2009-01-22 21:00:00+00:00,0.414218903,0.258543587,0.141848214,0.375233295,0.52669284,0.651620776,0.426241684,0.698877014,0.641234784,0.333517539,0.18895,0.33799999999999997,0.337075,0.15885,0.422918416,0.461262208,0.607047162
2009-01-23 21:00:00+00:00,0.415468164,0.24006898,0.1320738,0.39345596,0.528995378,0.655378274,0.398532438,0.698762647,0.637146279,0.335622441,0.1887,0.3146,0.337,0.158825,0.416449042,0.479404063,0.606644808
2009-01-26 21:00:00+00:00,0.394655557,0.230163809,0.129514323,0.391635428,0.503349431,0.655887117,0.421138868,0.670620976,0.613046019,0.30550119,0.1912,0.31629999999999997,0.336,0.1558,0.390121899,0.477468473,0.606644808
2009-01-27 21:00:00+00:00,0.381786366,0.260066053,0.126744488,0.387750469,0.503007866,0.67442019,0.4041904,0.623154255,0.566756158,0.241705304,0.19142499999999998,0.3161,0.33442500000000003,0.152925,0.382342096,0.453095888,0.606644808
2009-01-28 21:00:00+00:00,0.359919452,0.242050525,0.128854806,0.395790507,0.472982624,0.660855805,0.377634324,0.599874888,0.586277244,0.225409958,0.18425,0.3152,0.332375,0.15257500000000002,0.360835182,0.43546383,0.606644808
2009-01-29 21:00:00+00:00,0.372600421,0.24796768,0.121182285,0.398898571,0.4897448,0.67058478,0.385757705,0.645723,0.579107542,0.227142571,0.184575,0.3086,0.33165,0.150175,0.36579898,0.419907331,0.582414455
2009-01-30 21:00:00+00:00,0.381832466,0.233713055,0.115289822,0.425264688,0.481642743,0.662507771,0.401147101,0.641836647,0.577257555,0.236713155,0.189225,0.3129,0.339925,0.150975,0.374423447,0.43529948,0.565190267
2009-02-02 21:00:00+00:00,0.376012322,0.264112319,0.129088373,0.405578253,0.505817222,0.665420349,0.391924943,0.599514702,0.582052844,0.217129698,0.1929,0.3144,0.353175,0.15325,0.384530565,0.441112836,0.579083538
2009-02-03 21:00:00+00:00,0.361113473,0.245245009,0.110418857,0.41228978,0.468649047,0.606508571,0.360797868,0.600594114,0.573332576,0.218534557,0.18932500000000002,0.2985,0.34704999999999997,0.1484,0.369100211,0.438890999,0.565998864
2009-02-04 21:00:00+00:00,0.365815307,0.254244802,0.117150761,0.413113282,0.477977887,0.595526627,0.365836745,0.60965778,0.535770266,0.211743468,0.18767499999999998,0.2939,0.347425,0.145125,0.350763089,0.417161201,0.539422459
2009-02-05 21:00:00+00:00,0.361142561,0.254332883,0.110553015,0.413659561,0.464329168,0.560235429,0.368015447,0.607787223,0.518229523,0.214211831,0.17595,0.2723,0.34535,0.13942500000000002,0.355148343,0.416289064,0.522681274
2009-02-06 21:00:00+00:00,0.359199442,0.2722438,0.115491619,0.406979438,0.462118915,0.557314444,0.373937915,0.561798891,0.499183457,0.211926752,0.1686,0.2723,0.34235,0.13692500000000002,0.340596509,0.403349232,0.511491223
2009-02-09 21:00:00+00:00,0.363279315,0.260451238,0.116293088,0.39785798,0.45458428,0.568060178,0.37106535,0.573380955,0.495673017,0.213210126,0.17059999999999997,0.2666,0.34204999999999997,0.134275,0.341206307,0.403219776,0.511623158
2009-02-10 21:00:00+00:00,0.383678436,0.242371444,0.109195511,0.401100111,0.483557599,0.591141875,0.394852866,0.55479352,0.546317822,0.213358455,0.17545000000000002,0.24609999999999999,0.3443,0.137175,0.359715015,0.397199541,0.508377425
2009-02-11 21:00:00+00:00,0.367802842,0.275678685,0.106488914,0.412768642,0.472108315,0.581115933,0.394674631,0.529726011,0.564694314,0.211282142,0.174725,0.2632,0.346775,0.136425,0.357354056,0.397199541,0.523097307
2009-02-12 21:00:00+00:00,0.366475754,0.278882706,0.10600652,0.415615,0.465105992,0.582904031,0.376817712,0.571455738,0.518509323,0.212103399,0.17405,0.264,0.350975,0.141675,0.367425504,0.40593398,0.525415492
2009-02-13 21:00:00+00:00,0.358724996,0.264840947,0.107648888,0.402635904,0.447005871,0.568115158,0.37971501,0.516016014,0.473718565,0.210583047,0.16717500000000002,0.2636,0.34454999999999997,0.139075,0.358090495,0.39335511,0.50516322
2009-02-17 21:00:00+00:00,0.390132947,0.252099619,0.108625533,0.441071523,0.490780715,0.604163739,0.406825221,0.571512838,0.560765619,0.212626076,0.165725,0.2762,0.34424999999999994,0.141675,0.383010679,0.396890468,0.530632144
2009-02-18 21:00:00+00:00,0.403341049,0.25168292,0.108439095,0.437606949,0.489951357,0.614038553,0.410049003,0.571977929,0.562050457,0.22014336,0.16149999999999998,0.2873,0.338175,0.14397500000000002,0.380564554,0.404014341,0.523590122
2009-02-19 21:00:00+00:00,0.387910347,0.236676501,0.107957396,0.41745833,0.489398333,0.608794457,0.393266978,0.572789052,0.563774723,0.214258531,0.158,0.2876,0.334625,0.143625,0.375813551,0.397834196,0.515061592
2009-02-20 21:00:00+00:00,0.396373652,0.248391466,0.107841366,0.425558666,0.511240284,0.617288203,0.387021389,0.614334752,0.562835466,0.21911,0.1607,0.2876,0.337075,0.142975,0.398158169,0.404305786,0.523010634
2009-02-23 21:00:00+00:00,0.420901438,0.2416784,0.108811063,0.422992117,0.522988421,0.62273935,0.414926361,0.582941764,0.557497695,0.234538098,0.16415,0.2876,0.337375,0.140125,0.402335289,0.413551253,0.515726392
2009-02-24 21:00:00+00:00,0.3849692,0.258135696,0.109070753,0.405219704,0.506898666,0.614214443,0.377041799,0.5986195,0.56291452,0.217120476,0.16075,0.2876,0.33315,0.140675,0.406494517,0.422627892,0.540450336
2009-02-25 21:00:00+00:00,0.380157547,0.264749371,0.108876828,0.415942,0.507240657,0.592104687,0.38472731,0.565043038,0.531523371,0.219724685,0.15664999999999998,0.2876,0.31679999999999997,0.14127499999999998,0.395474385,0.404682336,0.52807944
2009-02-26 21:00:00+00:00,0.387588319,0.262038855,0.112305473,0.411749841,0.502184991,0.588836003,0.390129208,0.546537589,0.536258133,0.224474692,0.15407500000000002,0.2876,0.302375,0.141375,0.366629785,0.403497078,0.527795698
2009-02-27 21:00:00+00:00,0.388056415,0.238612285,0.111597326,0.403674652,0.513905373,0.582912187,0.395141424,0.588083483,0.55219963,0.22676865,0.16185,0.2876,0.307325,0.1406,0.371646497,0.39102788,0.521376176
2009-03-02 21:00:00+00:00,0.424595157,0.277797466,0.111597326,0.404493499,0.549727347,0.636741062,0.418234821,0.587796851,0.567387276,0.255213666,0.16355,0.2876,0.31010000000000004,0.145475,0.393072589,0.410073493,0.550744018
2009-03-03 21:00:00+00:00,0.426065336,0.256956111,0.112166666,0.411442799,0.543978919,0.622826471,0.405783024,0.618273633,0.581832933,0.254441355,0.16225,0.2876,0.30972500000000003,0.144575,0.39086867,0.417801758,0.543197943
2009-03-04 21:00:00+00:00,0.378226498,0.281604692,0.111956992,0.387129803,0.516286143,0.598737096,0.39869148,0.580574455,0.535263898,0.253858031,0.1557,0.2876,0.301675,0.14397500000000002,0.367450689,0.406371491,0.52909006
2009-03-05 21:00:00+00:00,0.406286631,0.226343866,0.109469238,0.391700695,0.537194089,0.595217,0.406676142,0.57245254,0.551293095,0.261992333,0.15595,0.2876,0.302775,0.144425,0.380749463,0.391687795,0.534884766
2009-03-06 21:00:00+00:00,0.405772147,0.266303406,0.111509317,0.403620396,0.53718827,0.582554045,0.405182157,0.557629207,0.557194253,0.260881269,0.16155,0.2876,0.304975,0.144025,0.393490664,0.407956646,0.540481991
2009-03-09 20:00:00+00:00,0.401572408,0.249899785,0.120050317,0.391189585,0.532057371,0.586645765,0.402770108,0.585101908,0.545615761,0.266906971,0.15689999999999998,0.2876,0.3031,0.143625,0.388971278,0.407367842,0.541832032
2009-03-10 20:00:00+00:00,0.372452542,0.249344628,0.111559142,0.383494457,0.515672689,0.566156139,0.383984431,0.562598241,0.532611614,0.266179642,0.16045,0.2876,0.301525,0.14315,0.366805089,0.401841654,0.5320625
2009-03-11 20:00:00+00:00,0.371782498,0.232703441,0.112899555,0.372435546,0.510746021,0.59316525,0.3699675,0.603747445,0.5360847,0.267322749,0.163525,0.2876,0.302275,0.14345,0.366615301,0.371981707,0.526150083
2009-03-12 20:00:00+00:00,0.362672192,0.262946388,0.113356666,0.384154555,0.483303656,0.59297141,0.362450519,0.533589252,0.527450366,0.293954055,0.16635000000000003,0.2876,0.30345,0.142625,0.369743595,0.377124111,0.516763404
2009-03-13 20:00:00+00:00,0.370173736,0.236718499,0.120736952,0.380566142,0.488793947,0.589877784,0.369611536,0.55940733,0.51260739,0.302975523,0.163275,0.2876,0.301975,0.141675,0.373843122,0.36143067,0.503848874
2009-03-16 20:00:00+00:00,0.37900587,0.271439188,0.120474558,0.370777809,0.492407756,0.587867617,0.386430859,0.586602554,0.507554025,0.314274104,0.1634,0.2876,0.29905000000000004,0.14075,0.366464633,0.354482674,0.497583484
2009-03-17 20:00:00+00:00,0.360243694,0.245687066,0.120474849,0.369919066,0.472263361,0.56649055,0.371819838,0.538574351,0.483784693,0.312844768,0.157775,0.2876,0.2948,0.13765,0.370589393,0.356458079,0.494424264
2009-03-18 20:00:00+00:00,0.357350136,0.255024076,0.120474849,0.394123428,0.450713557,0.564407673,0.369088421,0.516147673,0.505364695,0.326514285,0.160825,0.2876,0.292,0.1377,0.371847092,0.366645725,0.484370647
2009-03-19 20:00:00+00:00,0.358145729,0.228161825,0.118450158,0.402016515,0.458823277,0.554096225,0.373263621,0.56440317,0.493787014,0.303519492,0.17515,0.2876,0.29765,0.13655,0.374425815,0.368754232,0.483817118
2009-03-20 20:00:00+00:00,0.395844808,0.203291739,0.120074158,0.394800234,0.477941403,0.548816437,0.404464982,0.552959782,0.482598698,0.310541931,0.16649999999999998,0.2876,0.287425,0.13675,0.381042913,0.368754232,0.497662374
2009-03-23 20:00:00+00:00,0.3830924,0.2564924,0.120521,0.3876528,0.4695288,0.531649949,0.358107,0.554798187,0.4898597,0.2936348,0.16215,0.2876,0.28647500000000004,0.135125,0.368204328,0.366887661,0.496957745
2009-03-24 20:00:00+00:00,0.375091714,0.187436817,0.120766,0.371657343,0.467828171,0.534716648,0.381894,0.5322619,0.494898121,0.289142,0.1524,0.2876,0.279525,0.133325,0.363447747,0.364667183,0.487338849
2009-03-25 20:00:00+00:00,0.373287214,0.210689502,0.103641,0.373347537,0.462034628,0.543465762,0.374850371,0.515018562,0.468871629,0.285729,0.155475,0.2876,0.2799,0.13417500000000002,0.361024183,0.367857069,0.489645057
2009-03-26 20:00:00+00:00,0.3708609,0.199300466,0.1040419,0.376171274,0.447218828,0.539601059,0.369601642,0.541868375,0.479739731,0.2817675,0.15445,0.2876,0.281125,0.1334,0.360074957,0.359949795,0.481007337
2009-03-27 20:00:00+00:00,0.3744309,0.209910999,0.1038678,0.367541562,0.467758985,0.533066875,0.370048114,0.502278109,0.479697414,0.290406999,0.154225,0.2876,0.280125,0.132025,0.367177986,0.361973026,0.495111185
2009-03-30 20:00:00+00:00,0.390287642,0.177806165,0.1020445,0.366087815,0.482880942,0.543271156,0.404382628,0.533676612,0.511230224,0.29841,0.158075,0.2876,0.2845,0.1321,0.385337016,0.382896258,0.516252649
2009-03-31 20:00:00+00:00,0.391178285,0.200843384,0.1028132,0.361605887,0.489546799,0.548435718,0.398121028,0.543105012,0.488236348,0.290628,0.15335000000000001,0.2876,0.28265,0.132575,0.376898175,0.389914924,0.508712798
2009-04-01 20:00:00+00:00,0.3868256,0.220246037,0.1056712,0.363225064,0.4862728,0.552944068,0.3761819,0.5613835,0.489956096,0.291689,0.154475,0.2876,0.28462499999999996,0.131275,0.370885515,0.378533829,0.50822244
2009-04-02 20:00:00+00:00,0.381252356,0.23758851,0.1027142,0.35183675,0.479432215,0.522544874,0.38940221,0.507682187,0.486172556,0.2899076,0.15185,0.2876,0.285075,0.131025,0.36318511,0.363569035,0.502279277
2009-04-03 20:00:00+00:00,0.378701961,0.196801848,0.1041232,0.350643839,0.46661135,0.522371934,0.382958078,0.493815562,0.480171054,0.2867048,0.14859999999999998,0.2876,0.27897500000000003,0.128525,0.364782469,0.362119991,0.497763082
2009-04-06 20:00:00+00:00,0.376076315,0.215992526,0.1042168,0.347449496,0.469378878,0.538048043,0.38825981,0.499200859,0.504164341,0.289889099,0.143825,0.2876,0.27237500000000003,0.129225,0.366461909,0.359283742,0.489534431
2009-04-07 20:00:00+00:00,0.381189149,0.200345843,0.104976,0.335105471,0.462325799,0.540033987,0.392217635,0.5431284,0.487043975,0.2923616,0.14245,0.2876,0.26739999999999997,0.1285,0.366958409,0.358843423,0.485905026
2009-04-08 20:00:00+00:00,0.373632317,0.198439543,0.1031575,0.327558175,0.462319343,0.53358755,0.370350026,0.518582684,0.471309951,0.28884,0.14415,0.2876,0.271675,0.12925,0.362602768,0.366520633,0.500754174
2009-04-09 20:00:00+00:00,0.353333947,0.214404656,0.102376,0.32140994,0.445117874,0.518562053,0.355305694,0.476393999,0.423746548,0.272014,0.14255,0.2876,0.27015,0.12905,0.350320439,0.352189317,0.486543795
2009-04-13 20:00:00+00:00,0.355954866,0.214847217,0.0996345,0.321584975,0.460356937,0.5379587,0.355486214,0.529474853,0.482518,0.268314999,0.1423,0.2876,0.273575,0.128475,0.350320439,0.352434856,0.486543795
2009-04-14 20:00:00+00:00,0.363866368,0.181984754,0.100627199,0.325582074,0.440334325,0.53889284,0.371429491,0.542113553,0.469158928,0.2602232,0.1439,0.2876,0.2768,0.126925,0.351147489,0.35843867,0.473969746
2009-04-15 20:00:00+00:00,0.360425526,0.185594619,0.099737199,0.31826375,0.458874162,0.532408081,0.367915789,0.538700296,0.49647307,0.254035,0.1421,0.2876,0.276425,0.12539999999999998,0.352319453,0.361880869,0.461087771
2009-04-16 20:00:00+00:00,0.34704728,0.18309618,0.0996349,0.306460393,0.443458828,0.52608017,0.362907024,0.479618787,0.473150596,0.2344072,0.1417,0.2876,0.273225,0.12445,0.343927153,0.358193741,0.467282692
2009-04-17 20:00:00+00:00,0.343671957,0.193655058,0.0996349,0.303820187,0.41160904,0.509008609,0.350057057,0.504063437,0.477130102,0.21339,0.138125,0.2876,0.268725,0.1229,0.336983508,0.346281104,0.463799676
2009-04-20 20:00:00+00:00,0.358536757,0.21212885,0.103706443,0.304132054,0.435982484,0.543599012,0.366202589,0.520215065,0.474148428,0.239321484,0.14002499999999998,0.2876,0.274725,0.1216,0.350042292,0.338927868,0.456881088
2009-04-21 20:00:00+00:00,0.349101017,0.209411362,0.107145825,0.305363499,0.427301133,0.5289789,0.349015212,0.530165064,0.480156068,0.2304614,0.13865,0.2876,0.27747499999999997,0.1191,0.35060585,0.343780199,0.456304976
2009-04-22 20:00:00+00:00,0.347431466,0.19734225,0.106854437,0.313106893,0.407249175,0.518999109,0.337499352,0.549593924,0.494001662,0.220804945,0.1394,0.2876,0.27482500000000004,0.1148,0.34465988,0.338052063,0.455478896
2009-04-23 20:00:00+00:00,0.349210336,0.19604354,0.103866287,0.319436,0.398042794,0.492644412,0.364488752,0.484404382,0.464871093,0.215474409,0.13835,0.2876,0.27292500000000003,0.1128,0.345395897,0.329673339,0.43999613
2009-04-24 20:00:00+00:00,0.346121891,0.199370175,0.096256898,0.320085043,0.397814764,0.479754096,0.343922363,0.504586125,0.472815475,0.222466071,0.14255,0.2876,0.27247499999999997,0.1106,0.337214136,0.334264243,0.434753315
2009-04-27 20:00:00+00:00,0.348118217,0.1747075,0.104730237,0.334121825,0.412540771,0.513161677,0.346424996,0.46489701,0.48406755,0.223627025,0.143275,0.2876,0.274225,0.10845,0.33493976,0.332850495,0.443672839
2009-04-28 20:00:00+00:00,0.347566252,0.216392195,0.104565093,0.315412539,0.409221684,0.504270572,0.350972442,0.497600718,0.454605368,0.219912921,0.1439,0.2876,0.280275,0.11077500000000001,0.34176891,0.34622102,0.453286266
2009-04-29 20:00:00+00:00,0.337358066,0.209512762,0.104565093,0.318016446,0.382898166,0.497740116,0.3263676,0.439629449,0.453607868,0.215157937,0.141625,0.2876,0.2766,0.11047499999999999,0.331938867,0.34622102,0.443448796
2009-04-30 20:00:00+00:00,0.336848154,0.234024031,0.111287906,0.311722607,0.373306599,0.48086509,0.344425185,0.435420212,0.430738551,0.21688475,0.13824999999999998,0.2223,0.2702,0.1099,0.31996013,0.331371425,0.443495992
2009-05-01 20:00:00+00:00,0.327119963,0.230250618,0.103830299,0.301027531,0.382782873,0.47536327,0.33333111,0.492132504,0.4469935,0.227705624,0.13419999999999999,0.2223,0.26615,0.1101,0.31996013,0.325123788,0.443495992
2009-05-04 20:00:00+00:00,0.310392224,0.210902242,0.101498,0.310150887,0.38300471,0.461918309,0.332924649,0.4984158,0.431928109,0.229298742,0.13117499999999999,0.22010000000000002,0.265375,0.10949999999999999,0.313804567,0.325123788,0.427313834
2009-05-05 20:00:00+00:00,0.321474922,0.211977321,0.112011062,0.313208984,0.376469617,0.470244419,0.324858757,0.489279703,0.404358018,0.213024749,0.13045,0.22010000000000002,0.26205,0.1096,0.3150118,0.325123788,0.43239223
2009-05-06 20:00:00+00:00,0.315115147,0.219686243,0.105227959,0.303256646,0.380124152,0.464624088,0.319785673,0.472757034,0.422955757,0.206374931,0.13055,0.22010000000000002,0.260375,0.10865,0.312454427,0.325123788,0.437705822
2009-05-07 20:00:00+00:00,0.312969456,0.1903229,0.100858299,0.3020976,0.379175417,0.462125741,0.326509245,0.493595132,0.43147415,0.206983999,0.12795,0.2121,0.25625,0.107525,0.3170675,0.315056459,0.458182812
2009-05-08 20:00:00+00:00,0.290880624,0.177629981,0.1037898,0.291952884,0.368344582,0.450561499,0.319913971,0.424194137,0.412810731,0.200016171,0.124275,0.2071,0.250375,0.10085000000000001,0.307647478,0.313477654,0.455611558
2009-05-11 20:00:00+00:00,0.3107828,0.212777659,0.1037898,0.288799156,0.375029231,0.45588047,0.316066868,0.492389931,0.412303718,0.205622203,0.12945,0.19760000000000003,0.2597,0.100475,0.310257772,0.30899624,0.449989353
2009-05-12 20:00:00+00:00,0.297730905,0.195213599,0.099818146,0.280697749,0.3661514,0.448214311,0.309415059,0.489793271,0.437167193,0.19653189,0.134525,0.19760000000000003,0.2609,0.09972500000000001,0.310404662,0.313119515,0.434248472
2009-05-13 20:00:00+00:00,0.310770814,0.191065575,0.10531,0.297165606,0.367620784,0.460199338,0.327418364,0.480961328,0.414124756,0.197321562,0.13835,0.19870000000000002,0.2648,0.09974999999999999,0.318369237,0.30208798,0.421851574
2009-05-14 20:00:00+00:00,0.299668442,0.220718406,0.0986736,0.28359461,0.391887026,0.448092225,0.315190336,0.450575537,0.416739856,0.196688093,0.1377,0.19820000000000002,0.2657,0.102425,0.320071018,0.309520087,0.420203481
2009-05-15 20:00:00+00:00,0.299264861,0.222121237,0.083014,0.274325578,0.366570701,0.443760322,0.314321389,0.441391681,0.4189979,0.20036975,0.13955,0.19820000000000002,0.264275,0.102825,0.31059956,0.298459515,0.410592907
2009-05-18 20:00:00+00:00,0.292475656,0.191945318,0.106128562,0.267320356,0.362115712,0.425311748,0.300925536,0.42323065,0.378436015,0.194768312,0.137325,0.19690000000000002,0.264175,0.101525,0.296617992,0.309859641,0.406946009
2009-05-19 20:00:00+00:00,0.289860989,0.216062412,0.090044999,0.25614895,0.354088315,0.407718929,0.292402842,0.411452625,0.398028175,0.180404725,0.13470000000000001,0.19690000000000002,0.2602,0.09985,0.289015259,0.2985794,0.406503005
2009-05-20 20:00:00+00:00,0.282346242,0.218134803,0.093708999,0.277491289,0.374898499,0.394142237,0.294350933,0.441773049,0.399303864,0.180266315,0.137425,0.1925,0.2668,0.099625,0.28078975,0.289716429,0.399739309
2009-05-21 20:00:00+00:00,0.298447671,0.199983237,0.093395668,0.288281406,0.372914684,0.41149549,0.295896043,0.427440725,0.394908487,0.183199687,0.14095000000000002,0.1925,0.26915,0.09905,0.292726219,0.293332567,0.397090001
2009-05-22 20:00:00+00:00,0.308210305,0.207691137,0.098470712,0.30662939,0.371212763,0.403126564,0.296997305,0.422356521,0.390083007,0.184489789,0.146225,0.1925,0.2723,0.0998,0.291821477,0.295192227,0.390444035
2009-05-26 20:00:00+00:00,0.286829157,0.229114849,0.0865992,0.288971375,0.365964392,0.412704412,0.281393119,0.464868118,0.402098768,0.178538687,0.147125,0.18964999999999999,0.2691,0.101325,0.289854444,0.288975101,0.382946459
2009-05-27 20:00:00+00:00,0.288935099,0.221580125,0.099353887,0.291705382,0.381301666,0.403531387,0.292485666,0.4413952,0.395025924,0.176480856,0.146875,0.19140000000000001,0.269525,0.10337500000000001,0.285488964,0.285474238,0.380990743
2009-05-28 20:00:00+00:00,0.279460547,0.211163062,0.103534812,0.302061662,0.362483242,0.408030754,0.278507842,0.448242345,0.382127224,0.184108531,0.144175,0.20365,0.268575,0.10675000000000001,0.292603035,0.285878702,0.380990743
2009-05-29 20:00:00+00:00,0.277215114,0.233742318,0.104992132,0.312957156,0.361590133,0.404198483,0.284733185,0.418821256,0.389162306,0.177237396,0.146125,0.1943,0.267225,0.10635,0.293549172,0.284960928,0.380322787
2009-06-01 20:00:00+00:00,0.26444675,0.247433999,0.102385074,0.3125204,0.369132364,0.399375935,0.285755682,0.414784972,0.3754315,0.175189124,0.148175,0.1943,0.26455,0.10665,0.279006625,0.279478378,0.383888457
2009-06-02 20:00:00+00:00,0.265112315,0.221778321,0.096330554,0.312310337,0.373367831,0.397491435,0.284264694,0.398563416,0.39652075,0.182814393,0.148975,0.1946,0.2645,0.10765000000000001,0.280814879,0.283875449,0.394197101
2009-06-03 20:00:00+00:00,0.281659429,0.226771125,0.096953375,0.305195346,0.384716031,0.415550806,0.2932292,0.474919243,0.391691015,0.189354409,0.1506,0.19555,0.268425,0.11852499999999999,0.288989374,0.282083841,0.395838233
2009-06-04 20:00:00+00:00,0.282310391,0.216401276,0.098641631,0.309619062,0.372233473,0.4125096,0.283085294,0.414792837,0.406888156,0.184242278,0.14845,0.19555,0.26985,0.1177,0.287821747,0.283830214,0.40012794
2009-06-05 20:00:00+00:00,0.283198473,0.204864699,0.095444375,0.297134875,0.383983568,0.423875548,0.283275926,0.473471351,0.407726018,0.185050424,0.1454,0.1923,0.26442499999999997,0.11654999999999999,0.283906417,0.27811068,0.399511475
2009-06-08 20:00:00+00:00,0.290294021,0.216479587,0.092033281,0.295739306,0.361225057,0.432378832,0.287260582,0.436034878,0.421270235,0.185341796,0.14785,0.19185,0.26497499999999996,0.11855,0.287431382,0.271388963,0.401028919
2009-06-09 20:00:00+00:00,0.272511431,0.215200312,0.095553575,0.282609312,0.369116228,0.439739241,0.272959201,0.471659437,0.419134312,0.187885531,0.15005000000000002,0.19185,0.26685,0.116825,0.282583061,0.274761256,0.403635944
2009-06-10 20:00:00+00:00,0.279805263,0.237162046,0.092821218,0.278312578,0.354715736,0.424972196,0.277765842,0.476321916,0.411388029,0.190410976,0.1494,0.18575,0.26539999999999997,0.1108,0.278333821,0.266335323,0.39405072
2009-06-11 20:00:00+00:00,0.260236171,0.232522699,0.0869234,0.281319624,0.380901382,0.437232051,0.269722431,0.479309697,0.410848162,0.191869062,0.14865,0.18414999999999998,0.259125,0.11042500000000001,0.26821628,0.265508806,0.393115255
2009-06-12 20:00:00+00:00,0.27924068,0.205741078,0.094800784,0.284046192,0.367187205,0.441553698,0.275607938,0.444591902,0.401296603,0.184187118,0.143875,0.179,0.25684999999999997,0.109825,0.268084362,0.263006265,0.40310715
2009-06-15 20:00:00+00:00,0.269655526,0.214110418,0.097591796,0.283035875,0.393343499,0.439956374,0.28230421,0.481463081,0.422284059,0.186506737,0.142075,0.179,0.254525,0.11015000000000001,0.284315515,0.262842599,0.403376266
2009-06-16 20:00:00+00:00,0.283046392,0.230796731,0.097727764,0.259391429,0.367315417,0.451509437,0.291047912,0.475992351,0.440046075,0.192276745,0.145175,0.179,0.25895,0.10949999999999999,0.28695604,0.280275855,0.419973349
2009-06-17 20:00:00+00:00,0.28370821,0.208867699,0.097727764,0.263343281,0.394283903,0.437324258,0.277756026,0.471874756,0.42856745,0.203492725,0.152,0.179,0.2656,0.10845,0.299507783,0.27762333,0.421211469
2009-06-18 20:00:00+00:00,0.286980463,0.228039578,0.102710828,0.249410301,0.377861494,0.431871387,0.274562663,0.471622605,0.420506689,0.198761625,0.14995,0.179,0.26125,0.105275,0.291059642,0.283954055,0.424506674
2009-06-19 20:00:00+00:00,0.292804701,0.215560153,0.111131465,0.239870124,0.396616407,0.428072183,0.289212617,0.460019894,0.407842421,0.202050356,0.146325,0.179,0.2565,0.10217499999999999,0.284820257,0.285458511,0.418806769
2009-06-22 20:00:00+00:00,0.300430133,0.216662206,0.103678453,0.245417906,0.396627017,0.446409233,0.300915726,0.492087016,0.418803343,0.2150228,0.149925,0.18855,0.25865,0.102825,0.298314161,0.283913816,0.410657809
2009-06-23 20:00:00+00:00,0.2962755,0.212239099,0.07912,0.239448,0.409204399,0.437401374,0.27906,0.450367167,0.415551499,0.217137499,0.153375,0.19690000000000002,0.2677,0.105725,0.297687227,0.298607038,0.418578305
2009-06-24 20:00:00+00:00,0.293466399,0.204053883,0.10386,0.250446694,0.392665,0.440734453,0.278176442,0.438684605,0.413782322,0.212452,0.153125,0.19440000000000002,0.263475,0.104125,0.282702926,0.30028599,0.418862843
2009-06-25 20:00:00+00:00,0.280714514,0.204111555,0.10139,0.248164611,0.3762434,0.426156483,0.2772422,0.419395362,0.402345333,0.2086578,0.1471,0.188,0.259375,0.10439999999999999,0.286627322,0.292427013,0.414482824
2009-06-26 20:00:00+00:00,0.258939714,0.195566549,0.10098,0.248810416,0.355534314,0.407236587,0.271278571,0.444626845,0.3900276,0.2084924,0.1466,0.1862,0.2534,0.102075,0.288456829,0.287706053,0.412147257
2009-06-29 20:00:00+00:00,0.252295571,0.189086833,0.10137,0.248478311,0.359061457,0.396658754,0.265924071,0.40829154,0.376088622,0.202687599,0.1439,0.18195,0.25329999999999997,0.101675,0.275160752,0.290065102,0.410293311
2009-06-30 20:00:00+00:00,0.255512571,0.195256372,0.07829,0.241510833,0.3650695,0.402886332,0.270748714,0.433545667,0.387528244,0.1915561,0.137975,0.17670000000000002,0.2447,0.099325,0.278745066,0.282712133,0.396439593
2009-07-01 20:00:00+00:00,0.263455114,0.216069333,0.07342,0.240014833,0.355807814,0.415679361,0.270958857,0.412288032,0.365768733,0.186377599,0.1343,0.17670000000000002,0.2397,0.09797499999999999,0.267722247,0.280133706,0.396439593
2009-07-02 20:00:00+00:00,0.266640599,0.201168666,0.10866,0.237226805,0.3617528,0.440666943,0.273352,0.433931491,0.374951711,0.189268,0.1343,0.17485,0.2377,0.097175,0.283229002,0.281609994,0.397855362
2009-07-06 20:00:00+00:00,0.270545259,0.210471955,0.10497,0.229280933,0.364904945,0.449190558,0.281116454,0.44704304,0.382251555,0.193127599,0.13824999999999998,0.17129999999999998,0.24465,0.09795,0.29355226,0.286127428,0.400711588
2009-07-07 20:00:00+00:00,0.285981688,0.19026875,0.1008,0.22943615,0.38012549,0.452397053,0.291000636,0.421827621,0.414373999,0.1947673,0.137925,0.17129999999999998,0.24387499999999998,0.0981,0.294785878,0.284929203,0.399865129
2009-07-08 20:00:00+00:00,0.275142777,0.196715555,0.09581,0.245811511,0.380997845,0.48133158,0.2854056,0.441667408,0.400228422,0.2099398,0.15045,0.17115,0.2585,0.0993,0.302026204,0.29534628,0.399384092
2009-07-09 20:00:00+00:00,0.287500533,0.199492527,0.08953,0.234239355,0.375108789,0.475146788,0.282264663,0.450429756,0.40729785,0.195594399,0.1474,0.17115,0.257,0.0989,0.295144663,0.303030532,0.386646558
2009-07-10 20:00:00+00:00,0.27377897,0.202769099,0.10576,0.232847466,0.368591563,0.478427354,0.276683236,0.411253205,0.389168533,0.1897843,0.150875,0.16579999999999998,0.259075,0.09695000000000001,0.297058867,0.297822546,0.387809603
2009-07-13 20:00:00+00:00,0.278959777,0.1879561,0.098294399,0.23627465,0.371928027,0.47303415,0.276063272,0.426397959,0.404663188,0.190691,0.1518,0.16579999999999998,0.261725,0.096875,0.285180244,0.305890504,0.394247661
2009-07-14 20:00:00+00:00,0.268186135,0.215704888,0.101825999,0.233944722,0.363036269,0.471609435,0.27002829,0.428529308,0.390490311,0.19222,0.14895,0.16579999999999998,0.25984999999999997,0.09675,0.281493675,0.288379414,0.381402155
2009-07-15 20:00:00+00:00,0.268319622,0.198556866,0.103056699,0.247392266,0.35273065,0.456683825,0.256842545,0.440379951,0.38471095,0.160721999,0.1457,0.16579999999999998,0.255525,0.09574999999999999,0.267298741,0.284583306,0.377537945
2009-07-16 20:00:00+00:00,0.267492333,0.196624155,0.1012972,0.236278777,0.346186929,0.438526954,0.266836763,0.403042256,0.376789811,0.162379999,0.14475,0.16579999999999998,0.254625,0.09494999999999999,0.268352629,0.277892949,0.378839306
2009-07-17 20:00:00+00:00,0.265920537,0.206160644,0.103328,0.242492461,0.340309272,0.439735709,0.26091749,0.412237816,0.358012144,0.162264799,0.146125,0.1661,0.25275,0.09387499999999999,0.26509444,0.273798584,0.373224605
2009-07-20 20:00:00+00:00,0.257998379,0.1871384,0.106123573,0.254956,0.32418672,0.4131205,0.249348799,0.367417999,0.342886599,0.160956719,0.144775,0.16649999999999998,0.25120000000000003,0.093225,0.259196763,0.273798584,0.369190387
2009-07-21 20:00:00+00:00,0.252430588,0.186596813,0.097377983,0.252583972,0.315670198,0.409483152,0.261856981,0.381283426,0.351484465,0.162141639,0.1474,0.16665,0.25255,0.09077500000000001,0.256335867,0.254797401,0.369237996
2009-07-22 20:00:00+00:00,0.250434101,0.181892441,0.094546408,0.241733311,0.317329595,0.41696922,0.258704534,0.398919339,0.354238946,0.159336557,0.1479,0.1638,0.253,0.090425,0.254930935,0.255427953,0.370420214
2009-07-23 20:00:00+00:00,0.242464488,0.205489011,0.093495796,0.242225637,0.312813832,0.414768477,0.267037895,0.409921391,0.346760793,0.159114721,0.1434,0.1638,0.24337499999999998,0.089825,0.249130457,0.257369437,0.377163475
2009-07-24 20:00:00+00:00,0.243720722,0.188866883,0.094620918,0.240756276,0.315931165,0.42084469,0.260871406,0.40836933,0.355927395,0.163648245,0.142925,0.16215,0.24670000000000003,0.08945,0.251854325,0.25503975,0.385132758
2009-07-27 20:00:00+00:00,0.249906055,0.192982372,0.093433016,0.233054376,0.317225916,0.421141728,0.264742732,0.388428169,0.346350409,0.16837359,0.1413,0.16215,0.239325,0.08885,0.248816218,0.25347304,0.380019477
2009-07-28 20:00:00+00:00,0.251198014,0.198079767,0.091832163,0.24074323,0.322033153,0.410114209,0.261567358,0.379830569,0.354760348,0.163531609,0.1426,0.1613,0.23795000000000002,0.08955,0.253264717,0.254355152,0.386444678
2009-07-29 20:00:00+00:00,0.254210866,0.181335488,0.083758721,0.233802186,0.324389957,0.437417923,0.27160139,0.425677591,0.363421453,0.156409488,0.1432,0.1613,0.23952500000000002,0.08960000000000001,0.248839411,0.254905133,0.391806701
2009-07-30 20:00:00+00:00,0.250982114,0.175310697,0.089573229,0.227665558,0.333603141,0.439187306,0.268738074,0.395922173,0.360618046,0.170012868,0.1408,0.15955,0.23739999999999997,0.08935,0.248213332,0.259664176,0.402721231
2009-07-31 20:00:00+00:00,0.247678781,0.17584469,0.0883848,0.23620679,0.322153125,0.421276731,0.270777767,0.404361652,0.353243,0.175596721,0.14150000000000001,0.15955,0.236125,0.08994999999999999,0.253966615,0.257780238,0.395811115
2009-08-03 20:00:00+00:00,0.251104044,0.207735776,0.091992622,0.236789667,0.326195627,0.413445468,0.275320734,0.411784382,0.368925413,0.165924622,0.1423,0.15955,0.23600000000000002,0.09135,0.253365548,0.256469519,0.391676691
2009-08-04 20:00:00+00:00,0.244782037,0.199719609,0.1034736,0.254876604,0.323003088,0.414555072,0.268653144,0.407598721,0.348824572,0.156432622,0.1425,0.15955,0.2361,0.09275,0.25318764,0.256083498,0.393355585
2009-08-05 20:00:00+00:00,0.248255431,0.186542548,0.1034736,0.249775544,0.328916616,0.440047656,0.259092067,0.410250778,0.350451281,0.159631499,0.14400000000000002,0.15955,0.23440000000000003,0.09210000000000002,0.254606735,0.255094047,0.391638235
2009-08-06 20:00:00+00:00,0.246381233,0.198323139,0.089004049,0.249310511,0.320198281,0.435257403,0.269459669,0.404904434,0.368124811,0.1538635,0.14465,0.15955,0.23445,0.09179999999999999,0.252190184,0.250104488,0.388984615
2009-08-07 20:00:00+00:00,0.250558407,0.197198304,0.090026065,0.244886744,0.318799918,0.425200332,0.250503599,0.405679147,0.348933299,0.163652637,0.144475,0.15955,0.233375,0.091625,0.247317916,0.247928009,0.395075457
2009-08-10 20:00:00+00:00,0.241816018,0.191010576,0.089174459,0.237671269,0.323215197,0.420375326,0.261064558,0.396934573,0.360579283,0.204043278,0.14425000000000002,0.15955,0.2296,0.091925,0.248313315,0.246659451,0.388675063
2009-08-11 20:00:00+00:00,0.249764099,0.191754102,0.084912565,0.238114969,0.327957858,0.4245447,0.270499539,0.422538865,0.360871934,0.159247057,0.14645,0.15955,0.2291,0.09375,0.254669546,0.244052222,0.38625922
2009-08-12 20:00:00+00:00,0.243317777,0.192351272,0.104154885,0.237225372,0.317850418,0.438782621,0.2561608,0.412536026,0.348375916,0.162331924,0.14880000000000002,0.15955,0.233925,0.09295,0.250064533,0.248310809,0.390517561
2009-08-13 20:00:00+00:00,0.24608319,0.185157827,0.102669554,0.241001041,0.317193518,0.416830093,0.269838325,0.398092799,0.351541172,0.165353331,0.146125,0.15955,0.23287500000000003,0.09369999999999999,0.248924731,0.245346936,0.389376425
2009-08-14 20:00:00+00:00,0.243727088,0.194170779,0.112242013,0.235890232,0.317207411,0.457545627,0.262585676,0.434529669,0.3552556,0.209018808,0.148125,0.15955,0.2349,0.09519999999999999,0.25656071,0.241061084,0.383423912
2009-08-17 20:00:00+00:00,0.267889824,0.190244702,0.095657037,0.240324376,0.34074063,0.451318231,0.278445897,0.455051591,0.376942232,0.169102285,0.15005000000000002,0.15955,0.24205,0.095275,0.275571115,0.253502044,0.390798602
2009-08-18 20:00:00+00:00,0.261306411,0.195691506,0.09281328,0.240036227,0.322901655,0.424540393,0.275931881,0.440846252,0.36711009,0.163747049,0.14582499999999998,0.15955,0.238875,0.0949,0.266396078,0.254121772,0.384779863
2009-08-19 20:00:00+00:00,0.253062888,0.181842781,0.096684032,0.235815476,0.325520986,0.45023035,0.27050393,0.437211791,0.363151274,0.16340034,0.14679999999999999,0.15955,0.23879999999999998,0.0947,0.267902528,0.259370558,0.387390269
2009-08-20 20:00:00+00:00,0.242780614,0.182634846,0.172161696,0.232902658,0.315104853,0.433362156,0.25412479,0.412045999,0.35115182,0.163484037,0.14265,0.15955,0.23420000000000002,0.094,0.258813661,0.254681667,0.382276573
2009-08-21 20:00:00+00:00,0.240900481,0.181908367,0.138433701,0.232367593,0.319015488,0.446897506,0.262598176,0.394798883,0.348442069,0.157065075,0.14235,0.15955,0.23822500000000002,0.09415,0.245985576,0.260295954,0.383400356
2009-08-24 20:00:00+00:00,0.242508133,0.184167544,0.133001093,0.235367599,0.320522697,0.441172967,0.264267674,0.40597946,0.346662925,0.16198356,0.14055,0.15645,0.228,0.0951,0.244889532,0.249351686,0.376034992
2009-08-25 20:00:00+00:00,0.2571932,0.195480579,0.121184931,0.236682799,0.31983242,0.450399354,0.262438672,0.3919786,0.344944037,0.156648852,0.14175000000000001,0.15645,0.23629999999999998,0.09480000000000001,0.246023234,0.252576244,0.376699043
2009-08-26 20:00:00+00:00,0.258478237,0.182953686,0.161117514,0.236198572,0.316702872,0.431499991,0.266146604,0.396111041,0.350041432,0.151541514,0.14125,0.15645,0.23739999999999997,0.09445,0.251881682,0.24895294,0.376666612
2009-08-27 20:00:00+00:00,0.254362111,0.191455962,0.093284475,0.241984558,0.321738346,0.423902941,0.262358697,0.393321918,0.355731502,0.149938393,0.14355,0.15645,0.238575,0.0946,0.254192287,0.258927133,0.363575183
2009-08-28 20:00:00+00:00,0.254669355,0.180769755,0.098224347,0.236709709,0.326848888,0.42550007,0.262600409,0.385289475,0.362374748,0.18851415,0.1425,0.15645,0.23850000000000002,0.095,0.254562263,0.257224991,0.366048658
2009-08-31 20:00:00+00:00,0.258483244,0.177402465,0.088248688,0.239786372,0.333475253,0.464465661,0.279439318,0.406366593,0.368094606,0.166507154,0.1451,0.15645,0.2398,0.0959,0.262440039,0.256147203,0.362275513
2009-09-01 20:00:00+00:00,0.275674666,0.193437739,0.120894814,0.239446186,0.345579944,0.458628249,0.282748027,0.409061089,0.371119506,0.171557368,0.14415,0.15645,0.23885,0.09555,0.270479591,0.253203416,0.356520824
2009-09-02 20:00:00+00:00,0.267427118,0.185016734,0.103242511,0.264064032,0.34318539,0.453306,0.286016686,0.391880462,0.373568941,0.162265678,0.146,0.15645,0.24054999999999999,0.09609999999999999,0.271130235,0.263903079,0.358731787
2009-09-03 20:00:00+00:00,0.259868814,0.171005553,0.089652163,0.291378218,0.346696069,0.443124825,0.273021458,0.388122353,0.357052302,0.1450184,0.14545,0.15645,0.23855,0.09570000000000001,0.269200079,0.262533209,0.355294189
2009-09-04 20:00:00+00:00,0.262418866,0.192345865,0.089923021,0.285702976,0.329810948,0.443919616,0.266350781,0.399419726,0.353722697,0.172587468,0.1414,0.15645,0.2343,0.0949,0.257283596,0.259155586,0.353277026
2009-09-08 20:00:00+00:00,0.244483496,0.18361926,0.079620655,0.288110025,0.327993069,0.411503383,0.255351799,0.388705478,0.354087406,0.200771403,0.140175,0.15645,0.2286,0.09465,0.253027984,0.248837593,0.346684837
2009-09-09 20:00:00+00:00,0.24091134,0.184224534,0.084742722,0.2824224,0.321885134,0.423146716,0.264649511,0.386453855,0.339665441,0.164492019,0.140375,0.15645,0.2293,0.09565,0.248599857,0.250038346,0.346640448
2009-09-10 20:00:00+00:00,0.230943944,0.191711669,0.079504298,0.266495511,0.315288518,0.440005112,0.250912893,0.36741912,0.317267227,0.162398449,0.1411,0.14279999999999998,0.23175,0.09494999999999999,0.250003469,0.243312514,0.345291149
2009-09-11 20:00:00+00:00,0.234108837,0.177461883,0.076145786,0.277150548,0.310954976,0.43919567,0.252088781,0.372739224,0.318773758,0.1488,0.14545,0.1422,0.2335,0.09512499999999999,0.247518024,0.24432931,0.344694931
2009-09-14 20:00:00+00:00,0.241224711,0.176394841,0.086071263,0.272334995,0.304691627,0.436658925,0.248223739,0.368351035,0.323133693,0.154093934,0.14595,0.1422,0.233,0.095,0.248976383,0.251594867,0.34562533
2009-09-15 20:00:00+00:00,0.230675488,0.188217732,0.145284154,0.271978976,0.305713641,0.421790387,0.242777265,0.372287682,0.32830519,0.302048016,0.1431,0.1422,0.22905,0.094775,0.248174878,0.251403289,0.346022455
2009-09-16 20:00:00+00:00,0.235232029,0.182262293,0.0722202,0.277126667,0.297641953,0.423362935,0.245800386,0.341109689,0.325113325,0.306586762,0.145325,0.1422,0.22792500000000002,0.09445,0.243027425,0.249781843,0.334471984
2009-09-17 20:00:00+00:00,0.237282977,0.17714692,0.126336347,0.271120451,0.308175125,0.420883467,0.249173509,0.359407456,0.31572426,0.172732803,0.144175,0.1374,0.22427499999999997,0.094075,0.242700736,0.237277354,0.336396928
2009-09-18 20:00:00+00:00,0.2346392,0.173343599,0.088023699,0.2616866,0.3175288,0.429598174,0.2501056,0.363371878,0.3279755,0.160254,0.144425,0.1374,0.220775,0.09375,0.244198336,0.239367942,0.337050353
2009-09-21 20:00:00+00:00,0.239432928,0.163842684,0.087865999,0.262712768,0.313430742,0.42259629,0.247592457,0.350216031,0.312928873,0.1519,0.14235,0.1346,0.21719999999999998,0.09445,0.247349954,0.239367942,0.339170882
2009-09-22 20:00:00+00:00,0.241129542,0.184586556,0.084261199,0.264903626,0.311207414,0.403158483,0.244895714,0.362231193,0.315634463,0.153295999,0.14225,0.1346,0.214575,0.09390000000000001,0.245395171,0.239367942,0.338333619
2009-09-23 20:00:00+00:00,0.242069771,0.179591702,0.1054114,0.257805004,0.314357871,0.429838958,0.250970285,0.3522879,0.321243539,0.181866499,0.14029999999999998,0.1346,0.20120000000000002,0.0935,0.24376303,0.239367942,0.339372545
2009-09-24 20:00:00+00:00,0.253664885,0.168606044,0.0797702,0.243961817,0.319685571,0.432136919,0.270290857,0.362193749,0.330732526,0.1542508,0.139925,0.1346,0.19915,0.09325,0.251736403,0.234571678,0.344790688
2009-09-25 20:00:00+00:00,0.247575571,0.164863443,0.0818304,0.242267301,0.324738228,0.432480645,0.254684571,0.366707826,0.344446499,0.1552435,0.1426,0.1346,0.1985,0.09335,0.25274222,0.247243044,0.329381384
2009-09-28 20:00:00+00:00,0.241416057,0.169254407,0.0768038,0.237053952,0.318622628,0.434959869,0.255094271,0.362250565,0.33817538,0.1695307,0.147175,0.1346,0.205425,0.0934,0.245933542,0.25438808,0.333338394
2009-09-29 20:00:00+00:00,0.23294,0.172175751,0.1014238,0.229668566,0.319565299,0.443988312,0.2576472,0.359577512,0.333943662,0.173488699,0.14355,0.1346,0.1984,0.09317500000000001,0.246485729,0.251967599,0.330305967
2009-09-30 20:00:00+00:00,0.240962876,0.170162323,0.1136928,0.231533444,0.321200939,0.436793761,0.258710357,0.350459199,0.331797564,0.1720865,0.14427500000000001,0.1346,0.19787500000000002,0.0932,0.248138221,0.251394576,0.331726848
2009-10-01 20:00:00+00:00,0.2433457,0.172454177,0.100889199,0.230330171,0.338470717,0.448111587,0.262743928,0.367755187,0.345594112,0.1854582,0.14154999999999998,0.1346,0.19519999999999998,0.09305,0.259483721,0.255799946,0.331726848
2009-10-02 20:00:00+00:00,0.255938457,0.186483128,0.1048484,0.237415457,0.330286776,0.436667919,0.262157549,0.368968265,0.340200092,0.183361999,0.14325,0.1346,0.19967500000000002,0.09244999999999999,0.266929777,0.263669854,0.336406584
2009-10-05 20:00:00+00:00,0.249861371,0.18607516,0.09829,0.241989895,0.332620736,0.45094378,0.267698092,0.36400751,0.336052906,0.167618799,0.14085,0.1267,0.19644999999999999,0.092325,0.260734267,0.265581857,0.334528615
2009-10-06 20:00:00+00:00,0.239371455,0.188884125,0.0959724,0.265510761,0.328081539,0.443397222,0.247059939,0.358247149,0.338545912,0.199249999,0.1422,0.1267,0.19935,0.0931,0.245893506,0.264974963,0.329584721
2009-10-07 20:00:00+00:00,0.233778428,0.180486645,0.092616999,0.259163911,0.316146571,0.447090967,0.259672914,0.369603478,0.336109791,0.170353499,0.14365,0.1267,0.19915,0.09244999999999999,0.247192015,0.257305337,0.328784786
2009-10-08 20:00:00+00:00,0.236291287,0.182916517,0.0924556,0.262356711,0.324659944,0.451751135,0.255764,0.340069446,0.322156162,0.1708235,0.14485,0.1267,0.1966,0.09285,0.241722362,0.256293283,0.327953249
2009-10-09 20:00:00+00:00,0.232632457,0.169300915,0.100553,0.246569961,0.320379873,0.461772877,0.246027828,0.32520204,0.32651833,0.1667482,0.14305,0.1267,0.19615,0.09075,0.241225935,0.250956395,0.327456161
2009-10-12 20:00:00+00:00,0.227260821,0.189793934,0.096866,0.257792285,0.308066399,0.459225256,0.244097373,0.346180812,0.330476739,0.1633752,0.1419,0.1267,0.195275,0.09075,0.238287656,0.250956395,0.328946044
2009-10-13 20:00:00+00:00,0.230816985,0.175797646,0.09691,0.262363923,0.315453353,0.473257,0.244756514,0.338290089,0.33269311,0.163155,0.141175,0.1267,0.189525,0.09119999999999999,0.241813604,0.249272091,0.32293397
2009-10-14 20:00:00+00:00,0.230041573,0.193582665,0.10258,0.257565285,0.297099923,0.459466866,0.250196835,0.346578671,0.317960295,0.169151999,0.14235,0.1267,0.18747499999999997,0.09095,0.233812208,0.239696679,0.319796001
2009-10-15 20:00:00+00:00,0.219916407,0.174563085,0.097712399,0.249028206,0.304415785,0.4282647,0.247078657,0.346251893,0.32150067,0.1617402,0.1422,0.1267,0.18535000000000001,0.09035,0.235252837,0.233965832,0.315960227
2009-10-16 20:00:00+00:00,0.217721928,0.178888232,0.101827799,0.252481641,0.287760061,0.428067543,0.234403724,0.353647262,0.320185974,0.163996699,0.14325,0.1267,0.18732500000000002,0.090325,0.241944179,0.233594452,0.317308025
2009-10-19 20:00:00+00:00,0.216118949,0.182117333,0.0973686,0.248986066,0.2894449,0.41549802,0.243419425,0.340453448,0.319063633,0.1441981,0.14425000000000002,0.1267,0.186575,0.0911,0.235660579,0.234966797,0.314907321
2009-10-20 20:00:00+00:00,0.223934201,0.164975244,0.093356473,0.240065326,0.296002396,0.426931764,0.240343657,0.351754525,0.322091958,0.160014788,0.14455,0.1267,0.18517499999999998,0.09085000000000001,0.236475184,0.229788737,0.308609035
2009-10-21 20:00:00+00:00,0.230081685,0.184733034,0.090367663,0.241510476,0.303658228,0.425566585,0.246489342,0.328188734,0.323529752,0.141230911,0.14315,0.1267,0.18600000000000003,0.0901,0.233395375,0.229002613,0.309067758
2009-10-22 20:00:00+00:00,0.220871355,0.169003023,0.0916596,0.234648038,0.296015151,0.421281965,0.237757549,0.3497048,0.326297714,0.143164285,0.14255,0.1267,0.185525,0.09022500000000001,0.236786719,0.231767254,0.309593192
2009-10-23 20:00:00+00:00,0.229085428,0.162115325,0.200371599,0.236111711,0.305521107,0.409167223,0.246146132,0.345690131,0.32415146,0.146275,0.14122500000000002,0.1267,0.1833,0.08990000000000001,0.236122227,0.229583206,0.305471805
2009-10-26 20:00:00+00:00,0.230134416,0.172977161,0.096318495,0.229751552,0.3085978,0.428603384,0.238466078,0.338177515,0.340080476,0.147078888,0.1406,0.1267,0.18305,0.09050000000000001,0.245391919,0.228342133,0.305471805
2009-10-27 20:00:00+00:00,0.233632699,0.1595,0.105039199,0.230186714,0.300856178,0.411498941,0.251159142,0.341139481,0.340644357,0.1365586,0.142,0.1267,0.18912500000000002,0.09065,0.243928715,0.23571245,0.315132472
2009-10-28 20:00:00+00:00,0.2468831,0.176400888,0.241395999,0.230263977,0.3206024,0.415427877,0.2607559,0.377574375,0.352471888,0.153236,0.14545,0.1267,0.197525,0.090125,0.254815314,0.243518881,0.322321118
2009-10-29 20:00:00+00:00,0.230462767,0.180515725,0.098236228,0.232231271,0.314761803,0.398902896,0.256438185,0.365025834,0.343665038,0.1668456,0.1451,0.1267,0.2036,0.09375,0.2461314,0.253573185,0.330083909
2009-10-30 20:00:00+00:00,0.252984671,0.167505257,0.082511199,0.228582542,0.343257232,0.416144472,0.254331828,0.373424343,0.374730071,0.163477399,0.14505,0.1267,0.20195,0.0928,0.260396708,0.242074545,0.326141248
2009-11-02 21:00:00+00:00,0.254561485,0.190858031,0.1553404,0.23264646,0.337828571,0.399483728,0.270959299,0.370372881,0.373014347,0.162048565,0.146275,0.1267,0.207475,0.0949,0.260614448,0.258179028,0.326477627
2009-11-03 21:00:00+00:00,0.252067035,0.193057746,0.106674799,0.256686752,0.337284107,0.410252883,0.267020867,0.374686531,0.376283122,0.192144992,0.1484,0.1267,0.210225,0.09555,0.268304533,0.258179028,0.336119083
2009-11-04 21:00:00+00:00,0.250642628,0.18682918,0.186196799,0.25910138,0.3342822,0.39529517,0.262501339,0.377048075,0.367083285,0.153343,0.14625,0.1267,0.21575,0.0953,0.258343886,0.256235813,0.331319504
2009-11-05 21:00:00+00:00,0.235236062,0.186036958,0.14563419,0.239124196,0.323609957,0.394685927,0.254953857,0.36603615,0.353747063,0.168883026,0.1452,0.1267,0.2144,0.09570000000000001,0.252372195,0.26377577,0.331664486
2009-11-06 21:00:00+00:00,0.2400168,0.179040922,0.0745024,0.234104077,0.3230746,0.401159329,0.247420999,0.365238032,0.350857722,0.138739,0.14355,0.1267,0.21195,0.094875,0.248060327,0.255710386,0.336772966
2009-11-09 21:00:00+00:00,0.227486958,0.174950742,0.10029,0.236037628,0.311997928,0.401853041,0.241181453,0.3396402,0.339128342,0.155615857,0.14205,0.1267,0.207,0.093675,0.237027703,0.248931042,0.332268851
2009-11-10 21:00:00+00:00,0.228422892,0.180587841,0.095677557,0.236327942,0.310666932,0.392956713,0.240054028,0.352307617,0.336876234,0.149280044,0.13885,0.1267,0.20322500000000002,0.0922,0.23983843,0.241727595,0.332010482
2009-11-11 21:00:00+00:00,0.235727142,0.16851092,0.086178999,0.237505968,0.311672394,0.385796149,0.234426142,0.348109168,0.339319577,0.152394068,0.137875,0.1267,0.20149999999999998,0.0917,0.240150834,0.241584143,0.323508502
2009-11-12 21:00:00+00:00,0.243766957,0.170258961,0.135500142,0.239750071,0.309409685,0.402158678,0.245551357,0.348698999,0.344534809,0.157513819,0.13615,0.1267,0.2023,0.09135,0.241326911,0.244899759,0.324791641
2009-11-13 21:00:00+00:00,0.236347085,0.15606466,0.12567512,0.235570444,0.314529832,0.409490171,0.253360117,0.348945274,0.341052584,0.153928126,0.13565,0.1267,0.20329999999999998,0.09065,0.242199084,0.244538857,0.322651789
2009-11-16 21:00:00+00:00,0.236443978,0.183474104,0.0858714,0.247269869,0.303783642,0.394827454,0.244132171,0.344614203,0.334811312,0.139259,0.135025,0.1267,0.20199999999999999,0.08992499999999999,0.240687366,0.241155444,0.320159971
2009-11-17 21:00:00+00:00,0.235445424,0.163846966,0.2450575,0.2459665,0.303243512,0.388221317,0.237850249,0.345460175,0.322704666,0.1272652,0.1349,0.1267,0.2009,0.09035,0.24286534,0.240480214,0.3183136
2009-11-18 21:00:00+00:00,0.234245321,0.148020136,0.088738799,0.253138214,0.305180485,0.382097668,0.242121892,0.335791862,0.32801289,0.149748796,0.132075,0.1267,0.1989,0.09045,0.240380354,0.241268861,0.318802545
2009-11-19 21:00:00+00:00,0.2340999,0.174456796,0.136277,0.246545396,0.316444616,0.391806021,0.240023571,0.3408592,0.331587504,0.1352128,0.1316,0.1267,0.20165,0.09045,0.246500101,0.244667802,0.321363343
2009-11-20 21:00:00+00:00,0.233825339,0.174904914,0.068881,0.246825714,0.309099928,0.396848569,0.244208342,0.343928627,0.337015857,0.1423316,0.13295,0.1267,0.2034,0.090125,0.250285833,0.243588344,0.323857609
2009-11-23 21:00:00+00:00,0.224710121,0.146168253,0.166106,0.253961274,0.303292837,0.395196742,0.246575571,0.329660445,0.327122063,0.1239274,0.13237500000000002,0.1267,0.20342500000000002,0.089575,0.240925784,0.243588344,0.319983448
2009-11-24 21:00:00+00:00,0.2174847,0.155050126,0.180678799,0.24762028,0.291765628,0.397521244,0.229762628,0.34627625,0.331037061,0.122076799,0.13275,0.1267,0.20309999999999997,0.08960000000000001,0.242514383,0.247190401,0.32346237
2009-11-25 21:00:00+00:00,0.226482946,0.171605942,0.15526,0.258437542,0.291511585,0.390935158,0.24318046,0.339446711,0.322478214,0.123271,0.13715,0.1267,0.20352499999999998,0.08960000000000001,0.238225981,0.243617219,0.323301874
2009-11-27 21:00:00+00:00,0.239746175,0.163751333,0.0862948,0.2634872,0.315767349,0.406164285,0.25099495,0.364585508,0.354016988,0.143667088,0.1478,0.1267,0.22255,0.092275,0.251989306,0.267527065,0.349942996
2009-11-30 21:00:00+00:00,0.23427035,0.15692659,0.0692525,0.25991979,0.304801899,0.408264047,0.248045228,0.355275494,0.352374526,0.119512999,0.14745,0.1267,0.21739999999999998,0.090725,0.259454077,0.256164814,0.340350924
2009-12-01 21:00:00+00:00,0.234277285,0.169859999,0.0667844,0.267062961,0.301273507,0.400143634,0.2497766,0.342574211,0.339967295,0.120095999,0.14335,0.1267,0.21375,0.09,0.247358166,0.246628673,0.336721063
2009-12-02 21:00:00+00:00,0.233771696,0.168786326,0.193808,0.269002866,0.301799864,0.399408514,0.249002003,0.341693076,0.336177642,0.1189534,0.140825,0.1267,0.21234999999999998,0.089725,0.245055118,0.246849797,0.33279524
2009-12-03 21:00:00+00:00,0.238842171,0.168046911,0.189655,0.264680619,0.302693892,0.405294749,0.238858767,0.341127508,0.34339432,0.113057999,0.1402,0.1267,0.212,0.09015000000000001,0.247795863,0.242250563,0.331019545
2009-12-04 21:00:00+00:00,0.233442085,0.165604657,0.133482614,0.273788214,0.300597464,0.4095448,0.248553328,0.349571259,0.340730857,0.1138925,0.14135,0.1267,0.212425,0.08925000000000001,0.24332372,0.246332162,0.336174249
2009-12-07 21:00:00+00:00,0.231611657,0.160788409,0.134022869,0.277339173,0.300545657,0.414496957,0.240315142,0.339965656,0.346381561,0.1087844,0.1416,0.1267,0.21145,0.08960000000000001,0.245950904,0.246864546,0.337700388
2009-12-08 21:00:00+00:00,0.238772562,0.154922666,0.089821755,0.277032666,0.3000289,0.413418769,0.24653385,0.346855941,0.349508144,0.127362244,0.1456,0.1267,0.21559999999999999,0.08960000000000001,0.254832851,0.24625171,0.34086118
2009-12-09 21:00:00+00:00,0.242981585,0.167016314,0.100659999,0.278220114,0.29872825,0.4180531,0.250545442,0.34872744,0.3436892,0.137162361,0.14980000000000002,0.1267,0.2175,0.088925,0.260430453,0.250344801,0.344478085
2009-12-10 21:00:00+00:00,0.234787549,0.168735111,0.116203912,0.27964412,0.293074553,0.418597561,0.247569678,0.345856495,0.348271111,0.124995712,0.1483,0.1267,0.21489999999999998,0.08932499999999999,0.254397874,0.256303268,0.344952117
2009-12-11 21:00:00+00:00,0.235143828,0.171253606,0.186547599,0.278461657,0.294172842,0.420234774,0.248401757,0.341685227,0.345679444,0.101245,0.14635,0.1267,0.21114999999999998,0.0882,0.250297627,0.25023752,0.343531956
2009-12-14 21:00:00+00:00,0.226616232,0.16451219,0.09190389,0.272991009,0.298483714,0.413884203,0.240015928,0.335405584,0.338316538,0.123829752,0.1464,0.14725,0.2127,0.08795,0.24631772,0.248377808,0.342233432
2009-12-15 21:00:00+00:00,0.231866892,0.14313759,0.117336474,0.272436482,0.284544971,0.410774,0.245370178,0.34618657,0.344291714,0.138441746,0.1478,0.14725,0.21475000000000002,0.08775000000000001,0.24351597,0.244337726,0.337783951
2009-12-16 21:00:00+00:00,0.225306714,0.143366025,0.0722242,0.268014495,0.277707014,0.399975365,0.240291607,0.33357658,0.336866787,0.1447825,0.1476,0.14725,0.215975,0.08839999999999999,0.239657041,0.24239451,0.340152432
2009-12-17 21:00:00+00:00,0.231931399,0.1640477,0.0973692,0.2724682,0.2791268,0.389497225,0.2405926,0.3505781,0.3429975,0.164597,0.14815,0.14725,0.21815,0.08915,0.243781548,0.240563862,0.333989274
2009-12-18 21:00:00+00:00,0.228530857,0.141521236,0.0954312,0.272977888,0.275564,0.391814,0.235004485,0.349284408,0.338405304,0.130845999,0.14905,0.14725,0.21855,0.08935,0.245470283,0.240537946,0.335352995
2009-12-21 21:00:00+00:00,0.221993771,0.162946752,0.097723999,0.268917865,0.271660971,0.391415504,0.223268342,0.342379066,0.337660957,0.1299912,0.14880000000000002,0.14725,0.21695,0.08935,0.238282447,0.239331929,0.335321545
2009-12-22 21:00:00+00:00,0.215113028,0.148618088,0.1040212,0.265020966,0.271625514,0.374735098,0.225690242,0.335870323,0.326393392,0.145198,0.14935,0.14725,0.21850000000000003,0.0902,0.233556817,0.234480862,0.332065409
2009-12-23 21:00:00+00:00,0.214446571,0.148209059,0.0806617,0.257724198,0.266167885,0.362926676,0.221469885,0.32271332,0.317008538,0.133324099,0.15039999999999998,0.14725,0.21755,0.08975,0.230435844,0.234480862,0.324300361
2009-12-24 18:00:00+00:00,0.212718857,0.146791109,0.1059942,0.260146679,0.260740342,0.365563555,0.2143278,0.326544219,0.317698999,0.1315924,0.15085,0.14725,0.21785,0.0891,0.230437762,0.232233237,0.322509948
2009-12-28 21:00:00+00:00,0.211496514,0.15655216,0.098692,0.268251809,0.261579128,0.361671346,0.223488028,0.338581298,0.319944775,0.1316048,0.1507,0.14725,0.2151,0.0889,0.22816341,0.233136857,0.320010587
2009-12-29 21:00:00+00:00,0.2129836,0.148865763,0.0924376,0.265372666,0.261619799,0.360587714,0.2261665,0.345694761,0.320817588,0.1370489,0.15115,0.14725,0.21565,0.090025,0.22587434,0.232852068,0.320206157
2009-12-30 21:00:00+00:00,0.21277675,0.159738977,0.081514,0.267335395,0.262957082,0.363818949,0.223980946,0.346719371,0.318023146,0.133612999,0.14995,0.14725,0.21425,0.08945,0.228924831,0.235605375,0.322271756
2009-12-31 21:00:00+00:00,0.220888542,0.145965808,0.091781499,0.265351514,0.264661615,0.364178057,0.228807857,0.339923222,0.316725,0.136757599,0.1501,0.14725,0.213,0.089575,0.229082652,0.235605375,0.318044167
2010-01-04 21:00:00+00:00,0.211965351,0.149104417,0.075918999,0.269102253,0.259400665,0.358857028,0.223275167,0.332690133,0.306485266,0.129998,0.1474,0.14545,0.21050000000000002,0.08975,0.224397969,0.231217423,0.31023156
2010-01-05 21:00:00+00:00,0.210956035,0.161864987,0.072772,0.261379126,0.266378912,0.349423177,0.2213479,0.326818138,0.311229333,0.1293805,0.14355,0.14545,0.20550000000000002,0.088875,0.22194391,0.233023946,0.306847103
2010-01-06 21:00:00+00:00,0.203795691,0.161945267,0.070088299,0.255585776,0.260204531,0.345100488,0.219210935,0.309601904,0.3038288,0.129189999,0.1383,0.13574999999999998,0.198,0.08775000000000001,0.217906871,0.227467287,0.306597164
2010-01-07 21:00:00+00:00,0.201560414,0.159343973,0.0703896,0.244587939,0.258928353,0.343778609,0.218737903,0.304759715,0.299644658,0.123384399,0.1373,0.13525,0.19385000000000002,0.08512499999999999,0.217198965,0.224634096,0.305618489
2010-01-08 21:00:00+00:00,0.196455775,0.161907234,0.078845,0.239544888,0.254731531,0.33063503,0.20668425,0.295113809,0.298177013,0.123929999,0.13615,0.13144999999999998,0.19024999999999997,0.0852,0.212826703,0.218549995,0.304275934
2010-01-11 21:00:00+00:00,0.194744785,0.14889992,0.125607999,0.24247538,0.25334035,0.327747755,0.210696742,0.315114155,0.30103185,0.123774,0.13485,0.12875,0.1869,0.082925,0.210782312,0.218549995,0.296099106
2010-01-12 21:00:00+00:00,0.200067121,0.157202324,0.128034,0.241729153,0.252721101,0.326864738,0.214498139,0.299577777,0.302753266,0.096488,0.136,0.12714999999999999,0.18625,0.08105000000000001,0.212994079,0.211769377,0.296316903
2010-01-13 21:00:00+00:00,0.193916149,0.151162972,0.069465999,0.236714949,0.251489818,0.327196577,0.209128107,0.304336285,0.294838313,0.118075999,0.135925,0.12714999999999999,0.18485,0.080575,0.210742469,0.218757452,0.303129267
2010-01-14 21:00:00+00:00,0.190300433,0.151149798,0.080735,0.242178014,0.246382643,0.323503888,0.205114908,0.31093329,0.290059056,0.1242772,0.1331,0.12714999999999999,0.18059999999999998,0.079925,0.206136387,0.209093829,0.295753654
2010-01-15 21:00:00+00:00,0.1962524,0.154511515,0.0811126,0.241682107,0.244902499,0.321488,0.205468142,0.303058849,0.29789525,0.107272,0.1353,0.12714999999999999,0.18267499999999998,0.08005000000000001,0.212932272,0.209003591,0.288721117
2010-01-19 21:00:00+00:00,0.193016778,0.135482926,0.083291253,0.231683403,0.234911678,0.296477799,0.200693132,0.270657104,0.277243904,0.11019798,0.1336,0.12345,0.1813,0.079025,0.204582619,0.218492268,0.283800388
2010-01-20 21:00:00+00:00,0.192391975,0.134711266,0.0797512,0.236464,0.2403437,0.309694639,0.205541899,0.30135185,0.292301633,0.122408399,0.132625,0.12345,0.18285,0.079125,0.214629969,0.217848865,0.288400655
2010-01-21 21:00:00+00:00,0.203264142,0.14999885,0.078484495,0.24706959,0.251384941,0.319454384,0.216280412,0.30885949,0.305228507,0.131385047,0.13385,0.12345,0.186675,0.07907499999999999,0.223985989,0.212123004,0.293141511
2010-01-22 21:00:00+00:00,0.223235028,0.132303809,0.079173142,0.25269776,0.273134857,0.327475209,0.2352612,0.343539366,0.325396628,0.133490634,0.137125,0.12345,0.1882,0.07985,0.228675239,0.222268074,0.296361841
2010-01-25 21:00:00+00:00,0.215144746,0.142654333,0.078923742,0.244277028,0.268501948,0.324734635,0.230898716,0.311418552,0.314844285,0.132375523,0.13635,0.12345,0.188875,0.079625,0.229273798,0.227028844,0.295965028
2010-01-26 21:00:00+00:00,0.220272425,0.140068134,0.079526698,0.245242711,0.266445475,0.325209541,0.228154124,0.322238571,0.32676306,0.134508803,0.13824999999999998,0.12345,0.196,0.080175,0.222540297,0.237313343,0.310396615
2010-01-27 21:00:00+00:00,0.213481948,0.139750266,0.075800196,0.243225777,0.269401139,0.324468112,0.217374874,0.331563871,0.311419299,0.135551244,0.13905,0.12345,0.200025,0.08070000000000001,0.227836438,0.237637623,0.317590158
2010-01-28 21:00:00+00:00,0.217327278,0.140220471,0.079032257,0.2397744,0.277314642,0.32751519,0.229729821,0.321546257,0.314270857,0.130063942,0.13705,0.12795,0.197075,0.07955,0.233591531,0.224211052,0.304903458
2010-01-29 21:00:00+00:00,0.223853462,0.149422077,0.076709833,0.244572622,0.28278375,0.329887951,0.233039237,0.331861123,0.322534799,0.134840488,0.13765,0.12795,0.20065000000000002,0.07945,0.228069469,0.234028103,0.311142452
2010-02-01 21:00:00+00:00,0.213544278,0.147824999,0.07738263,0.241734166,0.271354964,0.322873282,0.229730892,0.316653199,0.309487574,0.133213609,0.13699999999999998,0.1388,0.207375,0.07934999999999999,0.225588594,0.236874614,0.303721454
2010-02-02 21:00:00+00:00,0.20783071,0.139677423,0.0767368,0.239615385,0.264645078,0.320484643,0.217734392,0.299843955,0.297043719,0.131577447,0.1344,0.13949999999999999,0.203875,0.079125,0.219682177,0.226101297,0.298588613
2010-02-03 21:00:00+00:00,0.210090128,0.143624373,0.077099087,0.23881946,0.267015428,0.326213828,0.217759157,0.302333892,0.30185892,0.12965252,0.13235,0.13949999999999999,0.200025,0.0787,0.220361896,0.220342712,0.289710446
2010-02-04 21:00:00+00:00,0.230524378,0.135362158,0.078007634,0.25834026,0.289023321,0.343736045,0.237334896,0.366977342,0.328773647,0.135435325,0.13805,0.13765,0.20575,0.078675,0.237654059,0.221769717,0.293247921
2010-02-05 21:00:00+00:00,0.228649285,0.13236739,0.078439742,0.263654819,0.303177485,0.362246272,0.234301042,0.339018287,0.341189428,0.141346571,0.14065,0.13765,0.21795,0.07855000000000001,0.248574525,0.237403254,0.31585249
2010-02-08 21:00:00+00:00,0.234026366,0.153834936,0.078126019,0.260158107,0.299828585,0.361011427,0.241308092,0.339162541,0.334139641,0.148525355,0.1399,0.13765,0.21614999999999998,0.07825,0.243209393,0.237219022,0.315753563
2010-02-09 21:00:00+00:00,0.2319903,0.153716822,0.077454977,0.258599855,0.29011555,0.352052183,0.2409564,0.329613028,0.331356466,0.147433055,0.1374,0.13765,0.214525,0.0779,0.243278975,0.236478078,0.312396243
2010-02-10 21:00:00+00:00,0.234700358,0.151536885,0.0809565,0.263604628,0.292683735,0.344696358,0.243910396,0.329547044,0.321438242,0.1506968,0.136075,0.13565,0.211525,0.078125,0.23964579,0.232687413,0.306261383
2010-02-11 21:00:00+00:00,0.224588585,0.137430574,0.079968196,0.262400565,0.282225582,0.336430003,0.228197924,0.316434666,0.311524485,0.150634253,0.1352,0.13565,0.2086,0.07875,0.245538753,0.232687413,0.30265875
2010-02-12 21:00:00+00:00,0.219532535,0.148376287,0.0762649,0.259439936,0.281470187,0.341075036,0.229776342,0.32562598,0.321700806,0.150511047,0.1358,0.13565,0.2102,0.07835,0.24256854,0.226411996,0.303322727
2010-02-16 21:00:00+00:00,0.212646285,0.143457352,0.078230628,0.258533495,0.274448428,0.328439912,0.224482685,0.320354368,0.310397209,0.151588342,0.13275,0.13369999999999999,0.20265,0.0776,0.234737969,0.226919128,0.303322727
2010-02-17 21:00:00+00:00,0.211008717,0.140946023,0.077422688,0.256396428,0.273913825,0.32349246,0.218708503,0.317772952,0.30575899,0.144833257,0.1317,0.13369999999999999,0.19785,0.07715,0.22821891,0.216830637,0.296821598
2010-02-18 21:00:00+00:00,0.20167505,0.123773196,0.076341009,0.253189653,0.266691099,0.314696364,0.208338964,0.312261895,0.301883377,0.147643095,0.13144999999999998,0.13369999999999999,0.20065000000000002,0.07625,0.224785743,0.21474817,0.292541648
2010-02-19 21:00:00+00:00,0.203258124,0.136003666,0.073727633,0.253011699,0.26283495,0.315856733,0.206698962,0.319575209,0.3017066,0.144183966,0.13195,0.13369999999999999,0.2002,0.07655,0.222689796,0.222057352,0.2999675
2010-02-22 21:00:00+00:00,0.199591285,0.141261269,0.074526587,0.249464044,0.263486464,0.318892887,0.209964899,0.310246679,0.297571317,0.142538685,0.1321,0.13369999999999999,0.19315000000000002,0.076,0.221038643,0.211899368,0.292944629
2010-02-23 21:00:00+00:00,0.206408233,0.131484011,0.073914682,0.245204101,0.272729017,0.318975553,0.216170971,0.317948,0.307286095,0.1392575,0.1324,0.13369999999999999,0.19399999999999998,0.07505,0.225925298,0.21333258,0.291710756
2010-02-24 21:00:00+00:00,0.197755592,0.123764514,0.070046499,0.238780457,0.264158178,0.306824206,0.208849871,0.314397527,0.296855942,0.1345442,0.13195,0.13369999999999999,0.19625,0.07505,0.224219726,0.217999403,0.293683285
2010-02-25 21:00:00+00:00,0.199997608,0.135809111,0.070654946,0.228478868,0.263979726,0.316200196,0.2082045,0.312458422,0.301998466,0.149420255,0.1336,0.13369999999999999,0.20315000000000003,0.07440000000000001,0.229425438,0.221557582,0.296956464
2010-02-26 21:00:00+00:00,0.199374457,0.121456807,0.068983449,0.225475893,0.259289685,0.30373555,0.2052164,0.308505662,0.293618419,0.152114431,0.13165,0.13369999999999999,0.20055,0.0741,0.220969176,0.216138588,0.292316153
2010-03-01 21:00:00+00:00,0.192029178,0.135978342,0.068941704,0.225469614,0.255265153,0.31230082,0.202974516,0.305063922,0.291959028,0.14353638,0.13055,0.13369999999999999,0.20055,0.07400000000000001,0.214950454,0.214097508,0.283930124
2010-03-02 21:00:00+00:00,0.195277499,0.140268866,0.069335777,0.230144377,0.252580999,0.313737375,0.199905125,0.29819649,0.295258211,0.144783166,0.13019999999999998,0.1326,0.20032499999999998,0.07385,0.210643362,0.209124987,0.282275457
2010-03-03 21:00:00+00:00,0.192377732,0.122969347,0.064595958,0.228857982,0.253093182,0.309871937,0.198539107,0.294323376,0.28924986,0.174149206,0.13045,0.1326,0.20015,0.07315,0.207304458,0.207349273,0.276510895
2010-03-04 21:00:00+00:00,0.190729628,0.130618814,0.06708389,0.222570214,0.254962457,0.31480775,0.197369642,0.299828526,0.285871766,0.14362948,0.13105,0.1326,0.1999,0.07295,0.209952081,0.211593125,0.282768348
2010-03-05 21:00:00+00:00,0.188524955,0.1368074,0.06550598,0.220145869,0.251376687,0.303803859,0.195106978,0.289134446,0.26814419,0.144843252,0.12994999999999998,0.1326,0.19635000000000002,0.0717,0.201537758,0.204371609,0.280540536
2010-03-08 21:00:00+00:00,0.188384989,0.122656984,0.066823968,0.217853193,0.250206028,0.306313584,0.194538349,0.282568565,0.272794965,0.130644015,0.1298,0.1326,0.1941,0.07150000000000001,0.201465465,0.198229886,0.270014462
2010-03-09 21:00:00+00:00,0.186719564,0.119930714,0.065293785,0.218753028,0.250886049,0.306075359,0.192347908,0.277514039,0.272011871,0.133129542,0.12965,0.1235,0.19475,0.0713,0.201059808,0.198317806,0.271253427
2010-03-10 21:00:00+00:00,0.188182671,0.125030966,0.064261626,0.219204419,0.244348899,0.302939562,0.203654028,0.279237662,0.269751349,0.181058326,0.12710000000000002,0.126775,0.19115,0.0701,0.200588236,0.198189191,0.266390801
2010-03-11 21:00:00+00:00,0.192129375,0.117463111,0.065301366,0.214549555,0.250527475,0.316096203,0.204296125,0.284473009,0.275426211,0.1409414,0.12505,0.125075,0.18442499999999998,0.06885,0.205744945,0.197551098,0.268642673
2010-03-12 21:00:00+00:00,0.191114021,0.126546571,0.071457914,0.21195819,0.249770535,0.308806193,0.2041237,0.285318504,0.277295219,0.144421619,0.12484999999999999,0.125075,0.1812,0.06825,0.205074516,0.199074192,0.268609808
2010-03-15 20:00:00+00:00,0.1921042,0.130640571,0.064384731,0.213579015,0.24610266,0.31289891,0.206901178,0.292169,0.285378257,0.142305206,0.12417500000000001,0.125075,0.17565,0.0678,0.210705292,0.198874112,0.270243946
2010-03-16 20:00:00+00:00,0.188393907,0.13802925,0.063829714,0.208585904,0.245036299,0.310254437,0.198871685,0.289889298,0.266701301,0.164546603,0.12279999999999999,0.125075,0.1739,0.0676,0.205241029,0.199359824,0.27038673
2010-03-17 20:00:00+00:00,0.192020821,0.129056414,0.059564085,0.205812309,0.243658874,0.316242792,0.194283492,0.288006508,0.269074761,0.130691142,0.118175,0.125075,0.1693,0.06795,0.200825239,0.19672297,0.266549695
2010-03-18 20:00:00+00:00,0.191065399,0.135370773,0.062754488,0.201325257,0.250202364,0.308869325,0.189075892,0.285233727,0.265581633,0.133595923,0.1175,0.125075,0.16905,0.068025,0.204546594,0.196930262,0.265666364
2010-03-19 20:00:00+00:00,0.182384894,0.133289707,0.061727857,0.203443714,0.249021071,0.312060406,0.198176048,0.285978481,0.273753398,0.129589511,0.11699999999999999,0.125075,0.16995000000000002,0.06955,0.204099274,0.192201227,0.265060759
2010-03-22 20:00:00+00:00,0.186362599,0.1291484,0.057286199,0.1995525,0.253030699,0.306209424,0.190757999,0.284756782,0.274506399,0.149032999,0.11964999999999999,0.124,0.17370000000000002,0.07005,0.207063391,0.192201227,0.268616671
2010-03-23 20:00:00+00:00,0.1859853,0.115994184,0.059844,0.193353075,0.241860499,0.299583359,0.197065625,0.279313749,0.26492599,0.135545,0.12054999999999999,0.124,0.1722,0.07,0.203792931,0.19328418,0.267754005
2010-03-24 20:00:00+00:00,0.183977499,0.133795345,0.0631317,0.201298187,0.250987949,0.301625668,0.202953049,0.286450462,0.276481471,0.133105999,0.12215,0.124,0.17975000000000002,0.06974999999999999,0.204610441,0.194597985,0.264756978
2010-03-25 20:00:00+00:00,0.189744062,0.12852871,0.0688159,0.201325262,0.25137765,0.307552421,0.193585874,0.290297543,0.27393831,0.1273836,0.1219,0.124,0.17559999999999998,0.07055,0.199224022,0.197398462,0.267252478
2010-03-26 20:00:00+00:00,0.188393,0.123297716,0.06342,0.200375043,0.2509928,0.3081366,0.192055,0.286460007,0.276282091,0.1231196,0.1197,0.124,0.17350000000000002,0.07077499999999999,0.199700335,0.19626856,0.265753864
2010-03-29 20:00:00+00:00,0.1875555,0.12959156,0.0625044,0.19761582,0.245896387,0.301208975,0.201713375,0.281068025,0.263428758,0.123928,0.12119999999999999,0.124,0.1709,0.070525,0.198224562,0.196107366,0.263632742
2010-03-30 20:00:00+00:00,0.184987499,0.121628849,0.069901999,0.191032437,0.24495425,0.300176999,0.1969769,0.272415556,0.259594482,0.120445499,0.1247,0.124,0.16875,0.07045,0.198554268,0.195201738,0.259284274
2010-03-31 20:00:00+00:00,0.18289,0.13172854,0.0622971,0.192970445,0.240015449,0.304424682,0.19903875,0.273523156,0.263367563,0.117524299,0.12165,0.11994999999999999,0.1679,0.06985000000000001,0.19868852,0.196308068,0.26022736
2010-04-01 20:00:00+00:00,0.182092,0.123992754,0.062370699,0.193308075,0.2392018,0.3061254,0.2034956,0.268403548,0.259974974,0.127564999,0.12315,0.11994999999999999,0.16440000000000002,0.0697,0.193907501,0.195696383,0.260738914
2010-04-05 20:00:00+00:00,0.177384964,0.133208776,0.068472799,0.195702945,0.23798685,0.298066779,0.191819569,0.272601925,0.255305758,0.1313354,0.1208,0.11994999999999999,0.15960000000000002,0.06935,0.193907501,0.200139964,0.260738914
2010-04-06 20:00:00+00:00,0.181015871,0.132609087,0.069534599,0.193412356,0.2377896,0.297905956,0.187315089,0.274502649,0.255563843,0.126252299,0.12405,0.11994999999999999,0.15875,0.07005,0.194903324,0.201241472,0.260738914
2010-04-07 20:00:00+00:00,0.181732078,0.130995135,0.066491599,0.200549156,0.238220148,0.296118518,0.189714266,0.285081087,0.265573645,0.126136,0.1233,0.11994999999999999,0.15825,0.06965,0.198930022,0.200406493,0.259358343
2010-04-08 20:00:00+00:00,0.176790285,0.129490111,0.0651368,0.200589718,0.245204624,0.2996875,0.186960199,0.285848165,0.264861344,0.125935199,0.12417500000000001,0.11994999999999999,0.1606,0.0696,0.204272038,0.20032056,0.260716282
2010-04-09 20:00:00+00:00,0.176859232,0.128152038,0.0652611,0.202523007,0.237810839,0.31081472,0.194218148,0.283833499,0.259711705,0.1199564,0.12235,0.11994999999999999,0.15914999999999999,0.07075000000000001,0.197478324,0.197066203,0.26555332
2010-04-12 20:00:00+00:00,0.174692057,0.13486209,0.060708999,0.202749775,0.237235453,0.3034008,0.196860096,0.287101409,0.264599075,0.1210668,0.12095,0.11994999999999999,0.15460000000000002,0.0709,0.195167604,0.193544116,0.269756556
2010-04-13 20:00:00+00:00,0.174739587,0.131694448,0.062257299,0.194820037,0.240201381,0.300739764,0.19210045,0.287356175,0.270445289,0.117122,0.12145,0.11994999999999999,0.15785,0.07145,0.196966633,0.195556324,0.268349487
2010-04-14 20:00:00+00:00,0.180887571,0.139774814,0.061572,0.195769814,0.24084675,0.2903479,0.1812515,0.286228493,0.25796997,0.1104934,0.11985,0.11994999999999999,0.1528,0.07085,0.195366033,0.192545929,0.268320966
2010-04-15 20:00:00+00:00,0.181493889,0.138638545,0.063930199,0.19533991,0.241843968,0.291826964,0.197771583,0.29411125,0.267227935,0.113452399,0.118175,0.11994999999999999,0.1527,0.071325,0.195629603,0.192813544,0.266292064
2010-04-16 20:00:00+00:00,0.190396471,0.128046742,0.0639777,0.199625614,0.246477468,0.295710562,0.198236953,0.314448678,0.284965834,0.110213,0.11960000000000001,0.11994999999999999,0.154225,0.072175,0.204052159,0.200068404,0.272206742
2010-04-19 20:00:00+00:00,0.186769162,0.131881487,0.065455643,0.197612178,0.246403007,0.308635682,0.199381339,0.315662459,0.295824698,0.117099914,0.12115000000000001,0.11994999999999999,0.15789999999999998,0.0726,0.209479694,0.207289458,0.28055228
2010-04-20 20:00:00+00:00,0.178282285,0.125824075,0.064679206,0.192230528,0.236453271,0.298528,0.191165714,0.305483857,0.280211737,0.109423225,0.11865,0.11994999999999999,0.15435000000000001,0.073025,0.202736772,0.204275061,0.271598151
2010-04-21 20:00:00+00:00,0.181467125,0.133083968,0.064424368,0.190765287,0.237412971,0.299321831,0.205842789,0.297707974,0.280964632,0.113133945,0.11795,0.124,0.15405,0.07305,0.207317446,0.195671156,0.272225411
2010-04-22 20:00:00+00:00,0.19475455,0.14043814,0.064389762,0.1864267,0.235674474,0.298882104,0.198979874,0.305507106,0.271740025,0.1156743,0.119125,0.11994999999999999,0.15755,0.07575,0.217574549,0.206217063,0.271373908
2010-04-23 20:00:00+00:00,0.180308507,0.146881401,0.064398968,0.188290844,0.245204928,0.283072388,0.193158149,0.306683171,0.286699662,0.114341895,0.11805,0.11994999999999999,0.157,0.07635,0.215126998,0.206799977,0.274436368
2010-04-26 20:00:00+00:00,0.190521357,0.1441014,0.065127312,0.185017142,0.242090228,0.298600537,0.198528128,0.301945779,0.280274099,0.104114249,0.117675,0.11994999999999999,0.15645,0.07605,0.21149996,0.200126271,0.274030127
2010-04-27 20:00:00+00:00,0.206534399,0.146427399,0.06596649,0.198670235,0.301607185,0.312085043,0.213254582,0.322998,0.301846287,0.12542045,0.11945,0.11994999999999999,0.1602,0.07730000000000001,0.234658491,0.198635937,0.277459442
2010-04-28 20:00:00+00:00,0.204433635,0.142722718,0.066199562,0.199942839,0.267755339,0.299832998,0.213439728,0.306915265,0.29534089,0.125032031,0.1208,0.11994999999999999,0.16510000000000002,0.07735,0.246415332,0.217475795,0.287120919
2010-04-29 20:00:00+00:00,0.191675571,0.150403393,0.066700318,0.197541314,0.264051032,0.310021307,0.209759923,0.2985646,0.291926774,0.113574457,0.11745,0.11994999999999999,0.1605,0.07635,0.23548951,0.217475795,0.288614587
2010-04-30 20:00:00+00:00,0.210478914,0.150804412,0.073655325,0.2003254,0.27498835,0.30938955,0.222985857,0.311003062,0.309871437,0.114976124,0.11727499999999999,0.11445,0.16010000000000002,0.0764,0.235746436,0.209085986,0.283696286
2010-05-03 20:00:00+00:00,0.206529062,0.137095704,0.066125239,0.203248687,0.275593874,0.305656591,0.20966815,0.307005425,0.303443825,0.110045,0.117425,0.11445,0.1617,0.07644999999999999,0.234882503,0.209085986,0.288028789
2010-05-04 20:00:00+00:00,0.2230505,0.155868018,0.063444756,0.209440382,0.299053342,0.319234134,0.243904767,0.331647665,0.325117768,0.14487515,0.1197,0.124,0.16685,0.076875,0.254908946,0.209085986,0.28801672
2010-05-05 20:00:00+00:00,0.228674725,0.145056771,0.069632087,0.216340285,0.317120514,0.335817589,0.254856057,0.347218481,0.337551565,0.1275604,0.12515,0.11445,0.1744,0.07715,0.262995095,0.209085986,0.303673295
2010-05-06 20:00:00+00:00,0.258588942,0.175148399,0.069632087,0.255825114,0.343975357,0.357720197,0.277842757,0.366268906,0.363860649,0.1475327,0.1413,0.124,0.2116,0.081125,0.28773379,0.235648602,0.306532426
2010-05-07 20:00:00+00:00,0.302187953,0.188435675,0.080758771,0.256571182,0.342556551,0.380658714,0.324828466,0.392095725,0.400533412,0.162426799,0.1434,0.11445,0.21765,0.08449999999999999,0.345722594,0.276239273,0.346774453
2010-05-10 20:00:00+00:00,0.253344171,0.159687125,0.075875562,0.238561367,0.311925878,0.357372414,0.261514499,0.343027539,0.335181106,0.1425872,0.134725,0.11445,0.19747499999999998,0.081775,0.272902903,0.2644504,0.33166791
2010-05-11 20:00:00+00:00,0.238640071,0.163802331,0.072957909,0.248766989,0.301100221,0.348856794,0.260211428,0.347411206,0.353860624,0.181789224,0.1358,0.11445,0.2059,0.08164999999999999,0.278992051,0.266071401,0.321018682
2010-05-12 20:00:00+00:00,0.231042999,0.145998124,0.079319081,0.246689,0.28317625,0.336373294,0.2455079,0.323428231,0.314873499,0.184283199,0.13140000000000002,0.11445,0.20425000000000001,0.0797,0.255357414,0.257285776,0.320995104
2010-05-13 20:00:00+00:00,0.22998606,0.161265303,0.075503246,0.234174307,0.292049646,0.342709558,0.25153183,0.322289112,0.3202829,0.154251028,0.1278,0.11445,0.19505,0.078875,0.249555171,0.240229253,0.305511866
2010-05-14 20:00:00+00:00,0.250454253,0.1709711,0.076335499,0.247062807,0.31769,0.358104768,0.26764156,0.346566606,0.347582256,0.176068781,0.12975,0.11445,0.20102499999999998,0.0784,0.292329421,0.248983996,0.308949073
2010-05-17 20:00:00+00:00,0.24765191,0.179849565,0.076772664,0.239776371,0.315096067,0.367352991,0.283035492,0.342038937,0.353129492,0.17079715,0.1334,0.11445,0.20864999999999997,0.08134999999999999,0.291508548,0.260470884,0.328918007
2010-05-18 20:00:00+00:00,0.272302571,0.178283624,0.074220562,0.2407598,0.332786514,0.38189821,0.292947199,0.356420431,0.364937775,0.19983705,0.1323,0.11445,0.21085,0.07769999999999999,0.279894398,0.254340596,0.318003551
2010-05-19 20:00:00+00:00,0.282892664,0.18984,0.075849707,0.240806719,0.336540107,0.382076591,0.314267253,0.367476737,0.389025599,0.203388615,0.13824999999999998,0.11445,0.23155,0.082725,0.309627658,0.271794314,0.342443647
2010-05-20 20:00:00+00:00,0.331485121,0.212600021,0.08059164,0.257771185,0.385463957,0.409462417,0.361435982,0.406105774,0.441270012,0.235391412,0.1578,0.11445,0.272775,0.09675,0.345712436,0.275348784,0.348781506
2010-05-21 20:00:00+00:00,0.312586025,0.202816804,0.086145904,0.248777075,0.380673975,0.402957701,0.328191449,0.398834025,0.416520999,0.20797339,0.1591,0.11445,0.2747,0.102975,0.335796332,0.309631307,0.348781506
2010-05-24 20:00:00+00:00,0.298854192,0.211489612,0.080362612,0.2388852,0.359353428,0.396373761,0.317393542,0.380757815,0.392411593,0.239818725,0.1475,0.11445,0.256825,0.099925,0.323466869,0.298706221,0.345031827
2010-05-25 20:00:00+00:00,0.285155135,0.195929818,0.082933118,0.242354142,0.341698996,0.401725694,0.305859785,0.3794058,0.401333023,0.230672809,0.1537,0.11445,0.2627,0.1033,0.343702563,0.318563203,0.376852434
2010-05-26 20:00:00+00:00,0.298656482,0.19355949,0.077136171,0.236894396,0.326051803,0.385622204,0.313630928,0.374378057,0.388176578,0.192159375,0.1448,0.11445,0.25785,0.1,0.310067001,0.302008462,0.359654253
2010-05-27 20:00:00+00:00,0.261432978,0.196894343,0.080929562,0.227481185,0.317257585,0.370648837,0.27008815,0.341839419,0.345542609,0.177383531,0.139725,0.11445,0.2486,0.09715,0.284044267,0.283151166,0.342522661
2010-05-28 20:00:00+00:00,0.270813757,0.1909825,0.073997,0.221281314,0.324828071,0.376527558,0.279538571,0.343342042,0.373788499,0.1710782,0.13824999999999998,0.11405,0.24255,0.094475,0.280712588,0.261677264,0.320928432
2010-06-01 20:00:00+00:00,0.281985696,0.180147992,0.078550085,0.226350114,0.342487292,0.397325161,0.305962596,0.367202323,0.394685673,0.237289999,0.13995,0.11405,0.2481,0.09244999999999999,0.29020418,0.253756985,0.322435758
2010-06-02 20:00:00+00:00,0.2615238,0.169416668,0.073741406,0.2188998,0.3241682,0.38327294,0.284600625,0.349676804,0.359510703,0.19106,0.1378,0.11405,0.2438,0.09144999999999999,0.291969918,0.256237985,0.324478003
2010-06-03 20:00:00+00:00,0.2518627,0.182789678,0.075103262,0.216200214,0.320673866,0.383040779,0.264353973,0.349258785,0.358324146,0.168163967,0.13685,0.11405,0.24,0.0906,0.278378468,0.245333287,0.317187522
2010-06-04 20:00:00+00:00,0.280299842,0.179142806,0.070697625,0.225255142,0.343647178,0.404467701,0.299527492,0.357388216,0.386832874,0.166575075,0.139,0.11405,0.24295000000000003,0.08945,0.306320884,0.24883733,0.319452508
2010-06-07 20:00:00+00:00,0.289950908,0.191224906,0.07488589,0.236767639,0.359159732,0.40797598,0.308753583,0.359745714,0.391047668,0.174993634,0.141,0.11405,0.26072500000000004,0.09539999999999998,0.315052971,0.275793747,0.325392704
2010-06-08 20:00:00+00:00,0.276948271,0.209674125,0.074363812,0.242443928,0.334767232,0.402945046,0.309306114,0.3513952,0.375910018,0.16468729,0.1419,0.11405,0.25825,0.0959,0.31969084,0.274290829,0.325560717
2010-06-09 20:00:00+00:00,0.29136691,0.184841678,0.074543887,0.241477742,0.353811075,0.388983529,0.301020421,0.346948261,0.38587885,0.17906579,0.14045,0.11405,0.254725,0.09535,0.298064576,0.272837203,0.323410147
2010-06-10 20:00:00+00:00,0.274584571,0.193934,0.07516735,0.232643671,0.310726842,0.372395683,0.301149571,0.327608323,0.358960349,0.161110724,0.13955,0.11405,0.24767499999999998,0.09455,0.284890699,0.262360596,0.31789791
2010-06-11 20:00:00+00:00,0.255680649,0.190043604,0.075620698,0.229329412,0.3239445,0.375603711,0.276148124,0.322304757,0.342850768,0.159462468,0.1346,0.11405,0.239275,0.09205,0.277345426,0.250292402,0.307386864
2010-06-14 20:00:00+00:00,0.260434167,0.168697384,0.072796196,0.227355642,0.3251121,0.373707891,0.277283742,0.316235809,0.341324243,0.142528362,0.1322,0.11405,0.22922499999999998,0.091225,0.265785967,0.235079122,0.293822017
2010-06-15 20:00:00+00:00,0.2305775,0.17783212,0.073328859,0.227574612,0.293671417,0.360626513,0.253137523,0.300142766,0.315320615,0.150214989,0.13295,0.11405,0.225125,0.09140000000000001,0.257175265,0.232730469,0.293053185
2010-06-16 20:00:00+00:00,0.233409714,0.182448124,0.081220618,0.225403407,0.294329314,0.346371149,0.250371642,0.301875071,0.3162359,0.231037537,0.13235,0.11405,0.22149999999999997,0.091,0.260553387,0.226667483,0.293053185
2010-06-17 20:00:00+00:00,0.243218246,0.161953984,0.071778,0.233614232,0.289858157,0.348526519,0.261458232,0.308503428,0.323121471,0.141179312,0.133,0.11405,0.221975,0.09202500000000001,0.259822383,0.229383448,0.292351116
2010-06-18 20:00:00+00:00,0.228359274,0.164863196,0.075632968,0.235154932,0.27569226,0.338605483,0.238065714,0.305998847,0.310959962,0.1293542,0.12985,0.11405,0.217075,0.090325,0.255215065,0.228673215,0.28763045
2010-06-21 20:00:00+00:00,0.239250544,0.165021762,0.062603414,0.235976664,0.280348383,0.351693395,0.254560321,0.298798,0.30840349,0.127712803,0.12925,0.11405,0.21245,0.0892,0.246967584,0.219782467,0.27812505
2010-06-22 20:00:00+00:00,0.246638,0.1607824,0.0649672,0.232437,0.2899786,0.346600447,0.2641376,0.295713821,0.3155049,0.1102812,0.12785,0.11405,0.21359999999999998,0.091725,0.250336301,0.229851063,0.279602181
2010-06-23 20:00:00+00:00,0.257365199,0.172413753,0.065481399,0.235287187,0.29829705,0.362909492,0.266430937,0.311543542,0.319823991,0.130856999,0.12994999999999998,0.11405,0.217075,0.09,0.263260553,0.237586614,0.280489649
2010-06-24 20:00:00+00:00,0.2669081,0.163924982,0.063312599,0.239225,0.319220299,0.364219826,0.273647749,0.313079949,0.3387405,0.128882499,0.13369999999999999,0.11405,0.22585,0.090475,0.278329197,0.236949664,0.283938567
2010-06-25 20:00:00+00:00,0.254938137,0.176764491,0.067995299,0.2449169,0.313722024,0.349935877,0.278714637,0.322504647,0.337708539,0.132927,0.13394999999999999,0.11405,0.227075,0.09267500000000001,0.285446587,0.247312288,0.287093337
2010-06-28 20:00:00+00:00,0.26271,0.153131643,0.063235999,0.246129749,0.316344899,0.354789492,0.281342549,0.309678152,0.343680973,0.118424599,0.13165,0.11405,0.22355,0.09380000000000001,0.272025111,0.245489975,0.285313556
2010-06-29 20:00:00+00:00,0.295784325,0.188727382,0.0624666,0.2603376,0.358091312,0.374269401,0.307185937,0.356393114,0.371140143,0.139950999,0.13755,0.11405,0.2318,0.09887499999999999,0.302229347,0.251918433,0.292365912
2010-06-30 20:00:00+00:00,0.3025879,0.166486282,0.065055799,0.257046999,0.3550717,0.366141092,0.311602675,0.349281576,0.379048486,0.1395,0.13535,0.11405,0.23957499999999998,0.09945,0.296235339,0.261498346,0.299033013
2010-07-01 20:00:00+00:00,0.293467849,0.168017286,0.062465,0.2601078,0.362310625,0.381075432,0.315513549,0.349131295,0.369490104,0.145329599,0.1406,0.11405,0.24825,0.10414999999999999,0.317096965,0.268764395,0.299033013
2010-07-02 20:00:00+00:00,0.294294,0.164534431,0.0593942,0.2559124,0.356105999,0.37735391,0.3126459,0.358463428,0.357300326,0.150397,0.13665,0.11405,0.2429,0.10185000000000001,0.305739948,0.271028519,0.309629463
2010-07-06 20:00:00+00:00,0.285137987,0.166502274,0.060563599,0.248673646,0.336696043,0.379490383,0.305019199,0.325185066,0.35639526,0.129992999,0.13015000000000002,0.11405,0.24045000000000002,0.1013,0.286219918,0.25654252,0.296425723
2010-07-07 20:00:00+00:00,0.266720885,0.168692986,0.063334499,0.239200919,0.324209458,0.359803656,0.281255306,0.335632371,0.342496173,0.121911999,0.12987500000000002,0.11405,0.23695,0.10220000000000001,0.279140621,0.258571625,0.297807607
2010-07-08 20:00:00+00:00,0.259286066,0.150666433,0.062692799,0.22953088,0.313789299,0.354582495,0.2812916,0.308957499,0.335391843,0.130261999,0.125175,0.11405,0.22755,0.101875,0.273325722,0.24668886,0.295190208
2010-07-09 20:00:00+00:00,0.254393762,0.154284469,0.061279999,0.227267813,0.307415848,0.346660059,0.269415893,0.305646933,0.313216565,0.119082,0.12415,0.11405,0.22255,0.09885,0.267105955,0.244494487,0.290702669
2010-07-12 20:00:00+00:00,0.256760575,0.155238356,0.0628612,0.2229008,0.308965146,0.341820898,0.269454166,0.314270433,0.324771326,0.1092197,0.1233,0.11405,0.220925,0.09570000000000001,0.265574678,0.244251075,0.287762598
2010-07-13 20:00:00+00:00,0.246565488,0.152116426,0.0630278,0.22437696,0.302176832,0.336206426,0.27093048,0.291625057,0.332894543,0.10196,0.12307499999999999,0.1382,0.22039999999999998,0.09480000000000001,0.254202826,0.237368592,0.282474237
2010-07-14 20:00:00+00:00,0.251974629,0.14230826,0.060996199,0.221727799,0.304830613,0.338972641,0.26816688,0.303589447,0.334412056,0.1274796,0.122875,0.1382,0.21685,0.09154999999999999,0.256396935,0.226107314,0.281788214
2010-07-15 20:00:00+00:00,0.253448651,0.161150566,0.0570517,0.21670002,0.297928958,0.338116716,0.271892399,0.303340633,0.322907269,0.1164775,0.1257,0.1382,0.21885000000000002,0.090875,0.274184076,0.234796046,0.289919715
2010-07-16 20:00:00+00:00,0.268430966,0.15641913,0.05807,0.22506694,0.312925708,0.353578656,0.288010239,0.313646685,0.347570282,0.1189668,0.1316,0.1382,0.22690000000000002,0.09185,0.286794513,0.248095062,0.290223747
2010-07-19 20:00:00+00:00,0.269474648,0.16078114,0.058236664,0.220944266,0.306055186,0.343613376,0.272620266,0.3205805,0.345260852,0.120004158,0.13117499999999999,0.13915,0.23125,0.095975,0.285018627,0.248095062,0.290503593
2010-07-20 20:00:00+00:00,0.251816125,0.157691866,0.059759919,0.220891199,0.292283,0.326274552,0.269612173,0.309260238,0.331121269,0.116654488,0.12965,0.13915,0.22725,0.0962,0.282272539,0.250592857,0.28665498
2010-07-21 20:00:00+00:00,0.265311877,0.155562056,0.058086309,0.2157292,0.29622748,0.342752029,0.27328424,0.313949442,0.329410973,0.118106335,0.128825,0.13915,0.2248,0.096175,0.272399494,0.247934379,0.280769216
2010-07-22 20:00:00+00:00,0.248107911,0.157565265,0.060711075,0.21322236,0.28734956,0.339411847,0.255079019,0.306961257,0.311268278,0.109098427,0.1286,0.13915,0.22640000000000002,0.0955,0.260179499,0.251517536,0.285113343
2010-07-23 20:00:00+00:00,0.2445683,0.135547344,0.060183045,0.218663446,0.278037559,0.336210302,0.260415906,0.298551928,0.3205975,0.104210225,0.125075,0.13915,0.2184,0.09505000000000001,0.261482183,0.241058643,0.282829978
2010-07-26 20:00:00+00:00,0.234134933,0.1331803,0.054847898,0.2144348,0.2748975,0.335953499,0.253178,0.2990473,0.3145757,0.106926612,0.124275,0.13915,0.214725,0.095175,0.251015468,0.23494564,0.281668344
2010-07-27 20:00:00+00:00,0.233760981,0.141984353,0.056831509,0.217506353,0.271481915,0.339014404,0.25190241,0.301376129,0.313089723,0.105941741,0.123225,0.13288499999,0.2121,0.093675,0.240489382,0.230051291,0.280752688
2010-07-28 20:00:00+00:00,0.232186448,0.137193297,0.056365524,0.216826071,0.276490615,0.344270729,0.259862666,0.29995198,0.31933622,0.108205993,0.12035,0.12997999999999998,0.21059999999999998,0.0911,0.239708119,0.22063631,0.277091293
2010-07-29 20:00:00+00:00,0.241175099,0.137917384,0.055974809,0.219038223,0.267453192,0.338223815,0.251091476,0.297552729,0.321669692,0.10616637,0.12112500000000001,0.129885,0.209325,0.08935,0.244162911,0.223652931,0.277077803
2010-07-30 20:00:00+00:00,0.238967129,0.164051169,0.056416354,0.214053592,0.274658348,0.338234019,0.249162653,0.28462656,0.310479846,0.107673499,0.12275,0.12884,0.2119,0.08904999999999999,0.249262231,0.232687732,0.275371246
2010-08-02 20:00:00+00:00,0.219464592,0.14776923,0.056825112,0.212466825,0.260593138,0.324502047,0.237252071,0.2773581,0.294966594,0.112925058,0.121325,0.12803,0.20885,0.08885,0.235603167,0.228667672,0.269365092
2010-08-03 20:00:00+00:00,0.231230988,0.150888092,0.058653903,0.214550215,0.263038153,0.314515328,0.243025207,0.27334936,0.300654276,0.111079154,0.12210000000000001,0.12761,0.2073,0.08877499999999999,0.235223277,0.221516812,0.270241185
2010-08-04 20:00:00+00:00,0.219803881,0.151172586,0.060420722,0.213599887,0.2663313,0.313657768,0.232302558,0.28753054,0.29987663,0.11455819,0.1233,0.128965,0.20655,0.08862500000000001,0.233907006,0.231250487,0.261822939
2010-08-05 20:00:00+00:00,0.224687564,0.167640492,0.058733399,0.210161451,0.267409271,0.318764933,0.236992184,0.28712844,0.301448974,0.1148052,0.12335000000000002,0.129345,0.205475,0.087,0.235041124,0.225724364,0.26339915
2010-08-06 20:00:00+00:00,0.232255655,0.165426307,0.061509825,0.207871876,0.268333415,0.329016127,0.241880646,0.271399825,0.301727446,0.11399458,0.12385,0.127545,0.20335,0.0867,0.247856939,0.227059996,0.262824981
2010-08-09 20:00:00+00:00,0.223053896,0.148730284,0.062329524,0.203615589,0.263899217,0.320706349,0.246209343,0.2775296,0.297771076,0.121134133,0.12300000000000001,0.12877,0.1991,0.0862,0.236725879,0.228582832,0.260888148
2010-08-10 20:00:00+00:00,0.233780511,0.141516641,0.060877572,0.206311212,0.271120669,0.318401444,0.244500923,0.2859287,0.296999723,0.120277761,0.12300000000000001,0.12981,0.19875,0.08622500000000001,0.245581096,0.23319428,0.264630276
2010-08-11 20:00:00+00:00,0.2563425,0.163095569,0.061514148,0.210089446,0.290075169,0.340556713,0.26741,0.3034558,0.320933523,0.128170637,0.125175,0.134275,0.20565,0.08725,0.263408561,0.247690199,0.267662512
2010-08-12 20:00:00+00:00,0.25359747,0.173463366,0.060265409,0.210733466,0.296666266,0.349142755,0.278249066,0.30430202,0.3175522,0.12631027,0.12392500000000001,0.140655,0.20832499999999998,0.08712500000000001,0.265826502,0.25461981,0.273916458
2010-08-13 20:00:00+00:00,0.265760974,0.168045343,0.063922812,0.209664066,0.301642833,0.351414301,0.275662112,0.3046562,0.312770964,0.128812445,0.12285,0.140425,0.2057,0.086325,0.267621182,0.247227128,0.268857013
2010-08-16 20:00:00+00:00,0.263843666,0.158496538,0.073983634,0.210389453,0.301655261,0.358803594,0.272717846,0.2911825,0.321165107,0.124427058,0.12465,0.14019500000000001,0.20620000000000002,0.08689999999999999,0.268438738,0.242896422,0.269454991
2010-08-17 20:00:00+00:00,0.250628414,0.174490448,0.069570205,0.208373782,0.292615766,0.347120699,0.271713397,0.278663359,0.305411058,0.120540209,0.12295,0.135885,0.20295000000000002,0.085975,0.258591897,0.239105076,0.269044276
2010-08-18 20:00:00+00:00,0.240207014,0.174203461,0.069656109,0.209926743,0.287638035,0.350158431,0.264315653,0.27825931,0.306244025,0.12001,0.12175000000000001,0.133305,0.20015,0.08545,0.257921023,0.234272752,0.269734295
2010-08-19 20:00:00+00:00,0.252514533,0.189302492,0.07668747,0.213561453,0.298674523,0.357997519,0.269680615,0.28498256,0.317509723,0.121864658,0.1226,0.132295,0.19870000000000002,0.08539999999999999,0.270195943,0.232943555,0.268260799
2010-08-20 20:00:00+00:00,0.261816114,0.190241497,0.075119846,0.212684112,0.305975548,0.354788972,0.269948964,0.28244655,0.317075399,0.121009454,0.1223,0.13475999999000002,0.19995000000000002,0.08695,0.274636165,0.243218852,0.272283843
2010-08-23 20:00:00+00:00,0.265850994,0.189824953,0.076764369,0.207925851,0.30446512,0.356926723,0.276384123,0.2834964,0.312018192,0.117050764,0.12217499999999999,0.13413,0.19885000000000003,0.08654999999999999,0.266071303,0.243539496,0.270752355
2010-08-24 20:00:00+00:00,0.2687794,0.174774553,0.081931161,0.213567723,0.310835538,0.35991115,0.285078615,0.291721261,0.332556123,0.123174258,0.12712500000000002,0.13619,0.2065,0.0888,0.276415705,0.247981815,0.276720769
2010-08-25 20:00:00+00:00,0.2629896,0.19029002,0.067798496,0.217074061,0.310489866,0.352541984,0.287712628,0.289979485,0.318718625,0.122957532,0.126375,0.137175,0.205175,0.0907,0.282221229,0.255106041,0.278129864
2010-08-26 20:00:00+00:00,0.274876925,0.189356225,0.069099903,0.21194762,0.308630928,0.345910237,0.286356697,0.297707007,0.331050266,0.119810222,0.125,0.136455,0.20355,0.091,0.27676095,0.254260311,0.280525352
2010-08-27 20:00:00+00:00,0.253020215,0.191208884,0.073178829,0.212918561,0.296768,0.34205314,0.280880769,0.288505162,0.317690776,0.121169496,0.12605,0.1367,0.20285,0.09085000000000001,0.272605038,0.248407462,0.281311554
2010-08-30 20:00:00+00:00,0.270680607,0.190378938,0.069736735,0.210371474,0.310013199,0.345676389,0.27978992,0.297196701,0.322875605,0.123481458,0.12695,0.136675,0.20245000000000002,0.09095,0.274206822,0.243028183,0.275766346
2010-08-31 20:00:00+00:00,0.265676033,0.185950133,0.067390967,0.216291333,0.307985333,0.353602583,0.2835214,0.300028015,0.325587199,0.122234314,0.1276,0.146948,0.20535,0.09119999999999999,0.274767692,0.260857154,0.275224439
2010-09-01 20:00:00+00:00,0.251814892,0.174168461,0.071443348,0.210632784,0.291516861,0.34011083,0.265627015,0.288186745,0.312569876,0.118558567,0.12789999999999999,0.144042,0.20550000000000002,0.0913,0.255200325,0.25669058,0.27021765
2010-09-02 20:00:00+00:00,0.244865179,0.174182574,0.069284149,0.211793602,0.285442782,0.337203496,0.264768271,0.277186833,0.301970056,0.117813838,0.1284,0.13295,0.20120000000000002,0.0876,0.253559451,0.249130307,0.26018215
2010-09-03 20:00:00+00:00,0.230375351,0.173667994,0.070379516,0.21054523,0.276772769,0.339052071,0.257082143,0.266309815,0.302700415,0.118512877,0.12744999999999998,0.138509,0.19644999999999999,0.08560000000000001,0.244404124,0.245178351,0.252382509
2010-09-07 20:00:00+00:00,0.2425172,0.172096307,0.071291945,0.209554461,0.287591338,0.335794467,0.253262307,0.267831567,0.306218584,0.118435266,0.13115,0.13933099999999998,0.19675,0.08460000000000001,0.249076578,0.243874349,0.248007044
2010-09-08 20:00:00+00:00,0.242634874,0.166934317,0.07259929,0.212605661,0.27900373,0.336024284,0.255485448,0.268224148,0.292743194,0.114994193,0.13295,0.12755,0.19855,0.08385,0.247269953,0.252567347,0.252251317
2010-09-09 20:00:00+00:00,0.231873815,0.169073994,0.07478574,0.208653025,0.273354317,0.329641827,0.251002897,0.260395762,0.297155482,0.115769193,0.13015000000000002,0.12755,0.19415,0.083025,0.242087747,0.247565136,0.24933581
2010-09-10 20:00:00+00:00,0.234092553,0.181452676,0.073291774,0.210125861,0.275350676,0.324014538,0.246951692,0.257818164,0.291416615,0.114646583,0.1283,0.12755,0.19235,0.08385,0.245114112,0.241402255,0.249240726
2010-09-13 20:00:00+00:00,0.224048882,0.168235071,0.073442258,0.205715266,0.262196307,0.339313276,0.245829423,0.249176844,0.27974272,0.116496819,0.12755,0.12755,0.1913,0.0839,0.241539782,0.238719363,0.245780344
2010-09-14 20:00:00+00:00,0.225346141,0.169967192,0.069516,0.213939687,0.267234361,0.331194567,0.240642564,0.253460649,0.279467948,0.117133,0.12990000000000002,0.12755,0.19235,0.0839,0.238779948,0.241337766,0.249401413
2010-09-15 20:00:00+00:00,0.230513969,0.183695115,0.072259296,0.208871199,0.2697488,0.340763271,0.235896153,0.255883104,0.275935799,0.116363908,0.12359999999999999,0.12755,0.1863,0.084,0.240956268,0.233760032,0.249334931
2010-09-16 20:00:00+00:00,0.228996782,0.181223374,0.074307232,0.210653187,0.269606779,0.331056986,0.236024933,0.260877339,0.277931687,0.116776012,0.1189,0.12755,0.18230000000000002,0.0843,0.242790657,0.232732096,0.250392414
2010-09-17 20:00:00+00:00,0.230437571,0.179687912,0.071697588,0.213131051,0.265038469,0.335308177,0.23636092,0.256313448,0.283185384,0.114734838,0.11814999999999999,0.12755,0.18030000000000002,0.08505000000000001,0.248153828,0.22679781,0.251791709
2010-09-20 20:00:00+00:00,0.227048,0.1787694,0.0719258,0.2118969,0.255694,0.332294735,0.2310331,0.256751098,0.260112999,0.1106648,0.11779999999999999,0.12755,0.18059999999999998,0.08555,0.242273442,0.22679781,0.254368142
2010-09-21 20:00:00+00:00,0.223721824,0.172036292,0.067667199,0.211004782,0.254913649,0.337466432,0.2382948,0.256308182,0.266589112,0.1118071,0.1182,0.12755,0.1816,0.085725,0.243177842,0.229506771,0.2543999
2010-09-22 20:00:00+00:00,0.2322117,0.165343035,0.0667312,0.2107279,0.2704192,0.335806352,0.244611025,0.2602098,0.264876094,0.1069971,0.11925000000000001,0.12755,0.17965,0.08545,0.248967681,0.231662399,0.252707875
2010-09-23 20:00:00+00:00,0.23888625,0.167093258,0.0662455,0.211199175,0.277018375,0.330209367,0.249203887,0.261250204,0.277543936,0.108369999,0.12,0.12795,0.183,0.086,0.250527767,0.231662399,0.252707875
2010-09-24 20:00:00+00:00,0.2260849,0.164073698,0.066680999,0.21221795,0.266277049,0.324837627,0.239835,0.258395547,0.278678744,0.1059075,0.11964999999999999,0.12795,0.1844,0.08595000000000001,0.239540153,0.234855237,0.252385754
2010-09-27 20:00:00+00:00,0.233828725,0.172097825,0.063964399,0.2119875,0.269328949,0.332273844,0.247431462,0.262067819,0.282728471,0.105891999,0.11945,0.12795,0.184,0.08625,0.243325446,0.230562645,0.248576399
2010-09-28 20:00:00+00:00,0.231862499,0.182275467,0.0672308,0.21147265,0.265067124,0.334922428,0.249734125,0.264324161,0.276689843,0.1070425,0.1192,0.12795,0.18605,0.08785,0.244769198,0.233342739,0.253938996
2010-09-29 20:00:00+00:00,0.2370103,0.167759152,0.0675322,0.213915975,0.27445015,0.318063477,0.253909287,0.262222044,0.274645945,0.1090932,0.121,0.12795,0.18715,0.08869999999999999,0.248486134,0.231587581,0.250387272
2010-09-30 20:00:00+00:00,0.2438202,0.171423497,0.065098099,0.2139137,0.274244199,0.308174894,0.2606389,0.261665657,0.273207037,0.1048011,0.12140000000000001,0.12789999999999999,0.1863,0.0886,0.251564797,0.2398554,0.248425261
2010-10-01 20:00:00+00:00,0.237475807,0.168302394,0.0714572,0.213368183,0.263640757,0.308237261,0.25974405,0.263520333,0.27035717,0.1096082,0.12054999999999999,0.12789999999999999,0.18505,0.0885,0.251814866,0.236714399,0.248425261
2010-10-04 20:00:00+00:00,0.242795454,0.162495939,0.069015199,0.212204965,0.27735646,0.311437425,0.262582327,0.263315246,0.276874738,0.1168944,0.11985,0.12789999999999999,0.18245,0.08795,0.256233938,0.238445918,0.250365039
2010-10-05 20:00:00+00:00,0.237790952,0.171525193,0.068972,0.218610005,0.27085038,0.319119456,0.24778,0.259830414,0.280464783,0.109037599,0.1202,0.12789999999999999,0.18335,0.088025,0.243749452,0.232658815,0.25118349
2010-10-06 20:00:00+00:00,0.236697574,0.168447938,0.0652325,0.218080392,0.264745326,0.314941545,0.254381981,0.263910431,0.28136437,0.112288999,0.123375,0.13455,0.1845,0.08845,0.23954702,0.227451459,0.260027782
2010-10-07 20:00:00+00:00,0.234912718,0.165373712,0.0625594,0.224240509,0.273650019,0.322749969,0.250646436,0.264659749,0.28217046,0.1126123,0.1286,0.13455,0.1866,0.08915,0.237681927,0.230441621,0.263213839
2010-10-08 20:00:00+00:00,0.228944741,0.167439547,0.0652281,0.220233386,0.271666171,0.326598843,0.240163727,0.268607904,0.282514451,0.1095857,0.12994999999999998,0.13455,0.18525,0.0886,0.236428832,0.234727483,0.271198185
2010-10-11 20:00:00+00:00,0.227081745,0.165196003,0.0659139,0.218742082,0.267992622,0.324073389,0.240329832,0.260914793,0.281427688,0.1072236,0.12915,0.13455,0.184025,0.08772500000000001,0.234896018,0.234727483,0.263785195
2010-10-12 20:00:00+00:00,0.228630489,0.16243683,0.066429999,0.222629175,0.266812977,0.323187144,0.243717616,0.258940711,0.28319399,0.109954,0.12835000000000002,0.13455,0.1826,0.08705,0.237463967,0.242114303,0.262920765
2010-10-13 20:00:00+00:00,0.218321403,0.172487435,0.066529799,0.232208128,0.262014857,0.327754115,0.235850749,0.259677971,0.269135273,0.1067008,0.1268,0.1424,0.18184999999999998,0.08685000000000001,0.229457157,0.237754325,0.259563903
2010-10-14 20:00:00+00:00,0.224323672,0.169568684,0.0709859,0.239701772,0.265050626,0.315915593,0.23709629,0.262657434,0.277895171,0.1118014,0.12925,0.145,0.18125,0.08744999999999999,0.232142073,0.229984798,0.26684766
2010-10-15 20:00:00+00:00,0.2229392,0.173247668,0.0718752,0.234356352,0.260636723,0.326674952,0.232740459,0.268854952,0.27773932,0.109476399,0.12885,0.145475,0.1797,0.08715,0.232918278,0.229842381,0.266524882
2010-10-18 20:00:00+00:00,0.217648378,0.174395904,0.069088717,0.231436091,0.254189125,0.326335599,0.241760472,0.268259757,0.277985034,0.113988958,0.128325,0.145875,0.1802,0.08835000000000001,0.232687156,0.227961114,0.270163732
2010-10-19 20:00:00+00:00,0.224586127,0.162898333,0.071273733,0.232292848,0.264509734,0.32365332,0.237238156,0.274541079,0.296497733,0.1144802,0.12744999999999998,0.147675,0.18,0.08900000000000001,0.234186138,0.225579667,0.2643974
2010-10-20 20:00:00+00:00,0.218144338,0.161325623,0.070168993,0.225831824,0.25503429,0.329176504,0.238606861,0.265694263,0.276222784,0.111067428,0.12689999999999999,0.149075,0.17859999999999998,0.08900000000000001,0.231505201,0.229487006,0.265748628
2010-10-21 20:00:00+00:00,0.2171462,0.163266095,0.072854095,0.22448144,0.264165509,0.329354539,0.235578663,0.270913533,0.275195523,0.108934452,0.12695,0.149075,0.1778,0.08900000000000001,0.225535117,0.227701328,0.263358708
2010-10-22 20:00:00+00:00,0.210752672,0.169016952,0.071624838,0.219808598,0.254022145,0.329159589,0.225765316,0.265513169,0.287743657,0.109271108,0.126375,0.14807499999999998,0.17754999999999999,0.08869999999999999,0.225144727,0.221360689,0.262767724
2010-10-25 20:00:00+00:00,0.210541254,0.163604582,0.070142726,0.220108615,0.254525032,0.325566592,0.222328696,0.265101034,0.278861744,0.113653312,0.1265,0.14307499999999998,0.17675000000000002,0.08900000000000001,0.225275268,0.219275098,0.264328703
2010-10-26 20:00:00+00:00,0.211486189,0.176883047,0.071084711,0.215327408,0.254192087,0.321346087,0.230767692,0.266278642,0.279602776,0.112787285,0.12564999999999998,0.136225,0.17579999999999998,0.08900000000000001,0.225499789,0.215402873,0.263109476
2010-10-27 20:00:00+00:00,0.216164912,0.169319114,0.072896957,0.213586772,0.261397094,0.329771458,0.228350101,0.272440653,0.285224428,0.111922485,0.125675,0.137425,0.17715,0.0889,0.229232667,0.214125557,0.267713721
2010-10-28 20:00:00+00:00,0.216261999,0.170927533,0.071715955,0.217860479,0.26510909,0.327650883,0.226656181,0.270908782,0.273538777,0.109067666,0.12635,0.137425,0.17665,0.08895,0.225109922,0.211600435,0.26671312
2010-10-29 20:00:00+00:00,0.21564114,0.172406009,0.070042323,0.217810605,0.261944109,0.330323735,0.229093832,0.266511014,0.290649492,0.112556947,0.12735,0.13785,0.17850000000000002,0.08929999999999999,0.225277438,0.217502284,0.267289392
2010-11-01 20:00:00+00:00,0.217831659,0.164891371,0.077181533,0.219984512,0.25971952,0.313577328,0.2302382,0.271167344,0.280188776,0.113964266,0.12825,0.13824999999999998,0.18059999999999998,0.0895,0.229547117,0.217337618,0.264645995
2010-11-02 20:00:00+00:00,0.215335069,0.153410053,0.071260198,0.218891766,0.255498087,0.327720884,0.225974225,0.266669722,0.276999873,0.111917507,0.12815,0.136825,0.1788,0.08925000000000001,0.224562609,0.218492487,0.266294521
2010-11-03 20:00:00+00:00,0.205690509,0.14684793,0.07299812,0.218881846,0.250023752,0.312595574,0.217586894,0.26536888,0.270092539,0.109091144,0.12435,0.135075,0.1752,0.08865,0.230339997,0.218492487,0.263369856
2010-11-04 20:00:00+00:00,0.195381036,0.1560297,0.068567095,0.223424384,0.229155454,0.314716385,0.210550081,0.262200425,0.260797304,0.110234966,0.12154999999999999,0.131575,0.17135,0.08810000000000001,0.21616268,0.205494564,0.26408066
2010-11-05 20:00:00+00:00,0.194950865,0.150425641,0.067040822,0.223836178,0.237145061,0.300868291,0.21018677,0.262494873,0.262397914,0.108207583,0.1192,0.13055,0.16585,0.08805,0.217077999,0.20475072,0.266360327
2010-11-08 21:00:00+00:00,0.195797343,0.159247311,0.070039333,0.226428434,0.238102272,0.299798378,0.205277061,0.267038928,0.267992,0.103051102,0.11800000000000001,0.132625,0.16595,0.08839999999999999,0.220929197,0.203346352,0.263885256
2010-11-09 21:00:00+00:00,0.1994013,0.172071428,0.078579485,0.232387334,0.242948796,0.312180875,0.212365463,0.28023776,0.269984342,0.106005942,0.1186,0.1324,0.16605,0.08805,0.216488091,0.203597286,0.264925489
2010-11-10 21:00:00+00:00,0.203100018,0.171055752,0.078497542,0.23001882,0.246005694,0.310476597,0.207159469,0.281014888,0.282628731,0.110075324,0.1191,0.1333,0.16785,0.087675,0.22508142,0.201021899,0.266301083
2010-11-11 21:00:00+00:00,0.199565345,0.17122402,0.079812223,0.224031363,0.236638072,0.299235937,0.21498349,0.280358952,0.275358526,0.111487174,0.11900000000000001,0.134,0.16875,0.0873,0.228658181,0.203972998,0.263313344
2010-11-12 21:00:00+00:00,0.215144654,0.164237599,0.082921904,0.224064235,0.248233465,0.314008915,0.23042871,0.292440107,0.290811138,0.111537733,0.12065,0.136225,0.17385,0.0877,0.233699226,0.207811098,0.271323325
2010-11-15 21:00:00+00:00,0.214061707,0.16461726,0.084687498,0.223901026,0.252673909,0.310939895,0.232164239,0.294864819,0.290551177,0.110645198,0.12265000000000001,0.13574999999999998,0.17620000000000002,0.088025,0.228083454,0.207487929,0.273391927
2010-11-16 21:00:00+00:00,0.22423424,0.18457418,0.082278314,0.22690396,0.266869799,0.326473765,0.240937799,0.306316971,0.305826095,0.114067888,0.12242499999999999,0.135525,0.17495000000000002,0.08805,0.240981858,0.209198595,0.273644397
2010-11-17 21:00:00+00:00,0.220345378,0.170251766,0.082317933,0.222405952,0.264426799,0.328434715,0.236038145,0.306744082,0.297873333,0.1125391,0.12085000000000001,0.13735,0.17345,0.08689999999999999,0.234699816,0.210736587,0.28155145
2010-11-18 21:00:00+00:00,0.209860763,0.159330952,0.083530682,0.222771176,0.25106009,0.321551927,0.226261472,0.292418365,0.280525225,0.110405003,0.1162,0.134575,0.16995000000000002,0.0863,0.22397145,0.20764624,0.27781034
2010-11-19 21:00:00+00:00,0.205826778,0.173028852,0.079916514,0.222304094,0.24535005,0.3254552,0.222959623,0.2814932,0.28104253,0.109625503,0.1162,0.134025,0.16635000000000003,0.08574999999999999,0.224477021,0.209499425,0.273967378
2010-11-22 21:00:00+00:00,0.202599432,0.163141428,0.077357557,0.220526654,0.245882614,0.32879933,0.216825409,0.277340017,0.276377814,0.109442657,0.11567500000000001,0.1332,0.16620000000000001,0.08574999999999999,0.231489203,0.206292581,0.272827924
2010-11-23 21:00:00+00:00,0.2108946,0.174336361,0.079941158,0.223473858,0.255360054,0.323015758,0.23175095,0.29379323,0.283480142,0.118499492,0.1164,0.147575,0.17195,0.08574999999999999,0.246966666,0.206292581,0.282003266
2010-11-24 21:00:00+00:00,0.207027236,0.169093317,0.081917415,0.223631809,0.245870899,0.324538716,0.226728669,0.282807485,0.269292098,0.108610546,0.1176,0.141875,0.17335,0.08574999999999999,0.242287409,0.213158062,0.275850408
2010-11-26 18:00:00+00:00,0.215909818,0.192532533,0.080175619,0.225969623,0.252584454,0.308958967,0.227896581,0.292007371,0.288455238,0.114925619,0.12054999999999999,0.146875,0.17785,0.08545,0.247775558,0.212691039,0.275333855
2010-11-29 21:00:00+00:00,0.217955047,0.166868222,0.080848088,0.229360929,0.248869265,0.311349964,0.2316058,0.287128899,0.295617944,0.112691144,0.12025000000000001,0.148925,0.178625,0.0861,0.26365115,0.213591995,0.271668539
2010-11-30 21:00:00+00:00,0.228168349,0.180471442,0.081320641,0.234819818,0.261587698,0.327715225,0.250600719,0.290561814,0.28928399,0.111077973,0.120675,0.152,0.181675,0.0862,0.270565128,0.220167441,0.275230213
2010-12-01 21:00:00+00:00,0.221752179,0.171346947,0.083252047,0.238607807,0.256203034,0.321273999,0.241028541,0.279296212,0.294249809,0.113588761,0.11975,0.148425,0.179375,0.08574999999999999,0.253665975,0.219671686,0.269753462
2010-12-02 21:00:00+00:00,0.2072672,0.173992793,0.083641865,0.2342856,0.249851,0.310717164,0.22714592,0.27131951,0.265102003,0.115494828,0.11885,0.144675,0.17702500000000002,0.0852,0.239763928,0.213833059,0.263729937
2010-12-03 21:00:00+00:00,0.197702445,0.170115625,0.083801682,0.232990736,0.243344327,0.317955437,0.216753636,0.272691137,0.276378428,0.110825374,0.1189,0.14035,0.172025,0.08460000000000001,0.236631418,0.213667327,0.26113633
2010-12-06 21:00:00+00:00,0.197450254,0.185035528,0.078615142,0.231942503,0.24842533,0.317055141,0.217540247,0.265123033,0.273426542,0.110951828,0.11964999999999999,0.141,0.17370000000000002,0.0839,0.239285976,0.212263201,0.260712738
2010-12-07 21:00:00+00:00,0.196421158,0.195464866,0.084061676,0.228233818,0.24229643,0.315618,0.217117927,0.257555682,0.258184031,0.103342323,0.12105,0.1381,0.169625,0.083675,0.23255644,0.210106887,0.251639528
2010-12-08 21:00:00+00:00,0.193979156,0.179891377,0.087198088,0.228244653,0.243705825,0.304970709,0.220000312,0.269561071,0.263479666,0.106470222,0.12265000000000001,0.13872500000000001,0.17085,0.08315,0.22943748,0.205779685,0.250825515
2010-12-09 21:00:00+00:00,0.188838458,0.171184628,0.088315333,0.223301327,0.239314752,0.304394693,0.216833365,0.267468656,0.264896219,0.105271642,0.12380000000000001,0.1383,0.16662500000000002,0.0815,0.225411837,0.204347654,0.247897599
2010-12-10 21:00:00+00:00,0.188260836,0.177968158,0.089207222,0.22257039,0.235046363,0.309389587,0.208475681,0.263887883,0.254616787,0.111847276,0.1232,0.138075,0.16454999999999997,0.08155,0.225096119,0.204418102,0.24902607
2010-12-13 21:00:00+00:00,0.190426276,0.178039126,0.085515968,0.218690018,0.238474323,0.301960127,0.211870709,0.25594511,0.247437733,0.106582584,0.12452500000000001,0.13765,0.16342500000000001,0.08145,0.219721602,0.199558502,0.247651634
2010-12-14 21:00:00+00:00,0.189342472,0.184780323,0.087427657,0.216876738,0.238102445,0.30197087,0.209361808,0.260493188,0.240913961,0.105178561,0.12405,0.137175,0.1629,0.0814,0.216323012,0.196178923,0.240106583
2010-12-15 21:00:00+00:00,0.193927363,0.17941978,0.089620796,0.21104481,0.234764761,0.301891653,0.213822378,0.259448385,0.262898158,0.111311761,0.12345,0.1355,0.1613,0.0797,0.217993635,0.19600901,0.239224825
2010-12-16 21:00:00+00:00,0.191136007,0.182227315,0.088163514,0.208671602,0.235620589,0.303754758,0.208244669,0.258358271,0.259941752,0.10397706,0.12585000000000002,0.137775,0.162225,0.081,0.217554574,0.197659173,0.238456269
2010-12-17 21:00:00+00:00,0.191128,0.1796056,0.0856267,0.207902,0.2284038,0.296590862,0.207666799,0.252895168,0.2566884,0.1025632,0.12255,0.138225,0.16112500000000002,0.081625,0.219404222,0.197748936,0.238013484
2010-12-20 21:00:00+00:00,0.1896755,0.179320604,0.083812,0.208752462,0.22730895,0.301759661,0.206665699,0.250247917,0.252164803,0.101615499,0.1202,0.138,0.15842499999999998,0.08185,0.217507035,0.202741289,0.237763172
2010-12-21 21:00:00+00:00,0.188614999,0.166547507,0.081934099,0.2087161,0.22269745,0.290912191,0.202652275,0.245695299,0.247312063,0.100031199,0.11994999999999999,0.13817500000000002,0.159075,0.08155,0.212081482,0.198348833,0.237235066
2010-12-22 21:00:00+00:00,0.186853649,0.17427819,0.082208199,0.207200624,0.226533625,0.282566412,0.203242099,0.248662619,0.2479002,0.099776099,0.12065,0.1384,0.159,0.082325,0.213885841,0.198212959,0.236945933
2010-12-23 21:00:00+00:00,0.192562,0.1758174,0.081995699,0.2044817,0.22698995,0.279938193,0.207515099,0.249585238,0.251858452,0.098165799,0.12140000000000001,0.137575,0.159025,0.08220000000000001,0.216566249,0.198212959,0.23612926
2010-12-27 21:00:00+00:00,0.196554187,0.164472077,0.083662,0.2075399,0.235807125,0.288929635,0.208226612,0.253766404,0.257994355,0.0977475,0.1217,0.1386,0.16,0.08205,0.224075703,0.197864598,0.237039053
2010-12-28 21:00:00+00:00,0.19702945,0.169698992,0.087865099,0.21295085,0.235555399,0.287499264,0.213469775,0.269292669,0.258297142,0.104658199,0.12244999999999999,0.138075,0.15962500000000002,0.08199999999999999,0.223480459,0.201369296,0.242716829
2010-12-29 21:00:00+00:00,0.196529099,0.177247072,0.085648399,0.216407062,0.233664712,0.290628606,0.208536912,0.255134803,0.259417888,0.0995469,0.12445,0.138075,0.16117499999999998,0.0819,0.221253727,0.201728052,0.240434844
2010-12-30 21:00:00+00:00,0.1990612,0.180960684,0.086877199,0.2188304,0.237322999,0.298771677,0.2119588,0.258393885,0.257547268,0.0973646,0.1246,0.138075,0.160925,0.08125,0.227186444,0.206621408,0.23787969
2010-12-31 21:00:00+00:00,0.20171359,0.181132966,0.0850808,0.217003563,0.240532148,0.287316451,0.218043116,0.267055788,0.261224,0.095931999,0.12480000000000001,0.13955,0.16225,0.08164999999999999,0.227186444,0.206621408,0.236458007
2011-01-03 21:00:00+00:00,0.19746699,0.175047748,0.086734999,0.21072309,0.236022224,0.294376983,0.215276858,0.249599322,0.259254793,0.0999916,0.1251,0.14,0.1618,0.08145,0.222433029,0.206621408,0.236171652
2011-01-04 21:00:00+00:00,0.192532698,0.17132683,0.08637,0.207398045,0.243162239,0.299609109,0.21623533,0.249911923,0.253048977,0.0941413,0.12304999999999999,0.1362,0.15905,0.0817,0.2219171,0.204872418,0.234771347
2011-01-05 21:00:00+00:00,0.189456014,0.172783011,0.088529999,0.208194209,0.2365728,0.292872567,0.207275607,0.252560425,0.252272952,0.09403,0.12112500000000001,0.13665,0.159325,0.08275,0.222843324,0.205295665,0.234722047
2011-01-06 21:00:00+00:00,0.190822836,0.168022557,0.0850492,0.20573359,0.236643093,0.295344477,0.205396727,0.244725226,0.252716638,0.0951317,0.12005,0.13470000000000001,0.1577,0.0824,0.222061472,0.200957033,0.23766518
2011-01-07 21:00:00+00:00,0.191600672,0.168924908,0.0841305,0.203401312,0.234691687,0.296551374,0.205730181,0.248648714,0.256488333,0.0940052,0.1197,0.134,0.1563,0.0814,0.227286308,0.200515155,0.236764977
2011-01-10 21:00:00+00:00,0.190774036,0.162443426,0.084289,0.20138301,0.231647765,0.294614954,0.2125776,0.257846653,0.257343809,0.0948123,0.11900000000000001,0.13425,0.1552,0.08115,0.23683139,0.200515155,0.237768108
2011-01-11 21:00:00+00:00,0.188887936,0.168239374,0.0833625,0.195829621,0.225191025,0.281835251,0.210452312,0.247803777,0.254484374,0.092532399,0.117875,0.1329,0.15835000000000002,0.0809,0.229343689,0.202102435,0.237170593
2011-01-12 21:00:00+00:00,0.18275512,0.162728116,0.0827626,0.191253163,0.22685375,0.279917164,0.201563083,0.2487238,0.248288403,0.091026299,0.11725,0.13075,0.15585000000000002,0.08109999999999999,0.216699379,0.200462481,0.232433752
2011-01-13 21:00:00+00:00,0.182259645,0.162460694,0.081377499,0.19979809,0.225823787,0.283349927,0.199043545,0.253011688,0.254426242,0.0898501,0.11675,0.1298,0.151,0.0812,0.213997855,0.196192221,0.231788363
2011-01-14 21:00:00+00:00,0.176796799,0.158870065,0.083167699,0.20240312,0.221641835,0.2791584,0.189035999,0.252652992,0.248943895,0.089096,0.1166,0.12935,0.14915,0.08289999999999999,0.212112928,0.196561352,0.232014946
2011-01-18 21:00:00+00:00,0.176077745,0.167052293,0.083301399,0.199010509,0.227716432,0.282610259,0.195090807,0.257374628,0.252593901,0.0885905,0.11664999999999999,0.12890000000000001,0.15055,0.082375,0.21012808,0.189223382,0.236820219
2011-01-19 21:00:00+00:00,0.18324409,0.170834109,0.081423099,0.20012253,0.231612376,0.282306273,0.200428374,0.255552968,0.2563641,0.0891226,0.1168,0.1284,0.14755000000000001,0.0825,0.21325493,0.186076469,0.235417463
2011-01-20 21:00:00+00:00,0.185920065,0.161644947,0.0815092,0.201461272,0.232282362,0.291768246,0.210910007,0.25587526,0.256812317,0.091053299,0.1165,0.130475,0.1485,0.08315,0.215302447,0.192007362,0.237505564
2011-01-21 21:00:00+00:00,0.184970836,0.160667364,0.080436,0.207898027,0.233651859,0.287806115,0.206086909,0.2656753,0.262845549,0.090016799,0.1162,0.133675,0.1484,0.08380000000000001,0.207903282,0.198251937,0.237326842
2011-01-24 21:00:00+00:00,0.179339981,0.156564514,0.080487447,0.206365978,0.224121752,0.28820398,0.199083527,0.25735908,0.255101657,0.091812476,0.1149,0.13547499999999998,0.148025,0.08347500000000001,0.207703314,0.194886686,0.237026809
2011-01-25 21:00:00+00:00,0.178929996,0.161507228,0.080056193,0.20225989,0.225522123,0.298785233,0.196702869,0.241016728,0.254912298,0.087076219,0.11465,0.133775,0.1482,0.08275,0.211393055,0.190518872,0.236467227
2011-01-26 21:00:00+00:00,0.173099069,0.165480206,0.081748723,0.202672989,0.214602974,0.285406984,0.189929543,0.257680685,0.24730819,0.09011466,0.114,0.129425,0.1474,0.08085,0.209477264,0.19158783,0.229741409
2011-01-27 21:00:00+00:00,0.168277632,0.158537942,0.080345371,0.200986277,0.219001109,0.296180304,0.195175665,0.250882149,0.246699171,0.086963257,0.1118,0.1291,0.1463,0.0803,0.207102465,0.186230158,0.225666999
2011-01-28 21:00:00+00:00,0.180932545,0.149613644,0.079642444,0.201803527,0.227265118,0.306427141,0.200041536,0.265838776,0.263362544,0.094324266,0.11289999999999999,0.1291,0.146175,0.08039999999999999,0.213101312,0.190305743,0.223884512
2011-01-31 21:00:00+00:00,0.178615076,0.169582495,0.08075972,0.195240183,0.226752472,0.310799984,0.199592545,0.246976547,0.264552396,0.086925987,0.113675,0.130525,0.14905,0.08155,0.214768891,0.195191077,0.223601893
2011-02-01 21:00:00+00:00,0.169651279,0.159612523,0.083263309,0.194919599,0.225380399,0.311208553,0.1993981,0.234294088,0.245748514,0.090523285,0.11477499999999999,0.1285,0.148775,0.08105000000000001,0.207905139,0.192053613,0.221425142
2011-02-02 21:00:00+00:00,0.171927865,0.16182793,0.083536793,0.192204181,0.220177047,0.302273455,0.189137454,0.236749709,0.251014926,0.087665365,0.115875,0.127775,0.14845,0.08095000000000001,0.20663725,0.186547357,0.220017847
2011-02-03 21:00:00+00:00,0.169010629,0.155950965,0.084437238,0.195517418,0.220027309,0.30522625,0.197739294,0.236381523,0.251888882,0.088967141,0.11595000000000001,0.128025,0.14815,0.08074999999999999,0.208580948,0.188627064,0.220017847
2011-02-04 21:00:00+00:00,0.167822136,0.154187561,0.08565718,0.191202272,0.220868854,0.304020766,0.188957527,0.231251979,0.250048852,0.087764942,0.1151,0.128,0.14755000000000001,0.0802,0.20363575,0.186235565,0.220017847
2011-02-07 21:00:00+00:00,0.162286181,0.160472479,0.084654442,0.18547373,0.21664249,0.294767261,0.18510717,0.235409565,0.247031496,0.089835619,0.1134,0.12837500000000002,0.146,0.0797,0.19880399,0.184823009,0.223622228
2011-02-08 21:00:00+00:00,0.161545229,0.157002722,0.085995777,0.179913134,0.21835859,0.293548996,0.188284794,0.226904828,0.242552344,0.085729666,0.11227499999999999,0.126975,0.1436,0.07915,0.198083619,0.184737718,0.222497142
2011-02-09 21:00:00+00:00,0.163566105,0.162499628,0.083008742,0.178507723,0.217646545,0.290227153,0.191294516,0.244058174,0.25243497,0.085690485,0.11227499999999999,0.128825,0.14277499999999999,0.07915,0.197820263,0.184307611,0.225904161
2011-02-10 21:00:00+00:00,0.164193916,0.162482523,0.084005714,0.172273345,0.208129919,0.287711575,0.192865436,0.245663311,0.261415984,0.086839384,0.11255000000000001,0.134,0.1425,0.0796,0.200102489,0.182713419,0.234549653
2011-02-11 21:00:00+00:00,0.1627344,0.158038742,0.080740633,0.16810229,0.21318909,0.290808519,0.184426254,0.231297466,0.245271003,0.086602261,0.11255000000000001,0.13847500000000001,0.14335,0.0793,0.20082594,0.182713419,0.227758777
2011-02-14 21:00:00+00:00,0.163329454,0.155700152,0.082415038,0.162834881,0.213763716,0.289319723,0.184560818,0.227327409,0.251953761,0.087997171,0.11234999999999999,0.13699999999999998,0.14345,0.07955,0.202002811,0.178950238,0.225591011
2011-02-15 21:00:00+00:00,0.165547399,0.146916628,0.081783063,0.163267585,0.210968843,0.292852826,0.184686858,0.230057714,0.248846177,0.086571174,0.11115,0.136625,0.1424,0.07939999999,0.199793979,0.177466298,0.228347766
2011-02-16 21:00:00+00:00,0.163461999,0.152542409,0.083320722,0.1678204,0.209107999,0.295229049,0.1821248,0.249697509,0.241476907,0.084562844,0.109675,0.12865000000000001,0.138,0.0785,0.192795829,0.176251013,0.223399945
2011-02-17 21:00:00+00:00,0.1685296,0.1504594,0.0824075,0.167971658,0.212758792,0.297083529,0.183973563,0.23934138,0.2461936,0.0863484,0.10772500000000002,0.125975,0.13265000000000002,0.07615,0.194219152,0.178402137,0.222106804
2011-02-18 21:00:00+00:00,0.16730609,0.155233447,0.0809377,0.176215181,0.22248869,0.293295163,0.185241672,0.236428726,0.245219977,0.085835244,0.10779999999999999,0.12422499999999999,0.1317,0.0759,0.193043151,0.179813354,0.22139306
2011-02-22 21:00:00+00:00,0.185886145,0.152863663,0.081264336,0.179445383,0.230577632,0.316276566,0.217746101,0.263403999,0.265035333,0.091117809,0.10859999999999999,0.1261,0.13535,0.07595,0.20977817,0.189323595,0.230253094
2011-02-23 21:00:00+00:00,0.19888361,0.163216571,0.082769571,0.190134254,0.240171354,0.335359072,0.220248418,0.25790047,0.263753485,0.085819242,0.1099,0.12675,0.13675,0.0759,0.21541712,0.192424249,0.232969069
2011-02-24 21:00:00+00:00,0.194693192,0.150064936,0.082233612,0.184642909,0.24118937,0.3386523,0.217146818,0.261006924,0.255738528,0.090291707,0.1168,0.12955,0.1407,0.07554999999999999,0.216231148,0.200731904,0.238106335
2011-02-25 21:00:00+00:00,0.18537468,0.156780603,0.080922838,0.176399178,0.235834119,0.339030179,0.205882974,0.235107065,0.253440777,0.085620971,0.1144,0.128825,0.138825,0.07545,0.207534483,0.192975012,0.23212102
2011-02-28 21:00:00+00:00,0.181998181,0.154042761,0.078065771,0.174804599,0.230725336,0.329524995,0.202644436,0.242876996,0.251801785,0.081728095,0.11157500000000001,0.12967499999999998,0.13785,0.0756,0.202580924,0.18693344,0.229388402
2011-03-01 21:00:00+00:00,0.193380072,0.156780755,0.084175566,0.186111272,0.238820098,0.336870173,0.212176501,0.257339755,0.259636755,0.089153644,0.110025,0.12875,0.135625,0.0764,0.20752449,0.180706444,0.223068024
2011-03-02 21:00:00+00:00,0.196342872,0.143925658,0.086206923,0.184369861,0.243064381,0.348340442,0.221621954,0.248621805,0.255637508,0.087157079,0.11109999999999999,0.130175,0.139875,0.07667500000000001,0.210991226,0.192291926,0.228670197
2011-03-03 21:00:00+00:00,0.18528391,0.164392457,0.085321309,0.18475776,0.230343809,0.346359915,0.207622654,0.250071893,0.245176742,0.085994285,0.11135,0.12885,0.13865,0.07615,0.212469219,0.190927262,0.227711674
2011-03-04 21:00:00+00:00,0.1894037,0.144133538,0.082592533,0.1863532,0.24243752,0.36612383,0.203332,0.245285672,0.245603587,0.08757238,0.11,0.12655,0.13475,0.07625,0.214624031,0.188489448,0.230415766
2011-03-07 21:00:00+00:00,0.197115381,0.157978246,0.083680673,0.184433163,0.247125636,0.370140589,0.226713418,0.262959657,0.254147579,0.089064361,0.10845,0.125125,0.13394999999999999,0.07625,0.215333079,0.196151934,0.232882593
2011-03-08 21:00:00+00:00,0.192914429,0.148102228,0.083184285,0.181242429,0.252304621,0.367395947,0.224043141,0.262389019,0.251038814,0.086968885,0.107525,0.125625,0.13369999999999999,0.0761,0.212715246,0.193624498,0.229928275
2011-03-09 21:00:00+00:00,0.200099861,0.150306277,0.080233501,0.176614909,0.247625363,0.365235695,0.224242649,0.250953153,0.251556893,0.08676339,0.106275,0.12457499999999999,0.13305,0.07615,0.212278737,0.191361725,0.231415224
2011-03-10 21:00:00+00:00,0.200866454,0.161100266,0.081401388,0.177188903,0.25280721,0.351476057,0.238335145,0.247832617,0.262087277,0.090881555,0.106525,0.12525,0.13255,0.07629999999999999,0.216493693,0.19918971,0.235480909
2011-03-11 21:00:00+00:00,0.20194616,0.146082666,0.082856666,0.179092505,0.256699978,0.3512651,0.224244003,0.251170215,0.258240933,0.091979828,0.11382500000000001,0.127775,0.1396,0.07625,0.22063724,0.211488907,0.244632826
2011-03-14 20:00:00+00:00,0.208631181,0.152735007,0.081591519,0.179290672,0.252983236,0.343939678,0.232846304,0.25173916,0.260017023,0.090785728,0.121425,0.127225,0.1419,0.076425,0.226762094,0.245425964,0.244345273
2011-03-15 20:00:00+00:00,0.212209636,0.144173339,0.08162165,0.18542291,0.248627999,0.351625563,0.247173727,0.258503785,0.27186369,0.093051834,0.14465,0.132325,0.16210000000000002,0.07805,0.236418575,0.332714731,0.261330937
2011-03-16 20:00:00+00:00,0.228198923,0.15091388,0.081957014,0.185680996,0.274449563,0.359923779,0.264888463,0.28491019,0.286166128,0.088291142,0.143425,0.13195,0.173775,0.0783,0.254045167,0.313872797,0.254241405
2011-03-17 20:00:00+00:00,0.209530727,0.172289917,0.081955298,0.184275038,0.27340456,0.371116408,0.247967658,0.260740712,0.279490904,0.084620476,0.158975,0.13567500000000002,0.19735,0.07945,0.235218307,0.330049333,0.268576112
2011-03-18 20:00:00+00:00,0.207340232,0.160129504,0.079468249,0.187367039,0.2656239,0.35706525,0.245987029,0.264916937,0.270054269,0.084433555,0.1363,0.130675,0.16940000000000002,0.0793,0.233194933,0.264381114,0.257123184
2011-03-21 20:00:00+00:00,0.195492999,0.144496,0.080484599,0.1828578,0.249305599,0.361375166,0.232355,0.244136132,0.256026999,0.0797338,0.12905,0.12837500000000002,0.162625,0.0784,0.215213713,0.264381114,0.244054325
2011-03-22 20:00:00+00:00,0.201877811,0.161162922,0.079316599,0.177678944,0.248123055,0.345734378,0.229657777,0.23567355,0.251567499,0.081872499,0.12432499999999999,0.1252,0.15945,0.0785,0.213634059,0.229545565,0.232381822
2011-03-23 20:00:00+00:00,0.191800177,0.163688572,0.0804714,0.176519244,0.244111066,0.346249666,0.219830144,0.253766985,0.250265809,0.080435999,0.122475,0.1252,0.155175,0.07835,0.211661502,0.243322003,0.232490108
2011-03-24 20:00:00+00:00,0.183027999,0.152472018,0.0838963,0.177650466,0.2370433,0.340098123,0.212388666,0.239097809,0.241374476,0.079635599,0.122275,0.1247,0.151975,0.0782,0.204166629,0.237088392,0.231115393
2011-03-25 20:00:00+00:00,0.189565666,0.159916911,0.079583999,0.173685333,0.239405922,0.336875817,0.211951066,0.237584987,0.246970575,0.078989699,0.12095,0.12235,0.1503,0.0779,0.206063818,0.237629895,0.22987939
2011-03-28 20:00:00+00:00,0.181536755,0.154348755,0.0784136,0.172934422,0.243836666,0.323900768,0.220092622,0.249307837,0.247977035,0.0807322,0.12325,0.12369999999999999,0.1506,0.07814999999,0.204034756,0.240272576,0.232887723
2011-03-29 20:00:00+00:00,0.183800733,0.146928583,0.080167999,0.172655633,0.240627533,0.319252442,0.223934,0.238150306,0.2436305,0.084077299,0.1285,0.123975,0.155875,0.078,0.205662777,0.241954581,0.231628504
2011-03-30 20:00:00+00:00,0.179933311,0.15337708,0.075832,0.169179066,0.233755655,0.320236686,0.214925055,0.242011937,0.237993837,0.0834808,0.12965,0.122925,0.15657500000000002,0.07755,0.200479952,0.227199313,0.224879793
2011-03-31 20:00:00+00:00,0.182700522,0.160128446,0.077833999,0.171739711,0.237123611,0.327415159,0.209536311,0.244767114,0.237357599,0.0806636,0.12475,0.123125,0.15465,0.07667500000000001,0.20497138,0.228277348,0.225616723
2011-04-01 20:00:00+00:00,0.182801499,0.149558897,0.0740444,0.173476,0.241056399,0.326944253,0.207223999,0.237998493,0.230411906,0.0824504,0.1242,0.12177500000000001,0.153425,0.07665,0.199244053,0.228002072,0.222082376
2011-04-04 20:00:00+00:00,0.18105701,0.147994893,0.0754783,0.168033621,0.240068698,0.324851382,0.21100551,0.23714775,0.228447084,0.078510799,0.12295,0.12140000000000001,0.1533,0.0766,0.199513432,0.220982989,0.225565253
2011-04-05 20:00:00+00:00,0.183516676,0.138878824,0.073069499,0.173167281,0.236131507,0.323325913,0.209478756,0.243185312,0.229423143,0.0811912,0.12210000000000001,0.120725,0.152925,0.0768,0.20028949,0.223425406,0.225565253
2011-04-06 20:00:00+00:00,0.176995614,0.144492354,0.073454,0.171728213,0.241166142,0.323048486,0.208643043,0.230879781,0.234869825,0.0793148,0.1225,0.12065,0.15259999999999999,0.076975,0.196156857,0.218741242,0.222964006
2011-04-07 20:00:00+00:00,0.18378981,0.14861004,0.075202,0.16911708,0.242935276,0.323305617,0.210311061,0.24414695,0.231485593,0.080352799,0.1253,0.1206,0.1518,0.07685,0.199060473,0.214108416,0.22561105
2011-04-08 20:00:00+00:00,0.182524818,0.137869261,0.0741578,0.170647727,0.245108317,0.337800949,0.201815636,0.240143243,0.240711075,0.0751354,0.126,0.12202500000000001,0.14965,0.0765,0.196516748,0.210401286,0.226762296
2011-04-11 20:00:00+00:00,0.185679552,0.134688106,0.0754695,0.17158826,0.259002119,0.326683617,0.204493178,0.24459429,0.247025921,0.0740084,0.127,0.1226,0.14952500000000002,0.0765,0.196872956,0.214293017,0.22526373
2011-04-12 20:00:00+00:00,0.188514323,0.141374366,0.0720685,0.172428896,0.257387999,0.330126913,0.21341497,0.24509995,0.2552974,0.074826499,0.1309,0.1235,0.15410000000000001,0.07685,0.205887001,0.226265325,0.227597858
2011-04-13 20:00:00+00:00,0.186534909,0.149003813,0.071754,0.170472367,0.254525571,0.331475942,0.200267209,0.24782625,0.245219787,0.0759653,0.1285,0.12327500000000001,0.15605,0.0768,0.20145955,0.21640822,0.232002898
2011-04-14 20:00:00+00:00,0.183882247,0.149713393,0.0717976,0.167292157,0.254400457,0.329336191,0.200182636,0.245794812,0.249399112,0.0735948,0.1298,0.12315,0.158325,0.07675,0.203368364,0.212791244,0.235731007
2011-04-15 20:00:00+00:00,0.183500872,0.144544121,0.069911,0.17470699,0.253060107,0.320799404,0.203277227,0.24367895,0.244872923,0.068517999,0.12685000000000002,0.122775,0.15635,0.07665,0.200645367,0.214601824,0.23459376
2011-04-18 20:00:00+00:00,0.185819439,0.1410312,0.070986843,0.177845632,0.2600818,0.317269099,0.2113705,0.254065807,0.254488625,0.077927974,0.1277,0.1253,0.16190000000000002,0.077,0.211787543,0.211830504,0.232715952
2011-04-19 20:00:00+00:00,0.183839914,0.149680618,0.070881256,0.173029138,0.243515054,0.314201681,0.202435236,0.24960105,0.248498032,0.074399981,0.12619999999999998,0.1242,0.163525,0.07735,0.206640177,0.213121076,0.23474664
2011-04-20 20:00:00+00:00,0.17877249,0.140087399,0.069623143,0.176681418,0.235960523,0.320872745,0.191314189,0.239048164,0.235947812,0.074860762,0.1259,0.12217499999999999,0.16135000000000002,0.075225,0.197002984,0.20059661,0.232257323
2011-04-21 20:00:00+00:00,0.169861145,0.141780031,0.069670512,0.174275594,0.229934,0.313231109,0.196982294,0.233347371,0.238913601,0.07350144,0.12675,0.12422499999999999,0.162175,0.07519999999999999,0.195606536,0.200029658,0.230766865
2011-04-25 20:00:00+00:00,0.173388909,0.136673062,0.067534274,0.183882121,0.24263879,0.317394536,0.194910172,0.242284829,0.242607499,0.073231187,0.1266,0.1245,0.162025,0.075575,0.195606536,0.201279971,0.230766865
2011-04-26 20:00:00+00:00,0.168285514,0.136275703,0.068211421,0.181885435,0.242521927,0.3149508,0.186371938,0.231305212,0.242229312,0.075899374,0.12380000000000001,0.125,0.16135000000000002,0.0751,0.193734399,0.204895411,0.233507829
2011-04-27 20:00:00+00:00,0.171738634,0.136335821,0.068723681,0.18329824,0.242703258,0.318735626,0.1953586,0.237140453,0.241156956,0.075180406,0.1223,0.124675,0.1589,0.075075,0.19392963,0.200665909,0.234478529
2011-04-28 20:00:00+00:00,0.172610262,0.139834562,0.066362596,0.184291756,0.242227098,0.31465205,0.196385801,0.23643755,0.242077731,0.075220639,0.12085000000000001,0.124925,0.1577,0.0751,0.190731687,0.197381138,0.234566886
2011-04-29 20:00:00+00:00,0.167763243,0.135463043,0.068578312,0.202930775,0.236298938,0.318156196,0.193593476,0.23565917,0.241104375,0.071097781,0.11935000000000001,0.1253,0.15737500000000001,0.07515,0.191645863,0.197381138,0.234326753
2011-05-02 20:00:00+00:00,0.175819418,0.139952412,0.067856687,0.203236347,0.240032836,0.316968995,0.189177981,0.2361236,0.244087273,0.078936142,0.1211,0.125475,0.158525,0.07525,0.19321929,0.192351754,0.234326753
2011-05-03 20:00:00+00:00,0.174638458,0.149852378,0.06814125,0.192811549,0.250182545,0.325046281,0.19616353,0.248087104,0.256302031,0.078187343,0.12175000000000001,0.127925,0.159525,0.07535,0.195243803,0.192351754,0.232185069
2011-05-04 20:00:00+00:00,0.176364479,0.143046798,0.066943535,0.194719796,0.2618803,0.327177419,0.197819599,0.253396221,0.264796067,0.080332325,0.1219,0.12862500000000002,0.162725,0.075475,0.204444458,0.192351754,0.232792954
2011-05-05 20:00:00+00:00,0.185004432,0.14878245,0.066993,0.200160161,0.266779818,0.349018793,0.203380909,0.243313179,0.26077805,0.078451599,0.1245,0.131525,0.167675,0.07689999999000001,0.208712152,0.192351754,0.233606188
2011-05-06 20:00:00+00:00,0.188265636,0.158085492,0.06773724,0.202427836,0.251956654,0.342144506,0.20012705,0.245227725,0.258225703,0.078183478,0.12345,0.13175,0.16592500000000002,0.07915,0.203213983,0.199242239,0.228752819
2011-05-09 20:00:00+00:00,0.176456072,0.147203209,0.068230937,0.198451458,0.255845727,0.344761744,0.193471418,0.242432865,0.249467837,0.0803606,0.12115000000000001,0.1322,0.164375,0.079025,0.211355149,0.204527132,0.22593584
2011-05-10 20:00:00+00:00,0.169159027,0.152249612,0.070851578,0.190663745,0.245750561,0.342155954,0.194299472,0.232491506,0.24408419,0.07769402,0.11925000000000001,0.1303,0.16325,0.08015,0.206498494,0.202924139,0.22593584
2011-05-11 20:00:00+00:00,0.180064043,0.149291156,0.068187525,0.190413621,0.261451421,0.351987393,0.191535098,0.237964014,0.249904543,0.078776112,0.11720000000000001,0.12845,0.162025,0.079825,0.206366511,0.200381459,0.223329882
2011-05-12 20:00:00+00:00,0.17968493,0.154061614,0.069049878,0.190647961,0.261408399,0.352514445,0.194665194,0.23503625,0.248396804,0.078371693,0.11869999999999999,0.1322,0.16542500000000002,0.08085,0.210051669,0.207045315,0.226454364
2011-05-13 20:00:00+00:00,0.188688261,0.156337125,0.068170687,0.190833173,0.253103127,0.341284045,0.200338792,0.237740781,0.254363625,0.081459625,0.11855,0.13095,0.164875,0.081125,0.212487582,0.204450035,0.224638658
2011-05-16 20:00:00+00:00,0.190373909,0.148849698,0.067612634,0.189577427,0.264043836,0.342839878,0.20719909,0.233707062,0.25749364,0.081394828,0.11715,0.13405,0.16602499999999998,0.08172499999999999,0.212428131,0.204853923,0.22395786
2011-05-17 20:00:00+00:00,0.187911316,0.149764899,0.066785712,0.185458341,0.269756263,0.335016049,0.202070109,0.234560859,0.25193,0.080000474,0.1166,0.1338,0.165175,0.08164999999999999,0.215184046,0.201024946,0.222237421
2011-05-18 20:00:00+00:00,0.178084232,0.149133854,0.066907732,0.186903338,0.248662892,0.334339426,0.202549883,0.225747849,0.245840393,0.078231507,0.1157,0.13112500000000002,0.164375,0.081475,0.210859048,0.203712634,0.218299302
2011-05-19 20:00:00+00:00,0.170993999,0.153616806,0.064816162,0.18172428,0.24689832,0.33372846,0.198967599,0.225215624,0.246078987,0.07840875,0.11635,0.12987500000000002,0.161975,0.08065,0.206816595,0.193036638,0.2163593
2011-05-20 20:00:00+00:00,0.17608555,0.150117762,0.065954062,0.181370374,0.249942501,0.33034137,0.192496025,0.221271981,0.25301674,0.076001849,0.11585000000000001,0.12869999999999998,0.159525,0.080925,0.21064892,0.185611003,0.214185849
2011-05-23 20:00:00+00:00,0.192261199,0.1456213,0.065619043,0.191623621,0.255382218,0.336246557,0.200203672,0.243440443,0.25695305,0.079722312,0.1165,0.133325,0.163125,0.082125,0.221585154,0.194537981,0.221405775
2011-05-24 20:00:00+00:00,0.174615172,0.153879475,0.067378165,0.189368317,0.251974054,0.332372839,0.205454883,0.230642,0.250018671,0.079674992,0.11625,0.13175,0.162825,0.08192500000000001,0.218109753,0.190628325,0.216648033
2011-05-25 20:00:00+00:00,0.182972281,0.144876093,0.067320281,0.188551248,0.242559767,0.327252049,0.19860813,0.229128546,0.244488949,0.07906925,0.11574999999999999,0.1344,0.16315000000000002,0.083575,0.213075822,0.195122615,0.216551705
2011-05-26 20:00:00+00:00,0.169185636,0.143194823,0.067709415,0.182219201,0.245243918,0.32245895,0.199842752,0.22917657,0.239440703,0.079301828,0.1157,0.133325,0.161825,0.08305,0.214496057,0.191301773,0.218558993
2011-05-27 20:00:00+00:00,0.17207747,0.145917025,0.06764275,0.183095105,0.241114618,0.319841024,0.19364259,0.223447497,0.235651099,0.075861499,0.1161,0.13292500000000002,0.16140000000000002,0.08365,0.21035471,0.190086451,0.216239283
2011-05-31 20:00:00+00:00,0.16232309,0.141375584,0.065454912,0.179384807,0.241359127,0.319654098,0.188948945,0.225502129,0.238167718,0.078060812,0.11425,0.12867499999999998,0.158875,0.081175,0.202936568,0.18608915,0.210330562
2011-06-01 20:00:00+00:00,0.17362471,0.149118575,0.0757947,0.180402263,0.249111883,0.324383213,0.206153125,0.23487158,0.250107193,0.08082025,0.11445,0.1268,0.157875,0.08145,0.204422054,0.184839991,0.211656513
2011-06-02 20:00:00+00:00,0.176487832,0.148081731,0.073776956,0.182173345,0.248926285,0.314856727,0.202216127,0.237603282,0.249116809,0.083818024,0.11474999999999999,0.12619999999999998,0.158175,0.0816,0.210451524,0.191689297,0.214907598
2011-06-03 20:00:00+00:00,0.184280021,0.15505315,0.074683625,0.183332498,0.254608518,0.312136622,0.206931327,0.241297848,0.247863243,0.085013049,0.1149,0.12480000000000001,0.1559,0.08175,0.209566585,0.195424428,0.219305335
2011-06-06 20:00:00+00:00,0.19353504,0.1534075,0.075357142,0.182530992,0.25373552,0.31552295,0.20042902,0.23332718,0.258335237,0.084600387,0.1152,0.12369999999999999,0.1555,0.080875,0.213744455,0.19848886,0.219305335
2011-06-07 20:00:00+00:00,0.177680436,0.162882637,0.073756996,0.177467665,0.251754763,0.323430418,0.2027628,0.230993707,0.253830468,0.081430609,0.11365,0.1211,0.1536,0.080025,0.210388843,0.192104397,0.218476453
2011-06-08 20:00:00+00:00,0.188866487,0.145936367,0.072954787,0.175580452,0.247715116,0.316136147,0.209606423,0.231279785,0.258111707,0.087312575,0.11574999999999999,0.122125,0.1574,0.0801,0.211290316,0.189763654,0.219539332
2011-06-09 20:00:00+00:00,0.184100909,0.152792499,0.0726086,0.173372186,0.237242787,0.316670727,0.205642218,0.229085002,0.250319325,0.08451425,0.1131,0.12300000000000001,0.15592499999999998,0.0802,0.205515242,0.187594479,0.22358795
2011-06-10 20:00:00+00:00,0.1860784,0.16214464,0.073943481,0.17675445,0.259186114,0.327898144,0.207944574,0.236193921,0.260147351,0.089432095,0.1115,0.122675,0.1549,0.080575,0.21281506,0.186483581,0.224156431
2011-06-13 20:00:00+00:00,0.186380454,0.148568859,0.073832265,0.173121943,0.26754329,0.32860079,0.208332261,0.24316379,0.261309309,0.091363721,0.11105000000000001,0.12560000000000002,0.15585000000000002,0.08042500000000001,0.212542515,0.187358111,0.223522911
2011-06-14 20:00:00+00:00,0.18523749,0.156728215,0.073706659,0.170951323,0.246526363,0.323084344,0.206125763,0.232027948,0.25410546,0.087649898,0.11135,0.12392500000000001,0.15505000000000002,0.080025,0.205768465,0.184577862,0.222905535
2011-06-15 20:00:00+00:00,0.202698952,0.146064724,0.078699837,0.179481157,0.271252196,0.331556062,0.2225272,0.241941614,0.262061143,0.093178906,0.1127,0.129625,0.157025,0.08055,0.214915093,0.183924673,0.224065072
2011-06-16 20:00:00+00:00,0.206319163,0.160027106,0.080224328,0.178343304,0.277694683,0.334300265,0.234339134,0.241339219,0.267038126,0.103105281,0.11525,0.1319,0.158,0.0823,0.217766231,0.196996847,0.233388834
2011-06-17 20:00:00+00:00,0.210375418,0.151094968,0.078296706,0.179856748,0.265582609,0.337406493,0.22475133,0.242059873,0.264515653,0.101260937,0.11414999999999999,0.127425,0.156225,0.08220000000000001,0.218839217,0.199790332,0.240617046
2011-06-20 20:00:00+00:00,0.195733794,0.167690779,0.079615756,0.180470161,0.257760832,0.339028793,0.222528699,0.255981975,0.259412051,0.096896882,0.1133,0.1282,0.15717499999999998,0.08245,0.22337821,0.19944766,0.238703723
2011-06-21 20:00:00+00:00,0.1930345,0.149870599,0.0805505,0.1742436,0.260026,0.33425585,0.2156785,0.244141024,0.2530704,0.0973347,0.11230000000000001,0.126975,0.156025,0.0823,0.214704119,0.194743968,0.235068898
2011-06-22 20:00:00+00:00,0.190490825,0.149042422,0.07869,0.174397937,0.24823595,0.325542934,0.2080144,0.24763977,0.260624745,0.097049799,0.1101,0.1258,0.15387499999999998,0.082175,0.212927715,0.189324571,0.230654213
2011-06-23 20:00:00+00:00,0.196117249,0.155353705,0.079699499,0.17807622,0.257541649,0.324968762,0.212400499,0.246075863,0.265007463,0.096137999,0.10894999999999999,0.12890000000000001,0.154925,0.0825,0.227034731,0.190113321,0.228802779
2011-06-24 20:00:00+00:00,0.199994562,0.150276954,0.080712,0.179561525,0.259659537,0.32299898,0.224849024,0.256334946,0.268335699,0.0991945,0.10845,0.12855,0.15375,0.08215,0.231870894,0.189925302,0.227081866
2011-06-27 20:00:00+00:00,0.1957056,0.153972872,0.084235,0.17610799,0.2655555,0.318654413,0.219604199,0.247146609,0.26746679,0.102092499,0.10835,0.13045,0.1563,0.08295,0.230020144,0.194869181,0.230835656
2011-06-28 20:00:00+00:00,0.191689337,0.144550545,0.0885874,0.174201899,0.256525,0.312270367,0.2146788,0.245514829,0.25582219,0.100429899,0.1067,0.12869999999999998,0.152725,0.08295,0.225116351,0.19397693,0.230279691
2011-06-29 20:00:00+00:00,0.1830681,0.148827363,0.0891739,0.16948679,0.256229375,0.309186345,0.20571975,0.237143914,0.258299845,0.095162999,0.10529999999999999,0.127,0.15215,0.0821,0.214180865,0.193807234,0.231124737
2011-06-30 20:00:00+00:00,0.17325885,0.1504276,0.0870155,0.16759275,0.249301062,0.307392445,0.203798375,0.235126695,0.240910545,0.088652899,0.10535,0.12342499999999999,0.15115,0.07934999999999999,0.203934503,0.188710599,0.223929489
2011-07-01 20:00:00+00:00,0.1673308,0.143219143,0.0883504,0.164669325,0.215652,0.307121729,0.1845962,0.226669707,0.285226545,0.0917697,0.1051,0.1216,0.14575,0.0793,0.20006157,0.185576279,0.223929489
2011-07-05 20:00:00+00:00,0.170879492,0.139347938,0.085252,0.165097557,0.231313581,0.297747816,0.193395714,0.233059604,0.242349872,0.0912753,0.105,0.11914999999999999,0.145475,0.079025,0.202531229,0.180504965,0.2152833
2011-07-06 20:00:00+00:00,0.169046928,0.144109272,0.0838264,0.169041808,0.237762011,0.300585188,0.189619257,0.227922687,0.234035127,0.092897199,0.1048,0.12,0.141625,0.079325,0.205799941,0.177411345,0.21688377
2011-07-07 20:00:00+00:00,0.167396942,0.144863679,0.0826536,0.166008128,0.233724828,0.302178968,0.1879812,0.231656731,0.234139399,0.092566499,0.10460000000000001,0.117625,0.141075,0.07919999999999999,0.204839584,0.181668466,0.218333973
2011-07-08 20:00:00+00:00,0.170243714,0.147941559,0.0838612,0.167525357,0.231338657,0.299118295,0.189740028,0.226360553,0.242033572,0.093750799,0.10369999999999999,0.1193,0.138275,0.0785,0.214727559,0.179298346,0.21496948
2011-07-11 20:00:00+00:00,0.185185378,0.143159072,0.082432,0.174686132,0.247312257,0.312941549,0.202846542,0.236183443,0.249609322,0.0979622,0.10487500000000001,0.125275,0.144975,0.08039999999999999,0.229909253,0.186096155,0.217125353
2011-07-12 20:00:00+00:00,0.189803714,0.14957871,0.0833427,0.178310834,0.243591777,0.308112942,0.210744342,0.24802847,0.257915018,0.1013865,0.11095000000000001,0.12915,0.15410000000000001,0.08282500000000001,0.23373527,0.197793274,0.236103242
2011-07-13 20:00:00+00:00,0.186253999,0.146365454,0.082988399,0.18424288,0.248962399,0.315393336,0.2042892,0.24234,0.247373863,0.096817899,0.11115,0.1246,0.152275,0.082475,0.224528976,0.192769258,0.229429421
2011-07-14 20:00:00+00:00,0.194188042,0.157756929,0.085593999,0.184693588,0.259567557,0.315652868,0.213031757,0.238246634,0.251665454,0.0936186,0.112125,0.124275,0.15115,0.08220000000000001,0.232106468,0.195738522,0.23225379
2011-07-15 20:00:00+00:00,0.190338035,0.158267978,0.084389799,0.187975914,0.24944372,0.32115354,0.205164964,0.239658321,0.250566781,0.0929095,0.11155,0.12279999999999999,0.152525,0.0825,0.237422007,0.193925063,0.235021544
2011-07-18 20:00:00+00:00,0.197874457,0.1578332,0.088451924,0.19378972,0.258267785,0.321250902,0.2131896,0.242232121,0.250453909,0.090416016,0.11205,0.1264,0.156,0.08255000000000001,0.248307903,0.193925063,0.234171672
2011-07-19 20:00:00+00:00,0.184757507,0.150934361,0.085526052,0.183606997,0.245334,0.319804817,0.199521821,0.247071963,0.244552854,0.091333245,0.1103,0.12545,0.154575,0.08265,0.23772168,0.195162384,0.231607679
2011-07-20 20:00:00+00:00,0.185250999,0.15997429,0.086304498,0.185819862,0.246254697,0.318985512,0.205986857,0.241411839,0.241046536,0.08958756,0.10935,0.12525,0.1531,0.0832,0.227633159,0.188712968,0.226265649
2011-07-21 20:00:00+00:00,0.178749549,0.166461873,0.087648573,0.180622922,0.236573828,0.314156682,0.201951549,0.229145458,0.235164472,0.083532131,0.11055,0.11835000000000001,0.154375,0.08315,0.216769506,0.188787262,0.227657012
2011-07-22 20:00:00+00:00,0.176688999,0.1598618,0.08423377,0.1800772,0.23410156,0.3133224,0.195133999,0.232619199,0.232752799,0.081624268,0.11035,0.111825,0.151525,0.0803,0.212576181,0.186086986,0.221761185
2011-07-25 20:00:00+00:00,0.18156601,0.142160769,0.086812708,0.185073389,0.239744512,0.3178316,0.202929107,0.22963255,0.237221046,0.082861377,0.11164999999999999,0.111825,0.150425,0.08085,0.218604172,0.18649607,0.223381816
2011-07-26 20:00:00+00:00,0.188457797,0.169651366,0.083418783,0.183375366,0.240456199,0.316076123,0.202222615,0.238969139,0.239523323,0.084459006,0.1133,0.110925,0.150875,0.08074999999999999,0.219287163,0.184505104,0.222016583
2011-07-27 20:00:00+00:00,0.196730769,0.172199446,0.087573473,0.186242569,0.253165232,0.324083738,0.226859492,0.23494309,0.246693992,0.088364222,0.1155,0.11125,0.149075,0.080775,0.227004464,0.187484493,0.227215285
2011-07-28 20:00:00+00:00,0.201372143,0.173452143,0.087951957,0.184639425,0.257381912,0.327135405,0.221506917,0.23938112,0.254947464,0.08775857,0.116675,0.11227499999999999,0.14845,0.08105000000000001,0.228532071,0.19120453,0.230737937
2011-07-29 20:00:00+00:00,0.189038158,0.16050834,0.086546327,0.189091851,0.259498251,0.326952723,0.214990769,0.240425,0.262636976,0.087150237,0.1207,0.11442500000000001,0.151725,0.08137499999999999,0.229026286,0.195429972,0.234124061
2011-08-01 20:00:00+00:00,0.189114507,0.156713476,0.088920937,0.187362769,0.256355424,0.332149538,0.2103524,0.23066786,0.255304876,0.088796672,0.1162,0.1155,0.151,0.0814,0.239026608,0.18973089,0.22438127
2011-08-02 20:00:00+00:00,0.207629148,0.166441261,0.083559626,0.194540758,0.261186224,0.333414871,0.232028802,0.24209395,0.258724723,0.09447097,0.115,0.116775,0.15435000000000001,0.08255000000000001,0.245564537,0.192362304,0.228728453
2011-08-03 20:00:00+00:00,0.211779971,0.162766892,0.085603678,0.195013035,0.261266292,0.328901969,0.217261374,0.2559997,0.25880941,0.095665736,0.114525,0.118325,0.15975,0.08255000000000001,0.251601326,0.197892651,0.237995356
2011-08-04 20:00:00+00:00,0.242478999,0.185139476,0.088216557,0.205164338,0.30130853,0.357798253,0.259820092,0.26864718,0.290648076,0.118934188,0.11109999999999999,0.12315,0.15685000000000002,0.08315,0.267303479,0.19760958,0.238339609
2011-08-05 20:00:00+00:00,0.255473364,0.194896646,0.096263372,0.207342371,0.324718156,0.359727974,0.271961905,0.3115398,0.315041997,0.124528363,0.11275,0.1263,0.1611,0.083325,0.278489919,0.217303538,0.273665748
2011-08-08 20:00:00+00:00,0.311687769,0.216813897,0.10214857,0.239802666,0.379565525,0.412985305,0.314432569,0.35782643,0.404430215,0.162646104,0.1195,0.13297499999999998,0.17535,0.08810000000000001,0.30452479,0.228356022,0.294091524
2011-08-09 20:00:00+00:00,0.257023323,0.200201253,0.095807147,0.255956453,0.34597923,0.434577107,0.278430215,0.314792639,0.390319369,0.153482868,0.13140000000000002,0.144075,0.201,0.08945,0.310219517,0.252952409,0.349916504
2011-08-10 20:00:00+00:00,0.293860733,0.232963133,0.095082598,0.2662944,0.362490466,0.438910666,0.314342333,0.35702188,0.356821,0.176009918,0.12935,0.13720000000000002,0.20415,0.09295,0.318766832,0.234731708,0.340088706
2011-08-11 20:00:00+00:00,0.271590169,0.207203015,0.101513147,0.250758589,0.343506723,0.405663153,0.296549769,0.29394598,0.3638803,0.16346974,0.12965,0.14055,0.215,0.09255000000000001,0.310851167,0.239205351,0.333373489
2011-08-12 20:00:00+00:00,0.263667815,0.20090413,0.09942916,0.2351369,0.33412457,0.392614246,0.277151846,0.311236525,0.325527346,0.164293652,0.12725,0.135925,0.20420000000000002,0.09207499999999999,0.297097226,0.234624089,0.314382486
2011-08-15 20:00:00+00:00,0.242812702,0.199329487,0.094784531,0.231998102,0.319754756,0.372777866,0.265893333,0.27895728,0.30842082,0.149248921,0.12054999999999999,0.129225,0.192225,0.09267500000000001,0.284883104,0.21840901,0.290855702
2011-08-16 20:00:00+00:00,0.248069871,0.205501594,0.093763922,0.243789292,0.324227953,0.373525025,0.263593948,0.297132199,0.300725374,0.15116855,0.11835000000000001,0.127275,0.18317499999999998,0.094775,0.28425964,0.214762319,0.280215662
2011-08-17 20:00:00+00:00,0.240393376,0.210394015,0.090638426,0.239336338,0.312935369,0.37624683,0.261479369,0.28819672,0.297390961,0.14086848,0.11869999999999999,0.1268,0.180225,0.094025,0.271973885,0.212957785,0.272687737
2011-08-18 20:00:00+00:00,0.281532533,0.217643169,0.09285854,0.253979128,0.356476194,0.427801856,0.299481435,0.2966366,0.339013323,0.153956431,0.11960000000000001,0.1282,0.187025,0.09355000000000001,0.307618664,0.218513407,0.279190812
2011-08-19 20:00:00+00:00,0.291646687,0.218003384,0.092976218,0.265408512,0.367816153,0.42587001,0.314111356,0.3315624,0.351548943,0.158637285,0.12175000000000001,0.132025,0.192525,0.093575,0.319517716,0.246169657,0.313525768
2011-08-22 20:00:00+00:00,0.292776999,0.198101046,0.094952857,0.27930153,0.3740245,0.420259415,0.311977492,0.320912694,0.353977384,0.16091815,0.119925,0.13205,0.19017499999999998,0.093525,0.319056907,0.241280708,0.31256859
2011-08-23 20:00:00+00:00,0.273071497,0.208922441,0.095082475,0.277000192,0.350349553,0.411897538,0.288840953,0.293673666,0.340772758,0.147872344,0.11825,0.130375,0.18535000000000001,0.092125,0.317486236,0.22819124,0.285143187
2011-08-24 20:00:00+00:00,0.280227928,0.210826338,0.098549042,0.274729538,0.344624269,0.411410789,0.282012917,0.319144033,0.343800912,0.150008947,0.1176,0.1306,0.185525,0.091675,0.30639866,0.23562561,0.301262674
2011-08-25 20:00:00+00:00,0.285255784,0.212896146,0.092932714,0.281521969,0.362801692,0.414794892,0.297621638,0.32660066,0.35555043,0.157177459,0.118475,0.132225,0.1867,0.0911,0.31695853,0.232752244,0.297202308
2011-08-26 20:00:00+00:00,0.26259443,0.205352092,0.094351672,0.274684476,0.342282043,0.411482576,0.284435512,0.322461999,0.341494523,0.149396236,0.11795,0.131625,0.18295000000000003,0.0904,0.315004743,0.238847507,0.304438669
2011-08-29 20:00:00+00:00,0.257212266,0.181823966,0.092673377,0.269905333,0.326176666,0.393148133,0.266531666,0.305545019,0.31694,0.142132868,0.11535000000000001,0.12885,0.176025,0.09005,0.294391694,0.226753821,0.286073446
2011-08-30 20:00:00+00:00,0.254430738,0.190679484,0.093933265,0.273019384,0.342166484,0.40321,0.256975723,0.303792648,0.312402438,0.138902901,0.1148,0.128025,0.172575,0.088225,0.289127535,0.219107763,0.274708011
2011-08-31 20:00:00+00:00,0.255276841,0.213432799,0.090568927,0.266144492,0.32588121,0.395914279,0.274844456,0.283682495,0.30659141,0.135342314,0.1144,0.1266,0.1703,0.0886,0.272411797,0.211873461,0.268599567
2011-09-01 20:00:00+00:00,0.252443651,0.178849548,0.090240983,0.258111979,0.323435974,0.38870772,0.271914912,0.282964645,0.313669589,0.135325981,0.11449999999999999,0.12564999999999998,0.169825,0.089725,0.276573452,0.212506615,0.273470856
2011-09-02 20:00:00+00:00,0.263434615,0.212297038,0.089531872,0.271635138,0.350623953,0.409447046,0.2882876,0.289449356,0.386266276,0.141293934,0.1139,0.127725,0.16967500000000002,0.09005,0.296525872,0.217571607,0.285485403
2011-09-06 20:00:00+00:00,0.274650033,0.210336287,0.090191081,0.282779461,0.36317693,0.414654212,0.293909851,0.300304058,0.349103684,0.144898031,0.1148,0.1374,0.17925000000000002,0.10395,0.335477819,0.243616827,0.302888108
2011-09-07 20:00:00+00:00,0.263719653,0.208245466,0.087078068,0.281668369,0.338348769,0.400493471,0.278299384,0.305808739,0.324659051,0.146992462,0.11289999999999999,0.136525,0.17305,0.1213,0.311086228,0.233138131,0.293563435
2011-09-08 20:00:00+00:00,0.272920646,0.207553146,0.087491665,0.2880217,0.352441438,0.41263423,0.28640213,0.319099591,0.340442407,0.145926236,0.11275,0.13449999999999998,0.165725,0.11537499999999999,0.307103847,0.229024336,0.291721239
2011-09-09 20:00:00+00:00,0.296156297,0.20829512,0.086883262,0.300374256,0.372312951,0.422230794,0.309935764,0.354354326,0.370482297,0.150107377,0.1149,0.14225,0.17322500000000002,0.11977499999999999,0.338999631,0.23272511,0.291938017
2011-09-12 20:00:00+00:00,0.296892333,0.202931728,0.09187918,0.298740076,0.379842499,0.423007133,0.305610758,0.355543693,0.369280574,0.157491718,0.11805,0.146125,0.18539999999999998,0.12185,0.364619729,0.254306864,0.323112983
2011-09-13 20:00:00+00:00,0.290183384,0.219054315,0.089410078,0.285113876,0.375687384,0.408754846,0.302898846,0.347988507,0.367977499,0.154020896,0.11725,0.14800000000000002,0.18234999999999998,0.120975,0.348133778,0.243509022,0.323112983
2011-09-14 20:00:00+00:00,0.287131274,0.224674974,0.086470057,0.27744733,0.36793791,0.413129066,0.300689353,0.35106935,0.366297897,0.149755888,0.11789999999999999,0.149725,0.18862500000000001,0.12359999999999999,0.341412226,0.243407202,0.322398982
2011-09-15 20:00:00+00:00,0.276312553,0.209335325,0.09037034,0.272470307,0.351373974,0.40552082,0.293848964,0.319323853,0.358239184,0.139476842,0.11564999999999999,0.146125,0.18307500000000002,0.117925,0.323360463,0.233754152,0.314598551
2011-09-16 20:00:00+00:00,0.2711116,0.215788,0.0913932,0.2727546,0.3508402,0.4114172,0.281854699,0.318691173,0.3393852,0.1334704,0.11335,0.14745,0.177175,0.11745,0.328587578,0.226524673,0.303710759
2011-09-19 20:00:00+00:00,0.280405644,0.205325142,0.089954399,0.277870866,0.362538277,0.41845517,0.282351166,0.331030263,0.358563638,0.135192799,0.11595000000000001,0.15955,0.18517499999999998,0.1173,0.343791179,0.226524673,0.325596835
2011-09-20 20:00:00+00:00,0.281853211,0.192650857,0.0879006,0.277753511,0.357319133,0.415014233,0.287950577,0.332830466,0.36168525,0.130280999,0.11645,0.17329999999999998,0.18935,0.115525,0.332824584,0.232545224,0.323715327
2011-09-21 20:00:00+00:00,0.298704566,0.200242114,0.088008999,0.2726734,0.369458233,0.425059449,0.302605666,0.359780017,0.383145676,0.136732999,0.117875,0.17535,0.190475,0.11352499999999999,0.340052737,0.228622932,0.323237513
2011-09-22 20:00:00+00:00,0.315522666,0.22825329,0.083870199,0.288765822,0.416318044,0.459955033,0.324960733,0.410586469,0.445926777,0.155675799,0.125025,0.20697500000000002,0.21100000000000002,0.12052500000000001,0.366363709,0.238895024,0.348908752
2011-09-23 20:00:00+00:00,0.315663888,0.250552158,0.0885318,0.315872,0.418924099,0.462135441,0.335385277,0.395495923,0.438457282,0.1566724,0.12515,0.195,0.21350000000000002,0.120675,0.362169074,0.238895024,0.370207114
2011-09-26 20:00:00+00:00,0.30868,0.224507977,0.088371599,0.325200266,0.417192266,0.457907975,0.318648999,0.391436233,0.430396561,0.1558125,0.1249,0.196425,0.21712499999999998,0.12365,0.357021157,0.256582415,0.387400749
2011-09-27 20:00:00+00:00,0.300798888,0.2440701,0.089818,0.311763311,0.393270888,0.43670317,0.318796666,0.387465993,0.4089258,0.1558196,0.1202,0.182225,0.20420000000000002,0.11975,0.333011498,0.242186523,0.354030187
2011-09-28 20:00:00+00:00,0.319287888,0.243841846,0.091969099,0.3206648,0.409488033,0.455446666,0.329182155,0.409009957,0.426812373,0.1610771,0.11845,0.18164999999999998,0.20565,0.11935000000000001,0.341649901,0.248931579,0.356336438
2011-09-29 20:00:00+00:00,0.3107595,0.219171428,0.089975,0.317791,0.4076328,0.441798725,0.328754799,0.418302333,0.407486785,0.161505999,0.11845,0.18257500000000002,0.209725,0.119275,0.335041548,0.250703201,0.356336438
2011-09-30 20:00:00+00:00,0.338180925,0.219475333,0.088304099,0.323192103,0.422029888,0.47031195,0.352657372,0.462902766,0.449352325,0.1725202,0.11685000000000001,0.17989999999999998,0.209,0.11914999999999999,0.345541901,0.251986353,0.378059645
2011-10-03 20:00:00+00:00,0.333916703,0.222042181,0.090355,0.319892281,0.443536063,0.479652958,0.382052777,0.488737619,0.470217276,0.183991,0.11765,0.1859,0.215525,0.11964999999999999,0.360260989,0.267683134,0.41238392
2011-10-04 20:00:00+00:00,0.333891811,0.240376761,0.095135999,0.327180466,0.404108742,0.482044799,0.362455294,0.489514806,0.460820304,0.212205,0.1182,0.18960000000000002,0.21864999999999998,0.119525,0.375728941,0.284617904,0.426540063
2011-10-05 20:00:00+00:00,0.318193155,0.240893112,0.0953816,0.333796274,0.412621631,0.466752216,0.335543533,0.466050793,0.411802873,0.201902399,0.115875,0.18405000000000002,0.212875,0.1201,0.356592347,0.285527774,0.426540063
2011-10-06 20:00:00+00:00,0.309906522,0.241941866,0.0985805,0.326862078,0.404713869,0.45040455,0.329575574,0.422690419,0.379714444,0.198023299,0.1131,0.17275,0.20575,0.11955,0.341765277,0.270347791,0.398804058
2011-10-07 20:00:00+00:00,0.314772477,0.238687523,0.0976496,0.324776955,0.441915809,0.4503149,0.332642144,0.413305257,0.403609866,0.2064762,0.1101,0.162575,0.19925,0.11814999999999999,0.334867892,0.26349246,0.384965439
2011-10-10 20:00:00+00:00,0.292324948,0.226860922,0.0989696,0.311318322,0.385718466,0.432500666,0.303734225,0.401583544,0.393893298,0.191348699,0.108525,0.1533,0.19417500000000001,0.11414999999999999,0.315680179,0.26349246,0.380148114
2011-10-11 20:00:00+00:00,0.286075222,0.229200926,0.096203599,0.306486622,0.377018093,0.437172325,0.310694103,0.383373714,0.375455587,0.195166399,0.10825,0.152075,0.1949,0.113375,0.318161513,0.25248384,0.359903446
2011-10-12 20:00:00+00:00,0.267582083,0.220471428,0.0875469,0.293246466,0.3707371,0.421788099,0.293229333,0.365662742,0.365841485,0.191132,0.108575,0.14515,0.192175,0.11085,0.303432924,0.247816827,0.33878464
2011-10-13 20:00:00+00:00,0.273429751,0.217040992,0.0843692,0.286895214,0.37338285,0.426103916,0.291628474,0.344737487,0.360623765,0.1851866,0.1074,0.14515,0.19325,0.108675,0.314926928,0.238795539,0.323215014
2011-10-14 20:00:00+00:00,0.258221707,0.206817904,0.0808854,0.271525318,0.356493492,0.409700933,0.281608844,0.356704804,0.348304431,0.176242999,0.107,0.141575,0.19295,0.1043,0.299117901,0.243013622,0.327172575
2011-10-17 20:00:00+00:00,0.282073322,0.211746799,0.0788012,0.277638488,0.366895028,0.428191137,0.2959244,0.371855712,0.373418333,0.180073199,0.10800000000000001,0.141325,0.19355,0.102775,0.30349344,0.232243037,0.313383732
2011-10-18 20:00:00+00:00,0.267638914,0.228582031,0.0784115,0.280798991,0.350127119,0.427921625,0.279371129,0.349732863,0.425534647,0.179103999,0.109775,0.1444,0.1966,0.10195,0.309825247,0.242043304,0.341093401
2011-10-19 20:00:00+00:00,0.285178125,0.230899549,0.080901199,0.28212334,0.360641333,0.431029416,0.291274737,0.356586533,0.368669193,0.1746052,0.10885,0.14105,0.1972,0.10074999999999999,0.307539342,0.234222242,0.332528857
2011-10-20 20:00:00+00:00,0.279927933,0.224767714,0.0777094,0.291053199,0.370907071,0.4264905,0.298541099,0.38246225,0.374891742,0.161529799,0.109675,0.14495,0.20295000000000002,0.1,0.330311671,0.242841085,0.350954383
2011-10-21 20:00:00+00:00,0.263972555,0.228157441,0.0765384,0.281101614,0.353191849,0.425932,0.289963333,0.364062571,0.377163301,0.149614399,0.11130000000000001,0.14915,0.20295000000000002,0.09974999999999999,0.311654494,0.244044575,0.353367973
2011-10-24 20:00:00+00:00,0.256990407,0.222278679,0.076908679,0.267418152,0.348376751,0.410096612,0.270491264,0.340923542,0.342653088,0.144395523,0.1119,0.148175,0.200625,0.095625,0.297845189,0.230943237,0.328256961
2011-10-25 20:00:00+00:00,0.275201166,0.229596285,0.078017285,0.281201573,0.35229,0.410741904,0.286858199,0.363071234,0.380231285,0.154375285,0.11435000000000001,0.143425,0.19677499999999998,0.096175,0.294686071,0.229418942,0.323281361
2011-10-26 20:00:00+00:00,0.260811259,0.225665177,0.0782654,0.287635888,0.334196274,0.423606714,0.280904955,0.339417614,0.345302988,0.158646311,0.1161,0.14385,0.19820000000000002,0.095875,0.294207042,0.226720449,0.317166341
2011-10-27 20:00:00+00:00,0.229949485,0.216966412,0.076417142,0.274610722,0.304842481,0.396317465,0.24543974,0.309465728,0.30779212,0.140646739,0.11375,0.139,0.18625,0.08952500000000001,0.255793002,0.21057251,0.301955632
2011-10-28 20:00:00+00:00,0.228181222,0.210938095,0.073575276,0.2682063,0.302612711,0.386142604,0.238655422,0.327155766,0.304695523,0.144005276,0.1114,0.135275,0.18195,0.08612500000000001,0.261403983,0.199805116,0.301905497
2011-10-31 20:00:00+00:00,0.250977962,0.209611669,0.070763999,0.272314525,0.324985266,0.380962599,0.247996611,0.319682987,0.33294112,0.148360311,0.10529999999999999,0.136325,0.17434999999999998,0.084725,0.279693948,0.203451342,0.304200011
2011-11-01 20:00:00+00:00,0.284418148,0.23413719,0.073367585,0.280749909,0.367847903,0.408747142,0.285340548,0.362082904,0.371103479,0.161168144,0.109975,0.146325,0.1898,0.0889,0.31715178,0.217237537,0.320669389
2011-11-02 20:00:00+00:00,0.262868588,0.209491104,0.073110766,0.286342311,0.3394353,0.394352471,0.273034666,0.340869504,0.341273909,0.158199523,0.10695,0.147,0.19165,0.088125,0.309887555,0.228471744,0.318245436
2011-11-03 20:00:00+00:00,0.26354537,0.227299301,0.072887023,0.285508538,0.338325755,0.39826692,0.278239037,0.323672733,0.34524298,0.154202012,0.107625,0.151275,0.19365,0.08777499999999999,0.29941113,0.228471744,0.328516011
2011-11-04 20:00:00+00:00,0.261009644,0.223695155,0.071473244,0.280664888,0.34002437,0.392208625,0.265543703,0.356187428,0.365436911,0.150768555,0.10615000000000001,0.146925,0.18725000000000003,0.087625,0.311790803,0.216576189,0.317438759
2011-11-07 21:00:00+00:00,0.262353199,0.228297057,0.075622342,0.2865902,0.333805499,0.397021285,0.273549799,0.328545163,0.345501657,0.152981085,0.105375,0.14625,0.18805,0.0866,0.315279809,0.219140858,0.319304683
2011-11-08 21:00:00+00:00,0.243295955,0.211137714,0.074463757,0.286646059,0.318249629,0.391464022,0.252913896,0.351957833,0.340645485,0.148287892,0.10515000000000001,0.14515,0.18695,0.0861,0.306479881,0.220736407,0.315110307
2011-11-09 21:00:00+00:00,0.293517622,0.236789752,0.077951885,0.291911774,0.363996866,0.400631111,0.28820549,0.387673619,0.378659133,0.159279841,0.108975,0.131325,0.19274999999999998,0.08747500000000001,0.322278519,0.216605969,0.301487771
2011-11-10 21:00:00+00:00,0.279089155,0.231233466,0.07705859,0.291542111,0.341645333,0.400251428,0.280496266,0.391707517,0.364869319,0.155599066,0.108975,0.14255,0.19344999999999998,0.08897500000000001,0.32462645,0.23221027,0.330046142
2011-11-11 21:00:00+00:00,0.261590118,0.224609253,0.077602676,0.286646933,0.347849066,0.404094625,0.267580203,0.373913238,0.355479092,0.147051187,0.10855000000000001,0.139575,0.18945,0.08837500000000001,0.30427207,0.228437089,0.323293872
2011-11-14 21:00:00+00:00,0.272576059,0.230051584,0.078389211,0.285287481,0.354027818,0.394627209,0.282113255,0.358958476,0.367180123,0.146275158,0.10825,0.1379,0.1858,0.08994999999999999,0.31178752,0.221540564,0.311137659
2011-11-15 21:00:00+00:00,0.280145888,0.232474166,0.082156533,0.283951511,0.358155638,0.395250028,0.288425244,0.382195436,0.367719866,0.1471512,0.1081,0.1386,0.187425,0.09105,0.317989595,0.225086737,0.316561258
2011-11-16 21:00:00+00:00,0.29660437,0.22895599,0.08142098,0.283732872,0.365823333,0.389815768,0.300717388,0.383386828,0.388225739,0.152060253,0.1075,0.140425,0.18789999999999998,0.09082499999999999,0.309634869,0.227517384,0.331502115
2011-11-17 21:00:00+00:00,0.296469412,0.23413249,0.079208487,0.287311325,0.368821955,0.403931557,0.29603064,0.3874892,0.398260761,0.148218603,0.1073,0.140175,0.191325,0.09140000000000001,0.316800443,0.226444892,0.334753959
2011-11-18 21:00:00+00:00,0.284182533,0.234065971,0.078842357,0.284435013,0.376143999,0.392861933,0.305227333,0.381321032,0.392111371,0.1464357,0.10677500000000001,0.13974999999999999,0.188275,0.091025,0.322605826,0.231491684,0.347927119
2011-11-21 21:00:00+00:00,0.298266581,0.243515753,0.077473625,0.293196444,0.368584199,0.405753673,0.313765855,0.388722189,0.410270539,0.14662718,0.106025,0.14,0.19177499999999997,0.09205,0.341749817,0.232464323,0.355440464
2011-11-22 21:00:00+00:00,0.305802555,0.233731204,0.076678793,0.282595588,0.379981407,0.397992876,0.301043051,0.38502015,0.39867652,0.155258007,0.106625,0.142575,0.19195,0.09225,0.338546092,0.231535319,0.350465101
2011-11-23 21:00:00+00:00,0.309672888,0.226792628,0.077738519,0.283073955,0.394084344,0.423515466,0.318013066,0.405457615,0.416196666,0.164127619,0.10705,0.1432,0.194525,0.09230000000000001,0.349211636,0.231535319,0.36061145
2011-11-25 18:00:00+00:00,0.31652414,0.218990222,0.077694044,0.284519185,0.377908062,0.427269822,0.308506281,0.407456935,0.425387333,0.166595833,0.11155,0.1456,0.19445,0.0916,0.345946068,0.239202418,0.358032181
2011-11-28 21:00:00+00:00,0.291052164,0.216759161,0.078210609,0.278618109,0.384678259,0.401289253,0.29649974,0.394035191,0.398653206,0.157827492,0.1109,0.144075,0.19190000000000002,0.0915,0.324216985,0.231606434,0.343005853
2011-11-29 21:00:00+00:00,0.298729888,0.216874404,0.08033888,0.275212897,0.372627822,0.405397928,0.306191733,0.359879398,0.397420638,0.156303952,0.11157500000000001,0.142975,0.19067499999999998,0.09195,0.322097038,0.221685001,0.329156203
2011-11-30 21:00:00+00:00,0.257715822,0.205702717,0.076096034,0.27826068,0.339661131,0.383028333,0.285406188,0.324125355,0.365884041,0.14304346,0.1118,0.14035,0.1882,0.09065,0.305675291,0.221177965,0.335070695
2011-12-01 21:00:00+00:00,0.255091559,0.195196031,0.076326698,0.270304425,0.346761129,0.383005904,0.269715296,0.339433701,0.365516573,0.147682769,0.11065,0.138375,0.1861,0.090675,0.306072976,0.21679152,0.315639361
2011-12-02 21:00:00+00:00,0.2574964,0.200556399,0.074819285,0.261039513,0.3460566,0.395481985,0.274999666,0.338560598,0.363856057,0.142098057,0.109,0.136275,0.18184999999999998,0.09035,0.300255942,0.214719571,0.315203145
2011-12-05 21:00:00+00:00,0.269883696,0.21061546,0.06904506,0.266614945,0.345409959,0.39138643,0.279966562,0.358880708,0.353115263,0.140055449,0.10785,0.1346,0.1801,0.08960000000000001,0.294202771,0.209485098,0.314818817
2011-12-06 21:00:00+00:00,0.271136033,0.208377222,0.071091444,0.262830238,0.345003962,0.355272857,0.285072118,0.347072239,0.358791611,0.138387111,0.106,0.134975,0.1801,0.08985,0.299211582,0.221875879,0.318638354
2011-12-07 21:00:00+00:00,0.264943911,0.2005422,0.067602099,0.266156355,0.342425777,0.359262323,0.285643555,0.359534771,0.356532299,0.140780133,0.10490000000000001,0.134925,0.176725,0.088875,0.302903703,0.218557289,0.313272514
2011-12-08 21:00:00+00:00,0.271115194,0.219376812,0.073224674,0.2630601,0.353113942,0.367925212,0.293307407,0.372885365,0.373808034,0.145274047,0.1067,0.136625,0.17679999999999998,0.08752499999999999,0.313210425,0.221705201,0.319805622
2011-12-09 21:00:00+00:00,0.264202185,0.200286809,0.072378568,0.256060903,0.33721,0.365653333,0.278372792,0.340416634,0.359112207,0.13870719,0.10685,0.13615,0.17825,0.0876,0.302243692,0.228389099,0.33764814
2011-12-12 21:00:00+00:00,0.272616816,0.224572909,0.074070838,0.256138818,0.345457416,0.361862514,0.274557344,0.384414422,0.376015309,0.138234076,0.1052,0.135575,0.1788,0.08800000000000001,0.308979982,0.214379315,0.326464159
2011-12-13 21:00:00+00:00,0.27434774,0.223182068,0.072469542,0.261611074,0.33355,0.360972347,0.267499288,0.368594856,0.366397174,0.139567888,0.10487500000000001,0.1387,0.17955,0.08785,0.303914173,0.216798803,0.323500465
2011-12-14 21:00:00+00:00,0.265409274,0.213081453,0.071236984,0.270357937,0.343883333,0.380533438,0.270990487,0.357611112,0.383808412,0.137636746,0.1045,0.140825,0.18275,0.088225,0.311678351,0.214409877,0.323354239
2011-12-15 21:00:00+00:00,0.2707348,0.1909316,0.071485399,0.270496199,0.3424226,0.402133999,0.269450599,0.333701622,0.36359,0.137459399,0.1032,0.141075,0.17859999999999998,0.088225,0.304734204,0.216788063,0.325364537
2011-12-16 21:00:00+00:00,0.264041266,0.214061976,0.070439799,0.262786266,0.359990711,0.394300401,0.264285311,0.346950203,0.355973441,0.1297919,0.09985,0.1356,0.16915,0.0862,0.30534487,0.214920614,0.315940061
2011-12-19 21:00:00+00:00,0.266600866,0.197976617,0.0687272,0.251371666,0.336178355,0.396575619,0.271779066,0.355603633,0.367417735,0.1257016,0.1003,0.138925,0.16765,0.08635,0.299449921,0.219045768,0.321283543
2011-12-20 21:00:00+00:00,0.244542299,0.199209564,0.067275,0.2431138,0.318356533,0.373734266,0.242159533,0.349623314,0.347596482,0.116093999,0.09995,0.13655,0.16505,0.08625,0.281144424,0.215693986,0.317409164
2011-12-21 21:00:00+00:00,0.241057044,0.207807352,0.0675275,0.243547111,0.310602811,0.376801968,0.259315944,0.324217085,0.338152376,0.114938999,0.09949999999999999,0.135275,0.16545,0.085175,0.280724092,0.209369908,0.308236041
2011-12-22 21:00:00+00:00,0.235366833,0.199652911,0.0659956,0.237678266,0.307893333,0.368104571,0.245927333,0.333103166,0.335175535,0.113439599,0.10039999999999999,0.13475,0.16635000000000003,0.08545,0.27184085,0.208887991,0.303799204
2011-12-23 21:00:00+00:00,0.232873566,0.207060505,0.068046599,0.232443166,0.296471566,0.358644628,0.250418533,0.328937399,0.332617076,0.111670999,0.1007,0.1349,0.1666,0.08564999999999999,0.270805116,0.208887991,0.299464756
2011-12-27 21:00:00+00:00,0.231689055,0.196765801,0.06799,0.229391766,0.290041155,0.366524628,0.247823199,0.334900003,0.342192423,0.1138589,0.10105,0.13455,0.1659,0.08515,0.270476829,0.20407886,0.299464756
2011-12-28 21:00:00+00:00,0.240033022,0.201300329,0.070432599,0.246534633,0.308503833,0.364748038,0.246116099,0.332855871,0.34193407,0.1163355,0.10095000000000001,0.13547499999999998,0.166,0.085525,0.280076624,0.203944908,0.298616735
2011-12-29 21:00:00+00:00,0.234640799,0.195650932,0.069730399,0.243699199,0.309493299,0.361003347,0.238746599,0.315871388,0.329258291,0.113679,0.1025,0.1366,0.16765,0.086675,0.274578393,0.202894706,0.297879025
2011-12-30 21:00:00+00:00,0.238894491,0.205039852,0.067479999,0.242501571,0.311559388,0.375194722,0.241880616,0.320091122,0.330667,0.115374499,0.10285,0.1366,0.16774999999999998,0.086325,0.272595438,0.205900677,0.299387364
2012-01-03 21:00:00+00:00,0.230272542,0.202178858,0.065936199,0.242826352,0.299917269,0.350373485,0.239506254,0.301052038,0.327074441,0.1092112,0.1025,0.13324999999999998,0.16537500000000002,0.0861,0.26931425,0.205900677,0.291727655
2012-01-04 21:00:00+00:00,0.223768288,0.20447947,0.066445199,0.238568342,0.287648819,0.340305752,0.233051359,0.321345095,0.319267929,0.1096548,0.09970000000000001,0.131375,0.162525,0.084675,0.275396425,0.199156412,0.295320474
2012-01-05 21:00:00+00:00,0.223719206,0.191861764,0.069232,0.243043481,0.278373304,0.35951568,0.228257589,0.298870826,0.312487804,0.112726199,0.10055,0.13019999999999998,0.16149999999999998,0.084875,0.280069767,0.200159932,0.288741088
2012-01-06 21:00:00+00:00,0.21777013,0.189940132,0.0633732,0.238785152,0.289698355,0.355653663,0.224118823,0.321302147,0.320759673,0.113302999,0.0983,0.133225,0.1576,0.08315,0.27414087,0.203214297,0.292598977
2012-01-09 21:00:00+00:00,0.216994298,0.191461,0.064559399,0.232009576,0.279424809,0.359051371,0.225141362,0.286409619,0.308061975,0.1036922,0.0949,0.12855,0.1532,0.0827,0.272112152,0.203214297,0.283909644
2012-01-10 21:00:00+00:00,0.213228042,0.194717647,0.0627288,0.2295388,0.279717811,0.34627938,0.225769328,0.287237133,0.300031247,0.1028278,0.091,0.126,0.14679999999999999,0.08215,0.258653123,0.198814818,0.277759011
2012-01-11 21:00:00+00:00,0.214119898,0.18650975,0.061736399,0.232136511,0.285798968,0.333097555,0.22485385,0.289358114,0.301397275,0.1077376,0.0909,0.125075,0.149725,0.08134999999999999,0.257864972,0.193702902,0.274334011
2012-01-12 21:00:00+00:00,0.212804486,0.18840845,0.064049,0.230084722,0.282137471,0.364586609,0.220240706,0.28001179,0.304627808,0.106373599,0.09265000000000001,0.1232,0.149125,0.078675,0.257187546,0.194728038,0.270577369
2012-01-13 21:00:00+00:00,0.222951661,0.186752264,0.065144599,0.227497176,0.285632222,0.357148323,0.2260932,0.284772961,0.34184493,0.1086778,0.09195,0.122875,0.148825,0.07855000000000001,0.2590518,0.188919372,0.268019859
2012-01-17 21:00:00+00:00,0.217822206,0.191782917,0.0633762,0.225254915,0.271162507,0.331851482,0.220808227,0.281750476,0.330672752,0.106919999,0.092225,0.118475,0.146775,0.07765,0.251060477,0.191533802,0.266978885
2012-01-18 21:00:00+00:00,0.209162166,0.180825022,0.065484,0.223317728,0.283811752,0.324494733,0.219722305,0.289699961,0.297367595,0.102659999,0.090275,0.116425,0.144225,0.07775,0.252113884,0.188310548,0.268335136
2012-01-19 21:00:00+00:00,0.206218396,0.185877058,0.065286,0.221206105,0.27124546,0.321383149,0.205634111,0.276875587,0.2842394,0.1032676,0.091275,0.11474999999999999,0.141575,0.0755,0.245720794,0.187701948,0.267591897
2012-01-20 21:00:00+00:00,0.200370562,0.176231929,0.0630514,0.217835271,0.263980822,0.32965718,0.208922188,0.270976299,0.273804967,0.1044762,0.09077500000000001,0.113475,0.141,0.07475,0.245426797,0.190825195,0.269122683
2012-01-23 21:00:00+00:00,0.196879881,0.187063458,0.064948882,0.217596508,0.246283271,0.3355738,0.205435035,0.268707792,0.284426129,0.101073511,0.090475,0.11305,0.14145,0.07365000000000001,0.242024746,0.191613247,0.269122683
2012-01-24 21:00:00+00:00,0.196787254,0.181098007,0.06087733,0.216729154,0.2480084,0.344001531,0.209207796,0.263424661,0.273740135,0.099181388,0.09634999999999999,0.113975,0.14835,0.07327499999999999,0.240987814,0.192702313,0.269122683
2012-01-25 21:00:00+00:00,0.190880488,0.183023355,0.060435952,0.222352515,0.246828047,0.328392734,0.20372861,0.285902542,0.26961782,0.09523342,0.09757500000000001,0.1124,0.14984999999999998,0.07355,0.240587602,0.194592624,0.269122683
2012-01-26 21:00:00+00:00,0.19389865,0.167891355,0.060787741,0.221206723,0.250551555,0.332066681,0.208476203,0.294873069,0.280515661,0.095470397,0.09365,0.11082499999999999,0.1459,0.07355,0.232094902,0.194061849,0.264475445
2012-01-27 21:00:00+00:00,0.191492003,0.180783317,0.057803741,0.215586328,0.251254399,0.330492562,0.206011898,0.275818285,0.277789105,0.096778705,0.0934,0.111475,0.1451,0.07352500000000001,0.233608751,0.192560158,0.264675266
2012-01-30 21:00:00+00:00,0.196862774,0.177712544,0.056767732,0.221166635,0.263459888,0.339686931,0.206530457,0.290630442,0.288785625,0.096365973,0.09442500000000001,0.11320000000000001,0.1494,0.07355,0.242741624,0.194593678,0.273527305
2012-01-31 21:00:00+00:00,0.198358908,0.169615838,0.059332352,0.218894171,0.256707696,0.314106556,0.205541369,0.265568166,0.284676255,0.094550129,0.09565,0.113475,0.1505,0.0738,0.239914783,0.194863057,0.269917041
2012-02-01 21:00:00+00:00,0.193118933,0.184067161,0.059385705,0.22387232,0.24479425,0.326970059,0.207105498,0.281659999,0.276443117,0.097882911,0.09789999999999999,0.112375,0.14984999999999998,0.074225,0.231943558,0.194788894,0.271658951
2012-02-02 21:00:00+00:00,0.188084555,0.18575687,0.058523911,0.230361274,0.249909322,0.333706724,0.205093537,0.256638361,0.270736141,0.094578211,0.0965,0.11215,0.14859999999999998,0.073575,0.231597649,0.194692158,0.265494484
2012-02-03 21:00:00+00:00,0.181188101,0.174914325,0.058685835,0.221402822,0.23660882,0.317862248,0.204053169,0.273452668,0.258773095,0.092585964,0.09415,0.1117,0.14615,0.07395,0.226108292,0.196692207,0.263917623
2012-02-06 21:00:00+00:00,0.182755355,0.170830549,0.056118,0.222040891,0.235622881,0.321652284,0.188932542,0.259875301,0.2670591,0.0912521,0.0959,0.111175,0.1474,0.0739,0.230107157,0.197074994,0.267961158
2012-02-07 21:00:00+00:00,0.182043347,0.187611777,0.059328435,0.21937983,0.248108162,0.300401656,0.20091843,0.269159771,0.263902794,0.091054547,0.0958,0.111275,0.145325,0.07315,0.229311615,0.195097622,0.269684145
2012-02-08 21:00:00+00:00,0.184236559,0.186233388,0.056584141,0.21655322,0.234522793,0.325658525,0.197536766,0.277136698,0.264810558,0.090432352,0.09585,0.11,0.1429,0.072425,0.230141252,0.192628273,0.264190416
2012-02-09 21:00:00+00:00,0.189648155,0.181907941,0.059294416,0.219652728,0.241047932,0.317175421,0.19153855,0.294582466,0.268779508,0.09202307,0.09609999999999999,0.10905,0.141,0.07139999999999999,0.23007749,0.192741109,0.265602578
2012-02-10 21:00:00+00:00,0.198741959,0.1668589,0.058717823,0.220454779,0.267089172,0.328160799,0.208631986,0.269474342,0.286179567,0.098545,0.09634999999999999,0.11042500000000001,0.14275000000000002,0.06995,0.242041903,0.194465293,0.272972646
2012-02-13 21:00:00+00:00,0.192796284,0.186741655,0.058157344,0.211249501,0.252803881,0.307906315,0.209547898,0.282893615,0.277080047,0.095634119,0.09425,0.1084,0.14085,0.07005,0.240696619,0.191796385,0.272927682
2012-02-14 21:00:00+00:00,0.197250937,0.167302494,0.057126764,0.214989111,0.256249364,0.302896199,0.215686567,0.285582417,0.290243564,0.095673341,0.0956,0.1096,0.14165,0.070175,0.241525952,0.190694655,0.270823519
2012-02-15 21:00:00+00:00,0.206230705,0.172580757,0.059027204,0.214716149,0.261943271,0.324436128,0.218831828,0.28418758,0.292876014,0.105371208,0.09655,0.11102499999999998,0.144025,0.07035,0.240373492,0.192625746,0.26661517
2012-02-16 21:00:00+00:00,0.197422525,0.173014926,0.060585126,0.206319265,0.253401486,0.318627425,0.211172581,0.285543973,0.279603411,0.099442176,0.10045,0.11382500000000001,0.1466,0.07139999999999999,0.245323529,0.2007126,0.271161929
2012-02-17 21:00:00+00:00,0.19680261,0.173740614,0.060964366,0.205102754,0.24416592,0.30532164,0.2127276,0.287384822,0.273726161,0.098927726,0.10154999999999999,0.11525,0.146075,0.07035,0.237128147,0.207407011,0.271413048
2012-02-21 21:00:00+00:00,0.193141654,0.181792541,0.06060967,0.210161732,0.247149549,0.31016785,0.207799523,0.2809725,0.26933397,0.097849017,0.10095000000000001,0.111075,0.14529999999999998,0.07055,0.232065058,0.198028801,0.27657952
2012-02-22 21:00:00+00:00,0.193673183,0.166315273,0.059325679,0.203459336,0.244263016,0.312396273,0.212420969,0.279474083,0.269674689,0.092581323,0.10205,0.10949999999999999,0.14575,0.07095,0.230404198,0.199690245,0.272332392
2012-02-23 21:00:00+00:00,0.184713444,0.164410111,0.057440499,0.205851394,0.233128335,0.313482528,0.197938488,0.281265245,0.26768875,0.089827158,0.10074999999999999,0.108725,0.141675,0.07125,0.228199654,0.197013438,0.27519981
2012-02-24 21:00:00+00:00,0.183623269,0.170819411,0.057506644,0.200320026,0.243047172,0.322452539,0.190341091,0.273814767,0.265602433,0.090593713,0.10385,0.106675,0.141775,0.071125,0.221888068,0.192527078,0.271799776
2012-02-27 21:00:00+00:00,0.187987938,0.168447176,0.057160564,0.197972135,0.234351064,0.325784025,0.208210084,0.275058064,0.267635588,0.096647347,0.10275000000000001,0.1081,0.143025,0.07245,0.22766919,0.197190533,0.275020263
2012-02-28 21:00:00+00:00,0.187747322,0.179052919,0.056915638,0.203496022,0.238720674,0.313509628,0.199339203,0.277813435,0.264877864,0.094355201,0.10490000000000001,0.1079,0.14427500000000001,0.07225,0.225826809,0.204035178,0.272369572
2012-02-29 21:00:00+00:00,0.193170159,0.171762632,0.055631176,0.209619561,0.240523145,0.307027925,0.207458337,0.278178761,0.267535576,0.092488035,0.106275,0.1082,0.144425,0.07185,0.224731512,0.207211831,0.270138433
2012-03-01 21:00:00+00:00,0.184347118,0.185796499,0.05779615,0.196181781,0.236958769,0.312132695,0.194581233,0.273999438,0.258025,0.09621125,0.10475,0.1075,0.145475,0.0717,0.219535007,0.210546845,0.274455534
2012-03-02 21:00:00+00:00,0.186299923,0.182055352,0.056892423,0.194159962,0.239368233,0.314331056,0.194049972,0.274828467,0.258901247,0.099826005,0.1045,0.108025,0.14495,0.0722,0.220237433,0.204522803,0.271626537
2012-03-05 21:00:00+00:00,0.190434237,0.180104535,0.057631323,0.193836161,0.247707669,0.306448268,0.211110372,0.284897966,0.265968688,0.101553423,0.105425,0.10917500000000001,0.1462,0.0724,0.223151531,0.199588838,0.277348154
2012-03-06 21:00:00+00:00,0.200600127,0.165458876,0.058773502,0.193828932,0.26081143,0.333967599,0.214421464,0.290467903,0.285718941,0.103527647,0.10679999999999999,0.110325,0.153525,0.07205,0.24316056,0.197867063,0.283348185
2012-03-07 21:00:00+00:00,0.195387094,0.152503683,0.060653158,0.187344333,0.249048088,0.315663264,0.217981461,0.286069877,0.275888283,0.100783823,0.10644999999999999,0.109875,0.1528,0.07525,0.243174792,0.198313185,0.288533658
2012-03-08 21:00:00+00:00,0.1884324,0.160478341,0.058290541,0.186349857,0.249708976,0.3065036,0.20243,0.276920522,0.274301405,0.092653647,0.10744999999999999,0.10779999999999999,0.15145,0.07545,0.228265769,0.202625207,0.284403824
2012-03-09 21:00:00+00:00,0.184974352,0.149465982,0.058165117,0.19068125,0.244988545,0.322605749,0.208542281,0.287402758,0.274754599,0.094423029,0.11285,0.10832499999999999,0.153425,0.07435,0.223062167,0.204438031,0.280517586
2012-03-12 20:00:00+00:00,0.181037664,0.148089147,0.059456544,0.191396793,0.232417789,0.304746312,0.206958059,0.279251277,0.278748976,0.092085794,0.11522500000000001,0.108125,0.155275,0.07455,0.221546904,0.205246441,0.276963334
2012-03-13 20:00:00+00:00,0.172701722,0.149979955,0.061271216,0.193969237,0.225433994,0.296418059,0.196261569,0.26617687,0.273355505,0.091469535,0.1142,0.10805,0.15395,0.07505,0.210773444,0.20690744,0.268644487
2012-03-14 20:00:00+00:00,0.179344162,0.188311082,0.064542794,0.193116567,0.229070186,0.304355331,0.199760649,0.28363387,0.270389958,0.092151194,0.11605,0.107825,0.15407500000000002,0.0748,0.212013046,0.207447256,0.270892336
2012-03-15 20:00:00+00:00,0.17665964,0.178701188,0.065524588,0.186390128,0.23967222,0.306651062,0.196508867,0.275482687,0.275660661,0.095233426,0.114575,0.10779999999999999,0.150675,0.07564999999000001,0.209685915,0.202191141,0.268480805
2012-03-16 20:00:00+00:00,0.181438101,0.174462779,0.062658626,0.185392661,0.221958,0.295780278,0.198943884,0.264609496,0.265991029,0.094197711,0.11387499999999999,0.106575,0.1484,0.0746,0.210707347,0.201263871,0.26428269
2012-03-19 20:00:00+00:00,0.17285267,0.186204068,0.06479705,0.178513574,0.222908518,0.297206562,0.185001247,0.265500069,0.257128463,0.088353838,0.11164999999999999,0.10612500000000001,0.146675,0.07385,0.207350123,0.199164707,0.265660336
2012-03-20 20:00:00+00:00,0.178249309,0.173162381,0.065049211,0.1832375,0.234461974,0.294886475,0.1987778,0.276794416,0.269009354,0.086252894,0.11005000000000001,0.10529999999999999,0.14805,0.071425,0.210480111,0.199164707,0.264589001
2012-03-21 20:00:00+00:00,0.175694736,0.162244834,0.061738808,0.179525509,0.230254898,0.284538596,0.196382209,0.269007096,0.259638727,0.086275779,0.1107,0.10395,0.14715,0.0705,0.208928523,0.194136872,0.262878991
2012-03-22 20:00:00+00:00,0.177312272,0.183659818,0.064262226,0.181886668,0.235419633,0.297220156,0.184950518,0.272062448,0.262147527,0.085925611,0.1117,0.104575,0.15164999999999998,0.0704,0.212551208,0.191927544,0.264475547
2012-03-23 20:00:00+00:00,0.170153374,0.177985293,0.062270935,0.181594379,0.22981802,0.282753237,0.182320709,0.266770222,0.256781727,0.089932647,0.11220000000000001,0.104225,0.151625,0.0701,0.211334964,0.192883335,0.265281787
2012-03-26 20:00:00+00:00,0.161040499,0.1653693,0.062149299,0.184809999,0.218104,0.275829056,0.1880948,0.266746512,0.2488602,0.089919,0.11220000000000001,0.104125,0.152475,0.069825,0.207375492,0.188295674,0.264814298
2012-03-27 20:00:00+00:00,0.171832925,0.170759077,0.057743999,0.184577999,0.227953149,0.27302551,0.1920084,0.26846129,0.2563553,0.0890419,0.1106,0.1025,0.15115,0.06987499999999999,0.208710156,0.189229911,0.254666268
2012-03-28 20:00:00+00:00,0.16899725,0.175220167,0.061485199,0.1846151,0.230961249,0.287011531,0.1794091,0.266606451,0.258936361,0.088261,0.10949999999999999,0.101975,0.1515,0.07035,0.212000382,0.189608748,0.257383589
2012-03-29 20:00:00+00:00,0.171939775,0.180058722,0.0595685,0.1807908,0.231160049,0.289738612,0.184688599,0.268061306,0.257473767,0.088904999,0.110025,0.102825,0.156525,0.07075000000000001,0.223248522,0.188763505,0.260319781
2012-03-30 20:00:00+00:00,0.164477599,0.179428774,0.0612846,0.180387199,0.2229125,0.287932425,0.187158,0.259479251,0.250146258,0.0874696,0.1106,0.1009,0.15564999999999998,0.0698,0.214479072,0.190265007,0.256174186
2012-04-02 20:00:00+00:00,0.160309737,0.168932962,0.060950199,0.175591351,0.223553284,0.286145331,0.188278879,0.259818309,0.248244887,0.0921259,0.111175,0.09995,0.154575,0.070625,0.205697456,0.185466236,0.253858145
2012-04-03 20:00:00+00:00,0.170861986,0.171898606,0.063933099,0.181737282,0.222107179,0.270362987,0.189654672,0.246225677,0.253961558,0.093735,0.11135,0.09974999999999999,0.15315,0.07185,0.210077037,0.185874359,0.246755247
2012-04-04 20:00:00+00:00,0.170096262,0.186541322,0.064795999,0.191165991,0.225940072,0.270947368,0.196231327,0.26413435,0.263592332,0.097998399,0.11185,0.1011,0.154,0.07225,0.223407893,0.193366327,0.246755247
2012-04-05 20:00:00+00:00,0.170968306,0.164033558,0.062896399,0.188574651,0.235173103,0.283209962,0.184728896,0.270180322,0.257998767,0.095243,0.11205,0.10310000000000001,0.154975,0.07345,0.223530046,0.19365709,0.251751731
2012-04-09 20:00:00+00:00,0.190022537,0.168790879,0.060636299,0.19319686,0.24200497,0.273639665,0.206510501,0.265217008,0.273941548,0.1010404,0.110925,0.1026,0.15335000000000001,0.072575,0.223530046,0.195070784,0.251751731
2012-04-10 20:00:00+00:00,0.197924482,0.161755754,0.061882,0.196851103,0.257838975,0.29041755,0.217124365,0.288644516,0.287163419,0.106784,0.1099,0.104275,0.15335000000000001,0.072575,0.238732305,0.192536378,0.26001449
2012-04-11 20:00:00+00:00,0.190884482,0.173590561,0.061681999,0.203682722,0.258092781,0.300983925,0.211384094,0.269251903,0.280450051,0.104887799,0.10880000000000001,0.10577500000000001,0.153825,0.07345,0.237073291,0.195707582,0.258068258
2012-04-12 20:00:00+00:00,0.182676396,0.156205735,0.064665999,0.197489448,0.243534413,0.2873104,0.207341034,0.265761306,0.27003367,0.0988242,0.105625,0.10435,0.149775,0.073,0.235716497,0.19840328,0.256349465
2012-04-13 20:00:00+00:00,0.202153631,0.161658103,0.06112,0.194547241,0.253453275,0.295586085,0.217838548,0.269266138,0.282986187,0.100002,0.102675,0.10365,0.1466,0.0724,0.249278089,0.193238365,0.254329811
2012-04-16 20:00:00+00:00,0.202509741,0.166710629,0.0605,0.197833531,0.263869634,0.292205518,0.217193568,0.267360103,0.278111009,0.1005833,0.10305,0.1042,0.1478,0.072525,0.248694765,0.19864323,0.254609746
2012-04-17 20:00:00+00:00,0.192735213,0.165336709,0.059127499,0.192904017,0.252105451,0.277019012,0.198497982,0.263248787,0.272744719,0.0957712,0.10164999999999999,0.10275000000000001,0.147725,0.07365000000000001,0.236618505,0.196246017,0.254828081
2012-04-18 20:00:00+00:00,0.186056062,0.154218632,0.0601463,0.190289296,0.253383579,0.289350062,0.201918165,0.264440012,0.273821729,0.096808,0.104375,0.1014,0.14595,0.073125,0.242417172,0.19531194,0.252122752
2012-04-19 20:00:00+00:00,0.18756082,0.178010983,0.0580231,0.188823013,0.254990599,0.270261406,0.207866041,0.265396291,0.277657645,0.097001799,0.10494999999999999,0.10092499999999999,0.14515,0.07295,0.245323324,0.196194722,0.24642889
2012-04-20 20:00:00+00:00,0.181064965,0.173257567,0.057213999,0.184699206,0.242403062,0.274580634,0.205059862,0.26215258,0.26898389,0.094912,0.10339999999999999,0.09974999999999999,0.144375,0.0712,0.240287725,0.196802576,0.246009136
2012-04-23 20:00:00+00:00,0.188620018,0.149888909,0.057621483,0.186322848,0.245213713,0.283841797,0.216977724,0.272933387,0.275339206,0.095514679,0.10285,0.10045,0.14730000000000001,0.0704,0.254542847,0.197804227,0.250994963
2012-04-24 20:00:00+00:00,0.188231758,0.173997406,0.058694193,0.184985689,0.244944186,0.275103099,0.206475303,0.261285396,0.27360237,0.092747322,0.10189999999999999,0.09914999999999999,0.148675,0.0701,0.245961405,0.196770014,0.250890233
2012-04-25 20:00:00+00:00,0.180090481,0.159228746,0.054641506,0.185125124,0.237423862,0.265131289,0.198166034,0.261005016,0.263997854,0.08846387,0.10125,0.097525,0.148125,0.06995,0.241000552,0.194608915,0.248897474
2012-04-26 20:00:00+00:00,0.17547211,0.16433517,0.053989838,0.183874151,0.220657486,0.259128071,0.187868317,0.260303354,0.264063225,0.087109219,0.09835,0.09574999999999999,0.139625,0.069,0.238047023,0.193644158,0.244246126
2012-04-27 20:00:00+00:00,0.173074756,0.159663167,0.056285241,0.180397275,0.223431034,0.255920682,0.194770758,0.259692806,0.25893753,0.089017396,0.0944,0.09432499999999999,0.136175,0.06885,0.233001402,0.193134223,0.245674003
2012-04-30 20:00:00+00:00,0.170242499,0.15817338,0.05582907,0.179416758,0.226530317,0.25555824,0.192392165,0.257997883,0.263003748,0.087140193,0.0964,0.096775,0.1374,0.0684,0.23750807,0.193134223,0.241864672
2012-05-01 20:00:00+00:00,0.167705337,0.153368903,0.058219795,0.180719717,0.225573006,0.266372708,0.188029386,0.25386658,0.25553,0.087502154,0.09685,0.097325,0.1402,0.0684,0.23750807,0.195997827,0.241864672
2012-05-02 20:00:00+00:00,0.175208924,0.158881532,0.055223709,0.181399313,0.231407758,0.25121835,0.19985091,0.25511379,0.257306261,0.085833703,0.09935000000000001,0.0965,0.14279999999999998,0.06849999999999999,0.240882239,0.192443798,0.240766889
2012-05-03 20:00:00+00:00,0.178769913,0.157708467,0.054566006,0.182679451,0.226130275,0.262103551,0.200008181,0.268157974,0.26600019,0.086794701,0.09949999999999999,0.09595000000000001,0.1439,0.06865,0.240433319,0.192443798,0.240124099
2012-05-04 20:00:00+00:00,0.178627241,0.158863961,0.05529808,0.181634896,0.250958137,0.287927366,0.204187137,0.262296109,0.2668368,0.090709487,0.0973,0.096825,0.1445,0.067,0.248274524,0.192443798,0.242059791
2012-05-07 20:00:00+00:00,0.187553224,0.157487225,0.054723161,0.183651055,0.248754206,0.296286175,0.204955193,0.260945674,0.26055092,0.0907283,0.09765,0.09949999999999999,0.147175,0.06709999999999999,0.242976762,0.199199436,0.247470431
2012-05-08 20:00:00+00:00,0.185578862,0.140847525,0.054102193,0.187113103,0.23929131,0.2802029,0.209121696,0.271088896,0.272484983,0.089315483,0.09634999999999999,0.1013,0.146625,0.0673,0.256458423,0.193291257,0.247438488
2012-05-09 20:00:00+00:00,0.190065417,0.140987599,0.0557153,0.194126386,0.250152668,0.289618359,0.216113006,0.282398559,0.2789152,0.091047999,0.09955,0.10335000000000001,0.15225,0.0681,0.262240685,0.192626342,0.252622567
2012-05-10 20:00:00+00:00,0.189976599,0.148669483,0.056649032,0.188078379,0.249300137,0.28902888,0.215457586,0.278001022,0.273896667,0.092371567,0.09759999999999999,0.102875,0.14935,0.069275,0.256939891,0.192062128,0.255126761
2012-05-11 20:00:00+00:00,0.192725299,0.157605564,0.058505491,0.190373599,0.257288049,0.29759454,0.220254199,0.273681667,0.270569043,0.090746833,0.0965,0.103675,0.15115,0.06885,0.253506582,0.196407,0.258698844
2012-05-14 20:00:00+00:00,0.20901742,0.18006409,0.059959432,0.196385603,0.271294703,0.297114696,0.224135427,0.289240522,0.300930167,0.10696887,0.09914999999999999,0.1084,0.1547,0.07075000000000001,0.265332962,0.195704384,0.264139946
2012-05-15 20:00:00+00:00,0.212426224,0.16633018,0.05815919,0.200437858,0.28047282,0.3099346,0.234776308,0.28949198,0.296386116,0.110938725,0.1001,0.11255000000000001,0.153325,0.0745,0.270604622,0.198260541,0.259544591
2012-05-16 20:00:00+00:00,0.212363987,0.185432151,0.059190777,0.205384317,0.282684482,0.316888066,0.230529358,0.304539277,0.319858845,0.117877516,0.102,0.115,0.158025,0.0775,0.271162443,0.203105817,0.274987986
2012-05-17 20:00:00+00:00,0.229940841,0.191505395,0.062894819,0.213009275,0.292541893,0.325485853,0.249937537,0.307252082,0.32479254,0.122762725,0.1047,0.116325,0.16215,0.077,0.283420165,0.200244646,0.275962812
2012-05-18 20:00:00+00:00,0.231007868,0.19080658,0.064169319,0.221304637,0.289529462,0.32366948,0.253311162,0.32009,0.328324329,0.123760332,0.10625,0.12154999999999999,0.16857500000000003,0.08025,0.287904755,0.213032006,0.285730177
2012-05-21 20:00:00+00:00,0.216261556,0.164627993,0.061322419,0.211501767,0.282102568,0.315569233,0.240821601,0.296619323,0.311425264,0.108764274,0.10439999999999999,0.119075,0.16510000000000002,0.0805,0.283064829,0.206632964,0.285516859
2012-05-22 20:00:00+00:00,0.223087448,0.175010851,0.064373545,0.210817751,0.285179741,0.3065128,0.243622289,0.294364919,0.301985303,0.109778893,0.10265,0.11410000000000001,0.15755,0.079675,0.270841784,0.202248938,0.270140715
2012-05-23 20:00:00+00:00,0.221198699,0.185304035,0.060751685,0.216557255,0.279902082,0.3165089,0.240316944,0.288073214,0.313523341,0.109230838,0.10285,0.12115000000000001,0.16385000000000002,0.08055,0.288000159,0.211957364,0.276513355
2012-05-24 20:00:00+00:00,0.21763299,0.167827335,0.06052018,0.221669503,0.281637751,0.31189318,0.247112189,0.307538819,0.314457738,0.108329638,0.10265,0.1213,0.16524999999999998,0.08115,0.285272987,0.21375696,0.280810492
2012-05-25 20:00:00+00:00,0.223336571,0.180737419,0.060577206,0.216273406,0.284733668,0.309792916,0.250780105,0.298981728,0.318420572,0.114046219,0.10154999999999999,0.1215,0.16454999999999997,0.08130000000000001,0.284148199,0.212019478,0.281193453
2012-05-29 20:00:00+00:00,0.209323714,0.188438967,0.060244806,0.220503993,0.274764275,0.31154308,0.231833331,0.294169257,0.300621032,0.105996096,0.09905,0.11960000000000001,0.16237500000000002,0.080775,0.282473205,0.208392846,0.269029466
2012-05-30 20:00:00+00:00,0.217898152,0.193177316,0.060973072,0.229014763,0.282897241,0.330700966,0.247380051,0.290727033,0.309181341,0.109427895,0.1018,0.12035,0.167425,0.080525,0.297331516,0.210103526,0.275342936
2012-05-31 20:00:00+00:00,0.223094266,0.185015935,0.058008706,0.230270441,0.298501696,0.32759115,0.256410634,0.291069852,0.306287419,0.113993096,0.1039,0.1217,0.169825,0.080375,0.29867849,0.215380093,0.280403619
2012-06-01 20:00:00+00:00,0.245461028,0.204968406,0.059176008,0.244342586,0.319390331,0.362096635,0.266019436,0.313843628,0.321563869,0.12696402,0.1047,0.1217,0.1745,0.0814,0.310391588,0.225579727,0.287188873
2012-06-04 20:00:00+00:00,0.244285666,0.201304577,0.06317787,0.24745462,0.293531131,0.346712639,0.24975741,0.311762066,0.31232087,0.129246477,0.10275000000000001,0.121275,0.17575,0.0806,0.305982536,0.231388959,0.30372597
2012-06-05 20:00:00+00:00,0.235537423,0.191433677,0.063486185,0.244050675,0.307927068,0.339847359,0.256462731,0.301093414,0.307480408,0.124621358,0.1016,0.12105,0.17465,0.08085,0.300006245,0.225061475,0.295903746
2012-06-06 20:00:00+00:00,0.213911385,0.20410308,0.063331283,0.237926489,0.276797965,0.3436935,0.237819337,0.287066899,0.309423403,0.11796807,0.102,0.11835000000000001,0.169625,0.08130000000000001,0.281498977,0.218402493,0.290959436
2012-06-07 20:00:00+00:00,0.217258654,0.193454793,0.063492233,0.233270862,0.285454163,0.33655294,0.24156822,0.296336685,0.303543629,0.112626733,0.1001,0.114575,0.162825,0.08070000000000001,0.276094818,0.214314248,0.28823754
2012-06-08 20:00:00+00:00,0.206630142,0.19694679,0.061579767,0.231206789,0.267152413,0.338505866,0.228800175,0.305381766,0.298467129,0.109933961,0.1005,0.115425,0.165175,0.0809,0.276369803,0.228501355,0.296506552
2012-06-11 20:00:00+00:00,0.223762521,0.183544858,0.060073974,0.233441199,0.286174741,0.364583966,0.24014378,0.303599735,0.313341854,0.115654087,0.10035,0.11564999999999999,0.16542500000000002,0.08085,0.278009963,0.21858879,0.282380263
2012-06-12 20:00:00+00:00,0.217548133,0.188839561,0.062876967,0.24077512,0.28592771,0.358947998,0.238585999,0.283058971,0.304851083,0.116146019,0.10064999999999999,0.116775,0.1646,0.0809,0.279900924,0.222904413,0.282499657
2012-06-13 20:00:00+00:00,0.22851,0.186356725,0.059147358,0.248228986,0.292009265,0.364438999,0.249362237,0.29487219,0.314234661,0.118180174,0.1,0.11477499999999999,0.16260000000000002,0.0805,0.279508172,0.218307963,0.277504747
2012-06-14 20:00:00+00:00,0.215110942,0.184404354,0.061396258,0.243459913,0.285327034,0.33748138,0.242338234,0.295486314,0.303408916,0.11692308,0.10045,0.114325,0.1624,0.08,0.278321667,0.220518192,0.283481274
2012-06-15 20:00:00+00:00,0.212325671,0.191364709,0.061524335,0.23537762,0.274313355,0.336169155,0.223488391,0.269911619,0.280213446,0.113017559,0.10074999999999999,0.1139,0.160275,0.0801,0.278259336,0.2208079,0.275865995
2012-06-18 20:00:00+00:00,0.200780476,0.192711619,0.059373116,0.222092247,0.264847931,0.335030746,0.217262428,0.266088895,0.286733209,0.107552025,0.09805,0.10832499999999999,0.153975,0.07675,0.269476437,0.207365902,0.264769401
2012-06-19 20:00:00+00:00,0.192396285,0.178785599,0.061151619,0.218786514,0.251390062,0.31961676,0.218759905,0.275617999,0.267357785,0.100311596,0.09699999999999999,0.106025,0.151125,0.07635,0.255125978,0.20368031,0.261843167
2012-06-20 20:00:00+00:00,0.190279466,0.187500533,0.060423167,0.208710438,0.253911748,0.3350268,0.211995276,0.267325942,0.261590685,0.095720258,0.09695000000000001,0.1047,0.14887499999999998,0.07554999999999999,0.251796645,0.196608909,0.256377387
2012-06-21 20:00:00+00:00,0.207761723,0.165824088,0.057326266,0.218012047,0.277180262,0.357113929,0.222018916,0.274372763,0.285230571,0.102676045,0.09785,0.095725,0.150575,0.0728,0.247861786,0.192611712,0.254679877
2012-06-22 20:00:00+00:00,0.196775999,0.1819604,0.0591324,0.2115956,0.2593724,0.354787699,0.220317999,0.270255,0.2808505,0.099944299,0.0984,0.096525,0.151225,0.0726,0.252317399,0.194334256,0.262386761
2012-06-25 20:00:00+00:00,0.2108157,0.159239266,0.061012799,0.21134,0.285576049,0.3440256,0.234850199,0.288496726,0.295048036,0.101766199,0.099,0.097175,0.152025,0.0723,0.26390885,0.195799562,0.259990928
2012-06-26 20:00:00+00:00,0.2008175,0.173317733,0.059314,0.211407699,0.26993945,0.337245266,0.223524999,0.266910926,0.285107722,0.098639999,0.09880000000000001,0.0965,0.1527,0.0705,0.261483722,0.197807957,0.257498412
2012-06-27 20:00:00+00:00,0.204742562,0.167230399,0.0577204,0.211600099,0.256680349,0.3393785,0.21291575,0.269593828,0.280760666,0.0997468,0.09775,0.096075,0.14702500000000002,0.07035,0.251872465,0.194913213,0.251186431
2012-06-28 20:00:00+00:00,0.1963331,0.157641111,0.057046799,0.217101999,0.265164799,0.3436085,0.231315999,0.2674819,0.285549511,0.099701999,0.0978,0.095725,0.148725,0.0702,0.253815634,0.195606342,0.253666379
2012-06-29 20:00:00+00:00,0.185987382,0.174746999,0.056708799,0.2093526,0.246259457,0.323218063,0.214320714,0.256739126,0.265327813,0.094649999,0.09675,0.091025,0.145175,0.06974999999999999,0.236490105,0.19366213,0.249147332
2012-07-02 20:00:00+00:00,0.183554914,0.170847466,0.057053,0.204039214,0.244358514,0.33410614,0.205347428,0.25687015,0.269002916,0.0970632,0.09725,0.089975,0.144775,0.0691,0.23220478,0.193284685,0.249147332
2012-07-03 17:00:00+00:00,0.180923894,0.168424166,0.0556196,0.201729285,0.236362307,0.325015686,0.201172557,0.234551142,0.254888727,0.094601999,0.0958,0.089725,0.1431,0.06805,0.226704588,0.190336456,0.237851211
2012-07-05 20:00:00+00:00,0.1805503,0.153117544,0.0576284,0.200324971,0.246984,0.337813733,0.193813114,0.247132461,0.258933922,0.0942361,0.09505000000000001,0.08837500000000001,0.14285,0.06645,0.239584827,0.191757629,0.232274014
2012-07-06 20:00:00+00:00,0.187090042,0.175112399,0.0582676,0.202758885,0.244799714,0.340776765,0.211037485,0.251650642,0.268711,0.097058099,0.09405,0.09022500000000001,0.1456,0.06605,0.247219418,0.190558215,0.232860074
2012-07-09 20:00:00+00:00,0.189892857,0.171830199,0.054316,0.199146685,0.2529538,0.346949606,0.20248,0.260807642,0.270355255,0.096365199,0.09405,0.090025,0.1474,0.0661,0.247360551,0.191854079,0.237591691
2012-07-10 20:00:00+00:00,0.197399,0.165464266,0.0564074,0.203968249,0.2486104,0.345236506,0.21478605,0.262724966,0.276057555,0.1006548,0.09325,0.090625,0.146325,0.06634999999999999,0.24340625,0.189696448,0.238201204
2012-07-11 20:00:00+00:00,0.191611257,0.159366666,0.0563489,0.196124971,0.246469142,0.3423222,0.219763257,0.259367971,0.278896933,0.103165999,0.09285,0.09092499999999999,0.14605,0.0659,0.240480103,0.186888763,0.236787005
2012-07-12 20:00:00+00:00,0.190802228,0.162878388,0.056214299,0.198927464,0.2540115,0.340180499,0.217127285,0.269574976,0.291389266,0.104723999,0.09202500000000001,0.09295,0.147875,0.0661,0.244817719,0.187389878,0.246625118
2012-07-13 20:00:00+00:00,0.178037314,0.170319344,0.0557902,0.196368257,0.243086585,0.319923173,0.208889207,0.260812695,0.259348366,0.103322099,0.0902,0.09217499999999999,0.14335,0.06605,0.239304939,0.181483485,0.240092025
2012-07-16 20:00:00+00:00,0.185467528,0.155224749,0.0552622,0.193889128,0.239472228,0.3306608,0.212740978,0.256340171,0.267189333,0.105262,0.089225,0.090325,0.1424,0.0661,0.235990421,0.181483485,0.232018186
2012-07-17 20:00:00+00:00,0.178942057,0.156071666,0.057695,0.192953828,0.235429242,0.321620206,0.201262285,0.247339457,0.260785877,0.101034099,0.0866,0.089725,0.140825,0.06559999999999999,0.233656571,0.174587163,0.224417991
2012-07-18 20:00:00+00:00,0.180797142,0.151739055,0.056373999,0.192867464,0.241638485,0.309510928,0.201265571,0.246655833,0.258606688,0.093191,0.08470000000000001,0.088125,0.13475,0.06565,0.224458762,0.173787356,0.225099147
2012-07-19 20:00:00+00:00,0.174041499,0.160252799,0.0567136,0.1890988,0.233279999,0.313027199,0.203027999,0.24349765,0.2577502,0.088408399,0.0862,0.086875,0.133825,0.0658,0.223611497,0.174907511,0.224084045
2012-07-20 20:00:00+00:00,0.185417915,0.172757378,0.056704999,0.186367477,0.236106649,0.325315838,0.224229868,0.253249642,0.263929988,0.0938315,0.08539999999999999,0.08747500000000001,0.13385,0.06525,0.240945925,0.176954546,0.224631368
2012-07-23 20:00:00+00:00,0.188690499,0.152747273,0.061633928,0.195011705,0.276404357,0.320273225,0.216112842,0.26676821,0.280607621,0.097438999,0.08915,0.09092499999999999,0.14025,0.0702,0.258184714,0.188092325,0.240073641
2012-07-24 20:00:00+00:00,0.201235215,0.156620026,0.064831875,0.200721315,0.250914689,0.333483798,0.210441118,0.270749157,0.284593947,0.101013749,0.088125,0.093975,0.14215,0.07065,0.261331085,0.185014178,0.241488759
2012-07-25 20:00:00+00:00,0.204025473,0.178201936,0.065449932,0.205215726,0.260705447,0.330460932,0.22029621,0.268173473,0.281261,0.100757607,0.087975,0.095225,0.14404999999999998,0.07035,0.255542541,0.190292832,0.244851802
2012-07-26 20:00:00+00:00,0.193404542,0.152032828,0.065142642,0.206665034,0.240079136,0.320485311,0.216229031,0.258974505,0.271116381,0.094541682,0.087675,0.092325,0.141375,0.0705,0.240689744,0.18796912,0.241972566
2012-07-27 20:00:00+00:00,0.178875,0.163944442,0.065260714,0.207682115,0.244397484,0.313351999,0.197190552,0.255529157,0.264294126,0.092390228,0.086975,0.091325,0.13985,0.07075000000000001,0.240348306,0.178149227,0.235005276
2012-07-30 20:00:00+00:00,0.186709873,0.1670634,0.06396705,0.207104239,0.239101473,0.315531919,0.203835736,0.257073284,0.265110757,0.088930092,0.08685000000000001,0.091525,0.139325,0.0733,0.237813026,0.176384302,0.229225351
2012-07-31 20:00:00+00:00,0.189601431,0.161186157,0.0634363,0.208548799,0.245218157,0.323339858,0.204338736,0.254162773,0.269348147,0.092635964,0.088475,0.091425,0.13895,0.07665,0.244074249,0.17755719,0.228181355
2012-08-01 20:00:00+00:00,0.188551731,0.156023357,0.066041114,0.211357257,0.245956884,0.328415203,0.208037871,0.252698052,0.265235535,0.092973001,0.08932499999999999,0.09234999999999999,0.140675,0.07735,0.242362654,0.182646897,0.230034339
2012-08-02 20:00:00+00:00,0.183333684,0.158958142,0.067385599,0.205594957,0.241029799,0.322995935,0.209054342,0.253122884,0.272365789,0.0964704,0.08839999999999999,0.091525,0.1408,0.07885,0.245700745,0.183380986,0.233197517
2012-08-03 20:00:00+00:00,0.178231136,0.161225747,0.065301312,0.194973486,0.232627621,0.328560661,0.198241815,0.24539,0.258144294,0.091533821,0.086425,0.08807499999999999,0.136525,0.07315,0.227393161,0.179859098,0.227450528
2012-08-06 20:00:00+00:00,0.177773157,0.157915968,0.065336553,0.196218526,0.229979121,0.31147009,0.204955347,0.248681257,0.254586789,0.091278214,0.08537499999999999,0.08725,0.133625,0.0742,0.22968621,0.175175941,0.224898208
2012-08-07 20:00:00+00:00,0.18337155,0.14921491,0.068196942,0.196749652,0.224340936,0.300180669,0.195631913,0.249515642,0.253634573,0.088718814,0.084925,0.086,0.1309,0.07339999999999999,0.227646617,0.180190245,0.225662155
2012-08-08 20:00:00+00:00,0.179470073,0.165980947,0.068165685,0.195479263,0.226772421,0.296529258,0.196801305,0.247350131,0.252866663,0.086231714,0.08595000000000001,0.0862,0.13244999999999998,0.07585,0.22943032,0.184642965,0.227543699
2012-08-09 20:00:00+00:00,0.174821871,0.166010107,0.067354257,0.190700621,0.226788052,0.29013042,0.18885341,0.245976778,0.253751728,0.085999833,0.085,0.085,0.13125,0.07595,0.229192562,0.183570827,0.228454737
2012-08-10 20:00:00+00:00,0.170569668,0.147207157,0.066356785,0.196895336,0.22279271,0.294550322,0.185653368,0.243815952,0.256220484,0.086792374,0.08529999999999999,0.08414999999999999,0.13292500000000002,0.0761,0.228899225,0.182237903,0.22607475
2012-08-13 20:00:00+00:00,0.17209221,0.15368166,0.067712812,0.190748786,0.229646473,0.298625264,0.199324126,0.23872141,0.247508759,0.0865825,0.08460000000000001,0.089125,0.132725,0.07564999999000001,0.228027291,0.179771424,0.226268622
2012-08-14 20:00:00+00:00,0.175550731,0.147659115,0.06703615,0.194723289,0.224244894,0.288682103,0.187231052,0.242515578,0.259008589,0.086567371,0.0848,0.089575,0.133875,0.07575,0.226463159,0.17888382,0.224544163
2012-08-15 20:00:00+00:00,0.1731,0.165702,0.066667714,0.1917722,0.220562999,0.3086782,0.197654899,0.2424395,0.2559438,0.091028392,0.08627499999999999,0.09082499999999999,0.13525,0.0748,0.229823351,0.180045116,0.227135468
2012-08-16 20:00:00+00:00,0.173257915,0.170994436,0.0678595,0.193888968,0.230734736,0.307573651,0.185045047,0.244718431,0.246866089,0.085252049,0.08807499999999999,0.09085000000000001,0.1359,0.07545,0.231181104,0.182640036,0.23014631
2012-08-17 20:00:00+00:00,0.182718678,0.15410021,0.0653947,0.189976263,0.22405961,0.304188895,0.196289494,0.242137857,0.248166947,0.084359203,0.08744999999999999,0.090875,0.13485,0.07475,0.228582474,0.183313222,0.229663447
2012-08-20 20:00:00+00:00,0.184952884,0.14772321,0.064817314,0.191043863,0.225467263,0.30734307,0.195804621,0.247845523,0.253600957,0.079022071,0.087575,0.090875,0.13465,0.07455,0.229414244,0.182124504,0.230756292
2012-08-21 20:00:00+00:00,0.177569289,0.160199392,0.063654946,0.190322152,0.233889236,0.300714409,0.197303321,0.249801184,0.250706381,0.077538428,0.08605,0.090425,0.1329,0.0746,0.232084528,0.183112726,0.230198886
2012-08-22 20:00:00+00:00,0.179522078,0.159698247,0.060962774,0.1945822,0.232339178,0.31380949,0.201713336,0.250414971,0.254475678,0.079463899,0.0842,0.089975,0.13369999999999999,0.074375,0.24420254,0.183581382,0.232595769
2012-08-23 20:00:00+00:00,0.186696652,0.145980565,0.063218764,0.19559631,0.245262171,0.314042354,0.199032657,0.252111047,0.261955789,0.079743507,0.08289999999999999,0.088875,0.1329,0.0732,0.243899948,0.184989193,0.236168998
2012-08-24 20:00:00+00:00,0.18340291,0.150648368,0.062427785,0.193511163,0.233050315,0.319321174,0.209313689,0.262060088,0.255819652,0.081973035,0.0828,0.08932499999999999,0.13449999999999998,0.07165,0.242111972,0.187169892,0.2408459
2012-08-27 20:00:00+00:00,0.188263689,0.159987631,0.064066807,0.196457073,0.232767315,0.323879441,0.207540705,0.263606569,0.264081031,0.088771507,0.08245,0.089975,0.13535,0.0713,0.237145761,0.186077563,0.242011938
2012-08-28 20:00:00+00:00,0.191594947,0.151686736,0.06312746,0.191683894,0.246870131,0.319617412,0.207938526,0.263739057,0.266903063,0.085948928,0.0827,0.094675,0.137325,0.0726,0.241074805,0.186932383,0.241336593
2012-08-29 20:00:00+00:00,0.195535676,0.166898742,0.063723871,0.188890642,0.248965035,0.323127503,0.212922036,0.26334238,0.267946915,0.085805628,0.08285000000000001,0.096825,0.13755,0.0723,0.242667609,0.184799618,0.241073988
2012-08-30 20:00:00+00:00,0.199201289,0.151599915,0.063269999,0.190214947,0.248810031,0.325193496,0.213523526,0.269682888,0.273702105,0.087733485,0.08345000000000001,0.097025,0.14075,0.07315,0.249632995,0.18788929,0.244320335
2012-08-31 20:00:00+00:00,0.19871341,0.1554498,0.059421087,0.200229578,0.282602039,0.309357,0.221032063,0.260983547,0.265930431,0.083222712,0.08335000000000001,0.096525,0.13935,0.0737,0.241943269,0.190269952,0.242720409
2012-09-04 20:00:00+00:00,0.195620947,0.1665564,0.063693885,0.199203852,0.257159763,0.3305781,0.218777078,0.264885384,0.266114868,0.087843007,0.080875,0.093825,0.1387,0.0729,0.246837739,0.182814799,0.234770086
2012-09-05 20:00:00+00:00,0.180928157,0.151537736,0.064279591,0.200877376,0.246207884,0.329963217,0.221013263,0.258367255,0.26761091,0.087010025,0.08035,0.091975,0.139125,0.07285,0.24313413,0.182292716,0.23482665
2012-09-06 20:00:00+00:00,0.172747378,0.151338057,0.0645862,0.195090989,0.224758863,0.329910503,0.199994999,0.245167361,0.25193141,0.081473564,0.081425,0.09327500000000001,0.13735,0.0731,0.223458578,0.18126881,0.230622046
2012-09-07 20:00:00+00:00,0.171206926,0.168663357,0.065910455,0.205132105,0.232840457,0.314623677,0.197116978,0.240784676,0.240219478,0.080739437,0.07975,0.087625,0.127675,0.06805,0.221907875,0.178206985,0.221751699
2012-09-10 20:00:00+00:00,0.185182836,0.163379794,0.061559628,0.205627194,0.234179515,0.314711258,0.202336589,0.243870939,0.256438652,0.0834831,0.0793,0.08502499999999999,0.124825,0.067,0.222820211,0.176498072,0.220738789
2012-09-11 20:00:00+00:00,0.174315647,0.156179657,0.064489446,0.202578105,0.221603368,0.322862583,0.203469457,0.241061428,0.240472342,0.085491973,0.07905000000000001,0.084625,0.12359999999999999,0.067325,0.224526949,0.176062385,0.220503526
2012-09-12 20:00:00+00:00,0.172470799,0.172667999,0.064160799,0.2010672,0.2094094,0.326879109,0.1899218,0.237868799,0.2392568,0.085503899,0.07865,0.08199999999999999,0.12235,0.06655,0.217779497,0.174771678,0.219431719
2012-09-13 20:00:00+00:00,0.166197249,0.161204063,0.064361799,0.202370662,0.20354475,0.321797943,0.186945953,0.234445098,0.22569817,0.086312699,0.07965,0.081625,0.1213,0.06585,0.220228174,0.174141633,0.225063479
2012-09-14 20:00:00+00:00,0.1727061,0.178923294,0.064014999,0.195737499,0.208302374,0.310749703,0.191073374,0.237658533,0.23011047,0.0863624,0.07835,0.078375,0.1166,0.06365,0.210755666,0.177456416,0.220988889
2012-09-17 20:00:00+00:00,0.164838049,0.169556376,0.0652247,0.195452249,0.204269874,0.322614798,0.192977349,0.235675323,0.233498205,0.08589,0.0809,0.078475,0.1175,0.06309999999999999,0.211747643,0.177456416,0.219810677
2012-09-18 20:00:00+00:00,0.158062465,0.17436007,0.062057599,0.1921524,0.220343849,0.329786645,0.188155,0.238306877,0.230080623,0.087342799,0.08175,0.077575,0.118825,0.06309999999999999,0.215454221,0.176608587,0.222472806
2012-09-19 20:00:00+00:00,0.160870649,0.178749142,0.061882799,0.192433624,0.217240199,0.339295658,0.1832656,0.236440419,0.227585985,0.0841328,0.0801,0.077275,0.117325,0.06335,0.213804805,0.178029697,0.221543852
2012-09-20 20:00:00+00:00,0.159005699,0.170429026,0.06159348,0.191214675,0.204016349,0.332046677,0.1816852,0.236745853,0.22345497,0.0829828,0.0791,0.078225,0.12045,0.0643,0.215470463,0.17685471,0.223416894
2012-09-21 20:00:00+00:00,0.161547962,0.165500573,0.056622,0.188654649,0.212486462,0.317295724,0.187841649,0.228297046,0.232910723,0.082688999,0.07792500000000001,0.07725,0.11785,0.06394999999999999,0.212700557,0.175616818,0.221957135
2012-09-24 20:00:00+00:00,0.159315,0.164193235,0.0616088,0.190651499,0.217874,0.335795483,0.178530399,0.234208285,0.226175694,0.0804983,0.07707499999999999,0.07554999999999999,0.11800000000000001,0.0643,0.208775792,0.175926727,0.223641888
2012-09-25 20:00:00+00:00,0.169954263,0.158371042,0.0608376,0.183626844,0.218272943,0.329668346,0.182509261,0.239519999,0.239684102,0.086085999,0.07769999999999999,0.077675,0.11914999999999999,0.0636,0.205918415,0.171832886,0.222823628
2012-09-26 20:00:00+00:00,0.17531656,0.173804552,0.058664799,0.178635726,0.219307337,0.329167574,0.199205419,0.236042409,0.242923094,0.0879858,0.07865,0.07919999999999999,0.12105,0.06355000000000001,0.217254034,0.173369382,0.222891009
2012-09-27 20:00:00+00:00,0.16120778,0.172486492,0.057444999,0.184972719,0.213836517,0.32390958,0.19111665,0.237705695,0.236042414,0.0830362,0.0775,0.07805,0.119275,0.06355000000000001,0.216466854,0.17253761,0.22181455
2012-09-28 20:00:00+00:00,0.1635355,0.170099894,0.0579422,0.181181926,0.223161942,0.326402593,0.186534933,0.238889428,0.240689735,0.086399,0.07885,0.07775,0.11925000000000001,0.06375,0.220243336,0.171148382,0.219330848
2012-10-01 20:00:00+00:00,0.169404841,0.166072129,0.058228,0.185026137,0.21136125,0.318805403,0.189379483,0.233970828,0.236493488,0.09282179,0.078,0.07755,0.11955,0.0635,0.215058396,0.169917533,0.219330848
2012-10-02 20:00:00+00:00,0.165041609,0.168294926,0.0590325,0.1815257,0.223153462,0.326943348,0.18455194,0.232076076,0.232507552,0.092143099,0.077425,0.077625,0.121025,0.06365,0.216561651,0.168252436,0.219330848
2012-10-03 20:00:00+00:00,0.169751899,0.166636023,0.058825,0.179727951,0.217040121,0.334952196,0.192617823,0.233833712,0.236118911,0.089229999,0.07675,0.077575,0.12265000000000001,0.06365,0.214397156,0.168389247,0.220611459
2012-10-04 20:00:00+00:00,0.165056366,0.155861658,0.059212499,0.182791859,0.213541487,0.313448,0.186085266,0.239002588,0.234523435,0.088914799,0.076475,0.07755,0.122525,0.06385,0.214363154,0.168140951,0.219600546
2012-10-05 20:00:00+00:00,0.16349685,0.169606749,0.058633399,0.17618545,0.217711612,0.313884362,0.178111879,0.234593028,0.2304088,0.089757953,0.07655,0.07730000000000001,0.11904999999999999,0.0637,0.206959395,0.168136088,0.2179848
2012-10-08 20:00:00+00:00,0.162048333,0.169682982,0.058909,0.179745749,0.217063828,0.321331709,0.19025,0.228322549,0.234719541,0.092104115,0.07735,0.078,0.11865,0.063675,0.213269885,0.168136088,0.220756042
2012-10-09 20:00:00+00:00,0.169681366,0.15184883,0.0588935,0.172897835,0.213110662,0.320685016,0.197053826,0.244989149,0.239501611,0.094482181,0.0764,0.078,0.11862500000000001,0.06355000000000001,0.215603945,0.16782765,0.222082056
2012-10-10 20:00:00+00:00,0.1707376,0.154133911,0.0591579,0.171619759,0.222122237,0.321224141,0.18481104,0.242708838,0.246275576,0.092339645,0.0755,0.07775,0.118675,0.06265,0.217332713,0.169414993,0.221047361
2012-10-11 20:00:00+00:00,0.165403165,0.159051644,0.0561701,0.17373106,0.214704493,0.323384754,0.187739773,0.24379796,0.235625241,0.09092757,0.07615,0.07705000000000001,0.11904999999999999,0.06255,0.210645585,0.169371407,0.223422098
2012-10-12 20:00:00+00:00,0.163579526,0.149529397,0.056084999,0.175813746,0.22677518,0.320853548,0.187339633,0.239051701,0.236133552,0.091421801,0.0771,0.0767,0.11875,0.06145,0.210657255,0.167701601,0.22473526
2012-10-15 20:00:00+00:00,0.163300624,0.156791983,0.0548498,0.173232875,0.217064162,0.321007096,0.1907188,0.242076666,0.228751897,0.089048953,0.077,0.0751,0.119225,0.06125,0.209741611,0.165081834,0.223962386
2012-10-16 20:00:00+00:00,0.158038586,0.150803176,0.0572215,0.171698026,0.216393,0.3321495,0.175193626,0.234892269,0.230715352,0.085421757,0.07725,0.074725,0.114925,0.0608,0.20329376,0.164019077,0.222665943
2012-10-17 20:00:00+00:00,0.158634313,0.155522602,0.060847399,0.168651863,0.214016339,0.330953714,0.18645795,0.229439769,0.221305902,0.085827494,0.078375,0.0746,0.11195000000000001,0.06045,0.201882372,0.166363176,0.221875986
2012-10-18 20:00:00+00:00,0.157789592,0.174522432,0.0603614,0.168107038,0.215824631,0.326582892,0.19049499,0.225568557,0.223906705,0.085484367,0.07945,0.07445,0.1105,0.06045,0.200079303,0.169260023,0.223847622
2012-10-19 20:00:00+00:00,0.171069,0.160088311,0.060852,0.166607673,0.217020097,0.321555752,0.195177279,0.236721984,0.225556582,0.085820264,0.0797,0.074425,0.110625,0.06,0.203833199,0.168976329,0.221528856
2012-10-22 20:00:00+00:00,0.162961866,0.156091411,0.063578794,0.165499733,0.214406666,0.32402965,0.1973596,0.232498215,0.229992941,0.083618552,0.0801,0.072725,0.1105,0.05915,0.206591202,0.172379136,0.220962084
2012-10-23 20:00:00+00:00,0.177852125,0.160615194,0.060714458,0.167918962,0.22471766,0.324863209,0.201909799,0.234842752,0.233150435,0.084491884,0.08065,0.072925,0.11199999999999999,0.0593,0.21673215,0.173679276,0.220962084
2012-10-24 20:00:00+00:00,0.176351096,0.162990764,0.065267458,0.167964426,0.228115133,0.339886314,0.205607559,0.241634444,0.228442647,0.085725852,0.0806,0.073225,0.11355,0.058899999999999994,0.215438799,0.175250227,0.222751949
2012-10-25 20:00:00+00:00,0.171047121,0.155560473,0.065406341,0.168964013,0.224111126,0.331021155,0.205073993,0.246173769,0.226994076,0.083960338,0.08265,0.0729,0.11395,0.05915,0.212493108,0.177632913,0.221941178
2012-10-26 20:00:00+00:00,0.172956759,0.160539364,0.06515407,0.163712299,0.221679819,0.327147742,0.198347199,0.233449114,0.229538141,0.084186376,0.08275,0.0727,0.1159,0.0593,0.210206414,0.176245538,0.221896592
2012-10-31 20:00:00+00:00,0.175752125,0.164861182,0.063371661,0.162329116,0.216220323,0.324414685,0.188559208,0.224641765,0.23574347,0.083570526,0.07905000000000001,0.07205,0.113325,0.059125,0.207756602,0.171294769,0.21591394
2012-11-01 20:00:00+00:00,0.16071638,0.163523,0.065122999,0.160429626,0.220102013,0.328706641,0.194910233,0.228310158,0.2263272,0.085444699,0.079925,0.07255,0.11297499999999999,0.058600000000000006,0.203199533,0.170214622,0.216002771
2012-11-02 20:00:00+00:00,0.1704861,0.163330744,0.064799676,0.1646057,0.2116745,0.322953174,0.1871375,0.229187542,0.232385599,0.084161475,0.0818,0.0722,0.11320000000000001,0.058825,0.199749317,0.169510006,0.217871247
2012-11-05 21:00:00+00:00,0.169873673,0.149807294,0.064511294,0.168974993,0.228619599,0.3295506,0.194410966,0.238702669,0.226209858,0.08475154,0.08234999999999999,0.070575,0.11257500000000001,0.0584,0.205182081,0.171499522,0.218706828
2012-11-06 21:00:00+00:00,0.16695445,0.15363082,0.064734423,0.172883616,0.219964909,0.324124399,0.184989019,0.239232477,0.221626191,0.086950823,0.08265,0.07195,0.1114,0.057800000000000004,0.203302581,0.172825076,0.218158562
2012-11-07 21:00:00+00:00,0.1772274,0.147129117,0.065256352,0.167608649,0.234377199,0.332658472,0.204101999,0.237537123,0.232720852,0.088861529,0.0802,0.07214999999999999,0.1081,0.057050000000000003,0.208289339,0.169052567,0.215357514
2012-11-08 21:00:00+00:00,0.182023871,0.144919905,0.063602729,0.170183794,0.238656053,0.330386666,0.208968059,0.244326526,0.240473626,0.090309647,0.08015,0.07214999999999999,0.1108,0.05715,0.208322279,0.169418043,0.218470698
2012-11-09 21:00:00+00:00,0.184154013,0.141288823,0.060842482,0.169875066,0.250453985,0.327032184,0.205421306,0.234076222,0.223529647,0.092597382,0.079275,0.074125,0.113975,0.057699999999999994,0.212807001,0.168049603,0.220217181
2012-11-12 21:00:00+00:00,0.176468595,0.156505785,0.061852835,0.1711389,0.233605099,0.328726939,0.201158841,0.242029404,0.224660794,0.092195879,0.07865,0.076475,0.11109999999999999,0.0575,0.213113418,0.166136002,0.21852943
2012-11-13 21:00:00+00:00,0.174734479,0.147894817,0.060885458,0.170450066,0.233662829,0.321820171,0.209209379,0.230731276,0.23111987,0.097455905,0.0782,0.074825,0.10965,0.058225,0.209726708,0.162977169,0.218756112
2012-11-14 21:00:00+00:00,0.181694466,0.146941351,0.058387529,0.17056725,0.244239333,0.322890476,0.211678929,0.241396478,0.232023435,0.0967754,0.08134999999999999,0.074075,0.10957499999999999,0.057675000000000004,0.210441295,0.161111496,0.214521144
2012-11-15 21:00:00+00:00,0.18218632,0.153252056,0.058965552,0.16361538,0.24429624,0.32036253,0.2126008,0.242214782,0.235650176,0.099255243,0.08795,0.073925,0.11259999999999999,0.05745,0.210628662,0.166948788,0.214812378
2012-11-16 21:00:00+00:00,0.176204323,0.154211822,0.057928276,0.157244133,0.242381086,0.318097237,0.202356016,0.238956539,0.237066088,0.09966338,0.08775000000000001,0.075325,0.11282500000000001,0.057350000000000005,0.21152962,0.169946671,0.213007787
2012-11-19 21:00:00+00:00,0.162610473,0.148554764,0.054707929,0.157971769,0.226570906,0.320134168,0.185410133,0.238304558,0.21386847,0.092856164,0.08657500000000001,0.073125,0.108975,0.0571,0.200882371,0.172215031,0.209609207
2012-11-20 21:00:00+00:00,0.163877039,0.151568705,0.055892273,0.15328696,0.22554775,0.307783555,0.18736658,0.232606419,0.209264435,0.091716914,0.0882,0.072875,0.108725,0.057175000000000004,0.19859314,0.17058887,0.208137894
2012-11-21 21:00:00+00:00,0.168768266,0.153234558,0.054915882,0.151126666,0.2226819,0.314466457,0.191302066,0.228752215,0.222292082,0.091751694,0.0922,0.073075,0.1118,0.0571,0.193616206,0.171666416,0.205170555
2012-11-23 18:00:00+00:00,0.16462114,0.154589639,0.055038901,0.152422195,0.219620256,0.304349053,0.188058858,0.21144285,0.203043685,0.088652395,0.0922,0.07335,0.1128,0.056425,0.191479153,0.17787071,0.204133985
2012-11-26 21:00:00+00:00,0.163224259,0.14069247,0.054070588,0.15019607,0.220932599,0.308251946,0.187244149,0.218889952,0.203466164,0.088089379,0.09244999999999999,0.07352500000000001,0.113075,0.0565,0.19474598,0.17962769,0.203808242
2012-11-27 21:00:00+00:00,0.164670861,0.149249924,0.05494975,0.148822923,0.221564486,0.295539085,0.181707675,0.220880444,0.2081067,0.088536099,0.09054999999999999,0.072925,0.11155,0.056150000000000005,0.193461513,0.176377573,0.205022321
2012-11-28 21:00:00+00:00,0.161648773,0.154934129,0.054995705,0.149621399,0.21124264,0.302030222,0.184282986,0.223702526,0.218650305,0.090412058,0.0889,0.0735,0.11172499999999999,0.0564,0.191934076,0.175256079,0.205044955
2012-11-29 21:00:00+00:00,0.16037375,0.154148307,0.055438323,0.147383605,0.21545755,0.301419911,0.176044025,0.221582999,0.212399208,0.08848522,0.08935,0.07339999999999999,0.11137499999999999,0.05525,0.187054048,0.17452316,0.205783223
2012-11-30 21:00:00+00:00,0.164357113,0.141258176,0.054064414,0.150082299,0.216354353,0.301068438,0.1811048,0.22663738,0.214195961,0.091067941,0.09202500000000001,0.073725,0.112925,0.0557,0.187047732,0.175904995,0.204412884
2012-12-03 21:00:00+00:00,0.166364073,0.142016682,0.05603231,0.146601938,0.217945753,0.298751301,0.180928856,0.220304571,0.217189753,0.091444257,0.09154999999999999,0.073475,0.112925,0.056575,0.186241708,0.179197691,0.204445162
2012-12-04 21:00:00+00:00,0.1700636,0.146966352,0.057068823,0.143177,0.218833959,0.293699852,0.1866608,0.237394,0.222579905,0.097738847,0.089075,0.0733,0.11044999999999999,0.05462500000000001,0.186535468,0.177978918,0.204212735
2012-12-05 21:00:00+00:00,0.164091259,0.147797417,0.054320441,0.143351713,0.21193966,0.299371942,0.186148916,0.23967579,0.215381423,0.094041029,0.090375,0.07245,0.10955,0.053925,0.187334986,0.178081389,0.208048395
2012-12-06 21:00:00+00:00,0.159284066,0.142615214,0.05369262,0.14497,0.218381266,0.302478234,0.192793931,0.228590488,0.205189482,0.097607367,0.09095,0.072475,0.10915,0.053875,0.185929222,0.180560772,0.210067698
2012-12-07 21:00:00+00:00,0.16384898,0.145260758,0.054535188,0.151018327,0.20909376,0.307917111,0.18523892,0.218566333,0.203583485,0.097671133,0.09119999999999999,0.07352500000000001,0.109925,0.054375,0.186607584,0.181360905,0.211038817
2012-12-10 21:00:00+00:00,0.159558373,0.132428835,0.05447947,0.149996799,0.206507106,0.295602657,0.192508386,0.227338793,0.19827127,0.098118105,0.0906,0.074325,0.10827500000000001,0.054525,0.186926133,0.181544188,0.214841521
2012-12-11 21:00:00+00:00,0.156754866,0.153028777,0.054664176,0.150414075,0.218685076,0.290349736,0.192249091,0.226111682,0.212476266,0.09667547,0.09,0.074525,0.106925,0.054299999999999994,0.184265483,0.181325179,0.214116158
2012-12-12 21:00:00+00:00,0.163341299,0.139764802,0.054434679,0.148893819,0.214981399,0.293927625,0.187463999,0.220512857,0.215777555,0.095500444,0.09422499999999999,0.07405,0.10994999999999999,0.054000000000000006,0.18511337,0.181077688,0.212788042
2012-12-13 21:00:00+00:00,0.166096283,0.141665352,0.054789041,0.147543933,0.213367083,0.303701047,0.197349891,0.235840285,0.20715087,0.096784339,0.09609999999999999,0.0735,0.11155,0.054299999999999994,0.186440351,0.188301084,0.215625193
2012-12-14 21:00:00+00:00,0.172088653,0.14160647,0.054624864,0.145852286,0.21753276,0.295319063,0.198752186,0.227036711,0.214660752,0.094392623,0.090875,0.072675,0.11055,0.05462500000000001,0.188189606,0.187674775,0.218069028
2012-12-17 21:00:00+00:00,0.164555385,0.141592499,0.05453992,0.14139136,0.212096229,0.302883299,0.195910118,0.221263166,0.216680329,0.091564885,0.08775000000000001,0.0727,0.10710000000000001,0.054150000000000004,0.188614352,0.181880234,0.218810593
2012-12-18 21:00:00+00:00,0.157687033,0.148259752,0.054871305,0.145596346,0.207588399,0.294015066,0.186282,0.244000704,0.206831435,0.091734564,0.08675000000000001,0.073725,0.10529999999999999,0.054025,0.185895152,0.182584193,0.218110305
2012-12-19 21:00:00+00:00,0.163665191,0.137499748,0.053495629,0.142212926,0.211071153,0.290321761,0.191309463,0.210844412,0.209565798,0.091603252,0.08862500000000001,0.07375,0.10522500000000001,0.053825000000000005,0.183260858,0.1884649,0.217935165
2012-12-20 21:00:00+00:00,0.1626252,0.136404599,0.054617599,0.1453297,0.2086512,0.285752501,0.190391963,0.231236904,0.208889248,0.089937999,0.08725,0.07445,0.105125,0.053899999999999997,0.185043248,0.187674255,0.218024093
2012-12-21 21:00:00+00:00,0.170801134,0.152175873,0.0531732,0.140255999,0.2199815,0.285506571,0.1933643,0.235607619,0.210560634,0.091887422,0.0892,0.0746,0.10932499999999999,0.054400000000000004,0.188735223,0.194020583,0.222727478
2012-12-24 18:00:00+00:00,0.169857349,0.157831373,0.0543916,0.139357399,0.2165006,0.288665815,0.19493475,0.244761707,0.210058876,0.096113954,0.09035,0.074775,0.109925,0.054450000000000005,0.188963394,0.194020583,0.22250336
2012-12-26 21:00:00+00:00,0.178115999,0.149765904,0.0572059,0.1379799,0.2194198,0.28772092,0.201290424,0.219009985,0.215381114,0.097104135,0.09307499999999999,0.074775,0.10957499999999999,0.05425,0.188963394,0.201141038,0.22250336
2012-12-27 21:00:00+00:00,0.176372,0.14231253,0.054102,0.1436652,0.2235806,0.283445476,0.201358942,0.254710222,0.22139366,0.095327572,0.09415,0.07515,0.11067500000000001,0.05462500000000001,0.187956941,0.213853849,0.222409474
2012-12-28 21:00:00+00:00,0.188213911,0.149876661,0.0525512,0.148042047,0.254890183,0.289189955,0.190722981,0.267911571,0.227682914,0.098682689,0.09555,0.075225,0.1118,0.055525000000000005,0.190931079,0.212536326,0.224848115
2012-12-31 21:00:00+00:00,0.170112069,0.149542542,0.0543778,0.147773376,0.219419259,0.278839196,0.189932806,0.230048619,0.211589428,0.092087017,0.09585,0.078025,0.1114,0.055374999999999994,0.190082322,0.212536326,0.227210933
2013-01-02 21:00:00+00:00,0.151175932,0.143621244,0.0529163,0.14253603,0.204803003,0.273452247,0.176821669,0.228999174,0.203120679,0.082792956,0.09230000000000001,0.075475,0.10949999999999999,0.055625,0.181212209,0.212536326,0.225305692
2013-01-03 21:00:00+00:00,0.155545552,0.138273669,0.0549728,0.142012372,0.195799643,0.269965987,0.182643657,0.233039752,0.201153606,0.085115069,0.08967499999999999,0.07490000000000001,0.10677500000000001,0.05595,0.182005622,0.212536326,0.222654232
2013-01-04 21:00:00+00:00,0.151172644,0.148089428,0.0539475,0.139043884,0.193274859,0.261160444,0.180148684,0.227981866,0.195923028,0.08322062,0.09695000000000001,0.0748,0.10932499999999999,0.056150000000000005,0.181389546,0.209022689,0.219642481
2013-01-07 21:00:00+00:00,0.155869788,0.146737214,0.0523875,0.139710672,0.199478637,0.254599657,0.180175474,0.226603523,0.203319707,0.078722317,0.094275,0.071825,0.10957499999999999,0.0558,0.182357784,0.196441781,0.217933737
2013-01-08 21:00:00+00:00,0.15484845,0.149044511,0.0531488,0.136957261,0.201968931,0.248048323,0.178599193,0.232751688,0.201696339,0.079041533,0.092525,0.069925,0.108475,0.055625,0.182908924,0.184213213,0.215091268
2013-01-09 21:00:00+00:00,0.157975915,0.150476266,0.0538624,0.138913688,0.203269825,0.252244177,0.180042379,0.218565714,0.197121257,0.077577035,0.096475,0.070225,0.1104,0.055224999999999996,0.175512017,0.182938304,0.210983658
2013-01-10 21:00:00+00:00,0.149669852,0.138192407,0.0532976,0.136768023,0.197847551,0.257447857,0.173967067,0.220832552,0.196432012,0.076891844,0.101525,0.0706,0.1149,0.055099999999999996,0.17584875,0.186722308,0.208276638
2013-01-11 21:00:00+00:00,0.149633498,0.137864777,0.052711,0.146471186,0.196972259,0.264140228,0.17533922,0.219909577,0.202107652,0.072828761,0.10400000000000001,0.0732,0.118675,0.05575,0.175320255,0.191237471,0.205930616
2013-01-14 21:00:00+00:00,0.154565386,0.142015047,0.0531704,0.141792637,0.19576832,0.260935365,0.17946704,0.215900409,0.202720476,0.075759627,0.103875,0.073075,0.118825,0.05665,0.172886183,0.191237471,0.206468715
2013-01-15 21:00:00+00:00,0.155435871,0.147094706,0.053448799,0.146770322,0.188504031,0.256010771,0.178509994,0.216099301,0.192377374,0.071952672,0.103175,0.074975,0.119375,0.056900000000000006,0.174217751,0.19341048,0.208291294
2013-01-16 21:00:00+00:00,0.15525733,0.144299415,0.051932399,0.149356355,0.193176084,0.261057726,0.175730808,0.218509047,0.190853946,0.072202517,0.1015,0.07585,0.119825,0.057125,0.17401363,0.194396231,0.208568322
2013-01-17 21:00:00+00:00,0.153028852,0.148993199,0.0490115,0.154321949,0.187759418,0.263003549,0.169127503,0.2195884,0.186833514,0.068491072,0.1073,0.07755,0.12275,0.05715,0.172768335,0.195695972,0.209342012
2013-01-18 21:00:00+00:00,0.145147044,0.149707384,0.048070899,0.149493935,0.188267718,0.247500599,0.164444311,0.210456698,0.182154761,0.071401244,0.1091,0.07814999999,0.124825,0.059325,0.173514205,0.200770163,0.207466376
2013-01-22 21:00:00+00:00,0.137858362,0.143155923,0.049476488,0.139087747,0.181457762,0.248779647,0.1610344,0.206232561,0.179154476,0.069367339,0.10045,0.078125,0.11779999999999999,0.059425,0.172933585,0.190586008,0.204103433
2013-01-23 21:00:00+00:00,0.134915406,0.145004899,0.0505904,0.135196693,0.173696991,0.246974577,0.159781528,0.2033048,0.1767514,0.066387766,0.09835,0.077225,0.11449999999999999,0.058175,0.173604042,0.182830046,0.199832402
2013-01-24 21:00:00+00:00,0.135931555,0.13483306,0.050019515,0.136920911,0.1798297,0.239935963,0.16100021,0.204525082,0.176116476,0.064960552,0.1072,0.0759,0.11869999999999999,0.058075,0.172317807,0.183001072,0.195631852
2013-01-25 21:00:00+00:00,0.137152996,0.149901807,0.051149507,0.140046279,0.179290906,0.237324454,0.160259064,0.202825936,0.174301377,0.067767992,0.1119,0.078375,0.120725,0.057475,0.170759221,0.194398348,0.194734054
2013-01-28 21:00:00+00:00,0.135610984,0.13949419,0.052097142,0.140905359,0.175973218,0.234788018,0.15712361,0.202299676,0.178007952,0.067396,0.110725,0.08744999999999999,0.11985,0.057824999999999994,0.170580038,0.19693539,0.191411825
2013-01-29 21:00:00+00:00,0.136323118,0.131531126,0.051516328,0.135949315,0.178981601,0.23559745,0.154234391,0.198776,0.175745549,0.071517015,0.1085,0.081175,0.11855,0.0581,0.170331955,0.195240042,0.192576374
2013-01-30 21:00:00+00:00,0.142093525,0.136369841,0.053915749,0.136842325,0.178697949,0.229105309,0.154022456,0.198141571,0.17902845,0.075128533,0.1105,0.08134999999999999,0.11779999999999999,0.058575,0.156962041,0.201541374,0.196813692
2013-01-31 21:00:00+00:00,0.14349155,0.148172571,0.052650571,0.142770508,0.182208949,0.235443999,0.162636545,0.198024161,0.1811272,0.075762442,0.111,0.083425,0.118675,0.058825,0.159498897,0.201382396,0.199193653
2013-02-01 21:00:00+00:00,0.135499606,0.142835999,0.056429977,0.138627567,0.181806136,0.226804965,0.156238227,0.197758793,0.178963644,0.076391022,0.11375,0.084875,0.11962500000000001,0.058425000000000005,0.158836615,0.203031759,0.197140066
2013-02-04 21:00:00+00:00,0.144965999,0.154193488,0.056432285,0.139880677,0.186266811,0.231026536,0.16311659,0.202887066,0.180935346,0.079931574,0.114925,0.08564999999999999,0.12077500000000001,0.059025,0.166542254,0.202324324,0.19799398
2013-02-05 21:00:00+00:00,0.138320811,0.135947695,0.055746952,0.136536616,0.17405322,0.235614499,0.163804984,0.200792971,0.180913619,0.081636571,0.12205,0.08275,0.12415,0.0601,0.164237505,0.202840554,0.200658916
2013-02-06 21:00:00+00:00,0.138911579,0.134892882,0.05448046,0.140532533,0.177554364,0.235108254,0.1581526,0.201832406,0.179858958,0.083878222,0.12342499999999999,0.084225,0.12615,0.060375,0.178473052,0.208674176,0.197754492
2013-02-07 21:00:00+00:00,0.141715898,0.139444874,0.05366123,0.138468772,0.179296677,0.2234582,0.158644454,0.1991656,0.180831644,0.084255653,0.1188,0.084925,0.127275,0.060274999999999995,0.18031911,0.212304252,0.198708806
2013-02-08 21:00:00+00:00,0.138240749,0.149088857,0.052178642,0.13713763,0.179112406,0.221159272,0.160129227,0.202642142,0.173964419,0.082336666,0.11800000000000001,0.085475,0.125625,0.060225,0.177151025,0.217669505,0.199184856
2013-02-11 21:00:00+00:00,0.137337247,0.149656949,0.052863174,0.140887864,0.183197711,0.2231734,0.159443568,0.20266145,0.175125079,0.081446706,0.12092499999999999,0.08535,0.12655,0.060025,0.177665674,0.217669505,0.199184856
2013-02-12 21:00:00+00:00,0.134981783,0.134421844,0.052541588,0.140426127,0.180003301,0.211442145,0.158863636,0.19992573,0.168753288,0.078687144,0.12265000000000001,0.08522500000000001,0.12765,0.06005,0.175399111,0.224410687,0.199184856
2013-02-13 21:00:00+00:00,0.136018759,0.134817257,0.054470428,0.144019627,0.178304806,0.209500563,0.158241936,0.192270047,0.166787714,0.083261928,0.119425,0.082925,0.12435,0.05995,0.174348099,0.223574341,0.199184856
2013-02-14 21:00:00+00:00,0.134903855,0.132179758,0.052346374,0.143054416,0.179184298,0.206985063,0.157118227,0.194323663,0.16719346,0.081575841,0.1193,0.083125,0.12095,0.06,0.176251324,0.220529213,0.197601633
2013-02-15 21:00:00+00:00,0.134750467,0.140106587,0.052504407,0.146977118,0.186116084,0.217595581,0.156557563,0.194349034,0.16353873,0.080912793,0.119975,0.08377499999999999,0.12,0.060225,0.178123976,0.221966608,0.195094875
2013-02-19 21:00:00+00:00,0.131166213,0.132158361,0.052072428,0.145165206,0.176239781,0.211422872,0.153766463,0.197157999,0.159855561,0.082019895,0.11627499999999999,0.086175,0.117075,0.060075,0.173787834,0.22431452,0.196602468
2013-02-20 21:00:00+00:00,0.140925362,0.148136374,0.052878412,0.157417193,0.179442596,0.231968145,0.154393936,0.191623243,0.162992942,0.082989507,0.115575,0.085575,0.115875,0.05945,0.176535739,0.220586407,0.194684202
2013-02-21 21:00:00+00:00,0.146702013,0.133768253,0.053083661,0.147350284,0.189161591,0.2481986,0.163837,0.189727493,0.168649777,0.081999898,0.11635,0.08744999999999999,0.11872500000000001,0.060274999999999995,0.182258214,0.217628286,0.198772659
2013-02-22 21:00:00+00:00,0.140148813,0.150100433,0.052814566,0.143621333,0.173111116,0.240949318,0.158472727,0.189023068,0.166669733,0.083228333,0.117125,0.08715,0.11897500000000001,0.061075,0.177446825,0.21816327,0.197286435
2013-02-25 21:00:00+00:00,0.157554745,0.145162714,0.052503453,0.14896282,0.192616438,0.246989636,0.173278181,0.198797474,0.178088466,0.084572079,0.1207,0.08932499999999999,0.12145,0.061,0.175312397,0.219794559,0.199248383
2013-02-26 21:00:00+00:00,0.154190355,0.13587478,0.052486657,0.141557355,0.195233166,0.248572859,0.172269431,0.200920493,0.175586784,0.083413517,0.11925000000000001,0.093825,0.12869999999999998,0.06105000000000001,0.201745476,0.221917888,0.20642618
2013-02-27 21:00:00+00:00,0.144770959,0.142429671,0.052729199,0.13953932,0.182616347,0.239996272,0.162789909,0.208885618,0.167784057,0.082030685,0.11685000000000001,0.0926,0.12925,0.0611,0.197798172,0.225419905,0.20303863
2013-02-28 21:00:00+00:00,0.145923155,0.13539622,0.052731152,0.140959322,0.182183152,0.239498695,0.162978856,0.203538718,0.170369796,0.081529047,0.11485,0.08904999999999999,0.1245,0.0604,0.185664099,0.221231132,0.198734867
2013-03-01 21:00:00+00:00,0.145228805,0.127148904,0.054244468,0.141795105,0.184095308,0.232106127,0.163384972,0.194041,0.170051507,0.081110819,0.11654999999999999,0.0891,0.124775,0.05985,0.188424347,0.218518407,0.198072109
2013-03-04 21:00:00+00:00,0.141501355,0.140820676,0.05496019,0.142749728,0.184283667,0.235390772,0.163529372,0.207957774,0.172036609,0.081363119,0.116975,0.08902499999999999,0.125675,0.06,0.186861979,0.214902881,0.204506474
2013-03-05 21:00:00+00:00,0.13765745,0.128003411,0.056044333,0.14079023,0.184017525,0.223506859,0.158338672,0.19750203,0.166384288,0.080264844,0.113925,0.08852499999999999,0.12300000000000001,0.059500000000000004,0.17781061,0.21348487,0.201454675
2013-03-06 21:00:00+00:00,0.138577313,0.129665184,0.054657198,0.139771767,0.182685454,0.22716714,0.159190727,0.202670781,0.165796888,0.079858098,0.11522500000000001,0.08752499999999999,0.12165,0.05915,0.178035602,0.21437394,0.199630846
2013-03-07 21:00:00+00:00,0.13705665,0.129339142,0.05552619,0.137176928,0.178959076,0.213009745,0.1569704,0.186684812,0.160495885,0.08052238,0.11885,0.08654999999999999,0.122125,0.058899999999999994,0.17796229,0.217285477,0.200875559
2013-03-08 21:00:00+00:00,0.135931949,0.132457777,0.055359111,0.132030667,0.183057767,0.230054375,0.157192475,0.189086712,0.157453301,0.07894928,0.1192,0.08539999999999999,0.12275,0.05815000000000001,0.172659207,0.223154602,0.201058775
2013-03-11 20:00:00+00:00,0.135120332,0.129659863,0.055596688,0.129497469,0.175064008,0.226571727,0.155466568,0.190257175,0.15701793,0.079524984,0.11765,0.087975,0.11962500000000001,0.0582,0.172521931,0.224367335,0.200661438
2013-03-12 20:00:00+00:00,0.135459383,0.130649828,0.054191142,0.128737618,0.174062928,0.218097509,0.155124968,0.203798943,0.158235371,0.078233999,0.1167,0.086325,0.11852499999999999,0.058600000000000006,0.173635465,0.223938177,0.203442635
2013-03-13 20:00:00+00:00,0.134948074,0.131180293,0.055826733,0.129759901,0.174920775,0.213004481,0.154483932,0.2022956,0.166231561,0.078308992,0.11662499999999999,0.087075,0.1183,0.058475,0.174211538,0.215641547,0.208281114
2013-03-14 20:00:00+00:00,0.130697599,0.138094911,0.054698044,0.132971742,0.171407348,0.207513254,0.152396727,0.195473818,0.164737222,0.072220866,0.117225,0.09265000000000001,0.1191,0.057999999999999996,0.171331839,0.21196812,0.204900313
2013-03-15 20:00:00+00:00,0.130064453,0.127020914,0.054005047,0.133650186,0.177572445,0.197835818,0.151955086,0.202729612,0.16256678,0.073082971,0.1155,0.09405,0.11795,0.058600000000000006,0.173315938,0.206273826,0.204541062
2013-03-18 20:00:00+00:00,0.14257785,0.128587136,0.051271157,0.134916486,0.182573708,0.198567113,0.156133893,0.204526753,0.167645109,0.072165873,0.11637499999999999,0.095275,0.12179999999999999,0.060149999999999995,0.17709302,0.218826774,0.210425671
2013-03-19 20:00:00+00:00,0.142379563,0.135460027,0.051803788,0.142153163,0.187049,0.207854127,0.161838727,0.210816075,0.182109181,0.076146253,0.1176,0.095725,0.12295,0.059800000000000006,0.183833566,0.209498184,0.206501795
2013-03-20 20:00:00+00:00,0.140239286,0.140379009,0.051158219,0.135959437,0.183264854,0.200939511,0.156482759,0.205427968,0.176258913,0.072281642,0.11715,0.095025,0.12265000000000001,0.060274999999999995,0.177954025,0.209498184,0.208640818
2013-03-21 20:00:00+00:00,0.145044799,0.139023418,0.049955673,0.136974828,0.187770542,0.210056181,0.151148118,0.216122812,0.177540909,0.075976323,0.11720000000000001,0.0935,0.122125,0.0617,0.180842575,0.210913448,0.208832967
2013-03-22 20:00:00+00:00,0.140178709,0.137989952,0.050141698,0.134400062,0.177742623,0.203783197,0.155720299,0.217403493,0.180414409,0.075799331,0.1193,0.09475,0.12390000000000001,0.062675,0.184762869,0.226884619,0.207819952
2013-03-25 20:00:00+00:00,0.144025199,0.1382806,0.0512149,0.134634799,0.1807412,0.196768999,0.160116376,0.21188195,0.17739848,0.078209299,0.11775000000000001,0.094925,0.12375,0.06215,0.185149162,0.213845676,0.202858238
2013-03-26 20:00:00+00:00,0.140718959,0.132837037,0.0505355,0.13007144,0.17610992,0.192389149,0.15065752,0.206699503,0.165676437,0.075004453,0.117575,0.09217499999999999,0.123375,0.06225,0.18492111,0.219039158,0.204344315
2013-03-27 20:00:00+00:00,0.141906079,0.134219725,0.0505269,0.132510159,0.173113519,0.19145355,0.1491156,0.207520406,0.174798087,0.074389814,0.11654999999999999,0.0902,0.12207499999999999,0.061849999999999995,0.193073398,0.21459373,0.201932189
2013-03-28 20:00:00+00:00,0.1365752,0.124889781,0.049794999,0.13251516,0.1796356,0.189895125,0.147508719,0.210791612,0.169513125,0.070201981,0.11625,0.09035,0.1226,0.061900000000000004,0.189555595,0.2184169,0.206199916
2013-04-01 20:00:00+00:00,0.1389815,0.131557968,0.0526212,0.13185164,0.17819718,0.194668,0.15704292,0.217410724,0.171229425,0.077948058,0.11647500000000001,0.09050000000000001,0.123575,0.061900000000000004,0.189555595,0.216419947,0.206199916
2013-04-02 20:00:00+00:00,0.134488999,0.121878862,0.0525825,0.135699899,0.172492079,0.19928575,0.155493464,0.217825126,0.172234384,0.075529697,0.1152,0.08990000000000001,0.12240000000000001,0.0617,0.181449029,0.216578422,0.203662785
2013-04-03 20:00:00+00:00,0.141929322,0.121542199,0.0510371,0.141071616,0.182788117,0.20529496,0.155969037,0.213946712,0.187285912,0.074798029,0.1127,0.09029999999999999,0.120375,0.062,0.185735515,0.212132641,0.202016235
2013-04-04 20:00:00+00:00,0.139828305,0.133446145,0.050291,0.144262516,0.185271256,0.217109299,0.157727266,0.220528349,0.180485468,0.074703068,0.117625,0.0931,0.11914999999999999,0.0616,0.189812483,0.208185781,0.202016235
2013-04-05 20:00:00+00:00,0.143694488,0.125788725,0.053599199,0.136888103,0.185393187,0.217964959,0.156864477,0.2089854,0.183352749,0.07773837,0.123025,0.09542500000000001,0.12365,0.06175,0.198196971,0.220431307,0.210347672
2013-04-08 20:00:00+00:00,0.137949349,0.1235246,0.052521999,0.137728542,0.173834843,0.209039454,0.157476457,0.208888215,0.178755981,0.075571209,0.1317,0.098575,0.1291,0.061224999999999995,0.196695688,0.230759034,0.209034678
2013-04-09 20:00:00+00:00,0.134900672,0.126939787,0.0526491,0.13448321,0.175750362,0.210967799,0.154607511,0.210985825,0.176384937,0.07197737,0.127,0.1035,0.1258,0.06125,0.196094464,0.235644346,0.207172204
2013-04-10 20:00:00+00:00,0.131395813,0.12164947,0.051055,0.140581271,0.168275879,0.201972625,0.14543804,0.217997106,0.164202968,0.070058604,0.12865000000000001,0.10137499999999999,0.129725,0.06055,0.189400152,0.224594572,0.206373419
2013-04-11 20:00:00+00:00,0.134050669,0.137250662,0.0525057,0.145416389,0.175106106,0.204281599,0.154025311,0.209700825,0.164233125,0.072446213,0.12985,0.096775,0.133375,0.059800000000000006,0.181306147,0.226446919,0.204592287
2013-04-12 20:00:00+00:00,0.133427291,0.121216573,0.049109499,0.169102688,0.175817874,0.216621809,0.146387576,0.218583125,0.170540706,0.069778353,0.12625,0.096125,0.132175,0.05925,0.188050326,0.228753051,0.208290281
2013-04-15 20:00:00+00:00,0.150136528,0.123291062,0.0488559,0.221430675,0.210457855,0.23668792,0.162721398,0.228189812,0.180531762,0.076172146,0.12394999999999999,0.09075,0.13570000000000002,0.05945,0.187877996,0.228066959,0.210382127
2013-04-16 20:00:00+00:00,0.139747805,0.122606193,0.050125,0.191489186,0.185253981,0.227954999,0.156439301,0.206920025,0.181080124,0.070711975,0.12435,0.09394999999999999,0.13665,0.05934999999999999,0.190793401,0.230828926,0.208944686
2013-04-17 20:00:00+00:00,0.153236328,0.126360874,0.050590799,0.188307021,0.203576948,0.248552859,0.169728186,0.228636424,0.1954486,0.075074548,0.125525,0.08705,0.13805,0.06005,0.200240201,0.224353701,0.21261636
2013-04-18 20:00:00+00:00,0.154900869,0.140272274,0.050988599,0.183930606,0.199532387,0.243784679,0.178336338,0.228258615,0.185253284,0.075999268,0.12712500000000002,0.091525,0.1391,0.06085,0.19859569,0.223142579,0.208464808
2013-04-19 20:00:00+00:00,0.149824247,0.123294043,0.0500093,0.180382211,0.194562212,0.236557599,0.170694891,0.208799843,0.179129562,0.073136658,0.12835000000000002,0.090875,0.13985,0.06125,0.195218422,0.222931389,0.208330403
2013-04-22 20:00:00+00:00,0.14617121,0.119549256,0.052008242,0.176421915,0.191559369,0.230706139,0.158664528,0.213391687,0.181160843,0.070660654,0.1253,0.09359999999999999,0.13795,0.0622,0.192610012,0.224388653,0.209267139
2013-04-23 20:00:00+00:00,0.136883825,0.126770893,0.051806818,0.179789057,0.187154928,0.2258336,0.153111376,0.20674805,0.16901945,0.0710673,0.124625,0.093825,0.13942500000000002,0.0629,0.18376052,0.221752461,0.210703589
2013-04-24 20:00:00+00:00,0.136495762,0.120219562,0.051634056,0.173489722,0.186629954,0.22523167,0.157705871,0.223330431,0.177830318,0.070321476,0.122825,0.091675,0.1353,0.0634,0.18134012,0.225358835,0.214478887
2013-04-25 20:00:00+00:00,0.136612108,0.130912031,0.051716687,0.170981338,0.184160383,0.219484032,0.153293654,0.208152406,0.171233593,0.066786621,0.11842499999999999,0.090275,0.13192500000000001,0.0634,0.182283815,0.228786404,0.216863339
2013-04-26 20:00:00+00:00,0.140148525,0.128721671,0.050600964,0.178525542,0.186748201,0.224019187,0.153383572,0.220812797,0.171353387,0.069794714,0.11645,0.08932499999999999,0.130575,0.06355000000000001,0.185761848,0.229999566,0.214314308
2013-04-29 20:00:00+00:00,0.138265371,0.118891125,0.0523658,0.174706983,0.175070847,0.218849806,0.154934225,0.2154045,0.17136035,0.066856187,0.114275,0.089475,0.129275,0.06375,0.181525412,0.229999566,0.211870363
2013-04-30 20:00:00+00:00,0.133888162,0.134894384,0.052453995,0.169409198,0.18146124,0.220130735,0.149905466,0.204216618,0.170759131,0.06926707,0.11197499999999999,0.0889,0.126925,0.0635,0.18472547,0.223256412,0.207625922
2013-05-01 20:00:00+00:00,0.142863152,0.135519418,0.051112896,0.177698499,0.180250238,0.221468758,0.157637533,0.208761321,0.170799687,0.074500312,0.11172499999999999,0.0888,0.12837500000000002,0.0637,0.18472547,0.212536487,0.207625922
2013-05-02 20:00:00+00:00,0.135151857,0.120966757,0.049891992,0.169939783,0.17686413,0.214138745,0.155054322,0.213447068,0.170867012,0.071693205,0.11205,0.08877499999999999,0.13019999999999998,0.062400000000000004,0.184834748,0.217873779,0.2077939
2013-05-03 20:00:00+00:00,0.134485305,0.120359212,0.05198685,0.168326905,0.178747661,0.224370006,0.154571016,0.203856612,0.169563011,0.071591125,0.11359999999999999,0.087925,0.129475,0.06215,0.180874435,0.217873779,0.205019568
2013-05-06 20:00:00+00:00,0.130511227,0.125537592,0.052607621,0.166850228,0.181942111,0.21900137,0.151118888,0.211661125,0.164160531,0.07469455,0.117575,0.084175,0.1301,0.06205,0.180888701,0.217873779,0.20138649
2013-05-07 20:00:00+00:00,0.132458759,0.133485262,0.052254071,0.171647416,0.174762477,0.222614254,0.150613525,0.204611598,0.173707862,0.073873671,0.116975,0.08485,0.132475,0.06215,0.172385645,0.218549031,0.198968501
2013-05-08 20:00:00+00:00,0.135169754,0.130755265,0.051280387,0.168366345,0.174160722,0.207518903,0.149355169,0.201587174,0.169110637,0.072599534,0.11455,0.08377499999999999,0.13172499999999998,0.060925,0.170785902,0.226735464,0.200245731
2013-05-09 20:00:00+00:00,0.136330923,0.139636999,0.052086499,0.170377057,0.179315271,0.216325677,0.152631972,0.209647149,0.179295599,0.075012349,0.12177500000000001,0.083675,0.13572499999999998,0.060425000000000006,0.174226422,0.226017185,0.202392265
2013-05-10 20:00:00+00:00,0.139588864,0.129050273,0.051613459,0.17795383,0.186300745,0.216037587,0.159108542,0.216677437,0.177482146,0.072485289,0.12105,0.08902499999999999,0.13390000000000002,0.060125000000000005,0.177401908,0.231918415,0.203672604
2013-05-13 20:00:00+00:00,0.141558852,0.133092537,0.0532632,0.182079769,0.187341186,0.214135735,0.16073444,0.213712012,0.184740637,0.077212887,0.11705,0.08737500000000001,0.13035,0.059775,0.178054339,0.235876743,0.20258991
2013-05-14 20:00:00+00:00,0.143454515,0.139514962,0.053471368,0.181864981,0.184711152,0.221112567,0.157906349,0.215293359,0.187532968,0.076997481,0.12105,0.08897500000000001,0.13075,0.059725,0.17643023,0.229319911,0.203154747
2013-05-15 20:00:00+00:00,0.141240955,0.146073678,0.053364887,0.19433421,0.190307949,0.219051819,0.15723241,0.211059375,0.1855634,0.077654962,0.11960000000000001,0.09095,0.126825,0.0593,0.177394235,0.233484933,0.201962595
2013-05-16 20:00:00+00:00,0.147215955,0.140526787,0.050252518,0.197288505,0.185157606,0.218411958,0.157664364,0.203919925,0.181013306,0.077207509,0.119125,0.0919,0.1253,0.058125,0.179644937,0.234410932,0.20747497
2013-05-17 20:00:00+00:00,0.142461661,0.149335618,0.05291029,0.205932467,0.191643233,0.223112206,0.160444011,0.216658343,0.18416095,0.077892056,0.121225,0.09307499999999999,0.13155,0.057975000000000006,0.181187646,0.232970967,0.20747497
2013-05-20 20:00:00+00:00,0.150440341,0.136153757,0.053499578,0.196412216,0.184969779,0.214971173,0.160209152,0.217964019,0.167806156,0.077058506,0.11895,0.09217499999999999,0.12875,0.0583,0.181713522,0.2340494,0.212752741
2013-05-21 20:00:00+00:00,0.153174652,0.137689699,0.0526045,0.199664515,0.187742021,0.22189587,0.163669821,0.209398399,0.185619849,0.07587875,0.11695,0.0882,0.1272,0.05805,0.183628047,0.233413535,0.211357287
2013-05-22 20:00:00+00:00,0.152949679,0.152089946,0.053357874,0.198133786,0.195229132,0.218485054,0.160233891,0.212062676,0.191446281,0.078963578,0.11785,0.0894,0.12555,0.05805,0.179768547,0.236386541,0.210323147
2013-05-23 20:00:00+00:00,0.153440491,0.143825725,0.052395246,0.195085362,0.200251028,0.228443967,0.164650771,0.219525257,0.188389818,0.081639359,0.120125,0.09210000000000002,0.13055,0.057775,0.190435829,0.270745198,0.218262275
2013-05-24 20:00:00+00:00,0.148872101,0.14078025,0.054185125,0.1917776,0.188905771,0.226319419,0.162708772,0.217897114,0.194388968,0.081357845,0.12272500000000001,0.09195,0.131225,0.05805,0.191290403,0.27263184,0.213053031
2013-05-28 20:00:00+00:00,0.152874008,0.143769971,0.057278999,0.192854608,0.194363055,0.2210848,0.159580362,0.214884095,0.193834624,0.08561625,0.12054999999999999,0.09359999999999999,0.131,0.05785,0.182842058,0.26398801,0.206713126
2013-05-29 20:00:00+00:00,0.153294303,0.155535211,0.058685229,0.182677815,0.194530088,0.234171451,0.161083016,0.218947671,0.196078843,0.087040596,0.122975,0.09445,0.132725,0.058175,0.190649295,0.252398175,0.206955468
2013-05-30 20:00:00+00:00,0.147603496,0.144840287,0.057520787,0.177096271,0.197215672,0.230264435,0.156212872,0.222462942,0.193985699,0.088529259,0.1246,0.09405,0.133325,0.058225,0.187902874,0.258618162,0.209148148
2013-05-31 20:00:00+00:00,0.157755533,0.154918906,0.060738937,0.181142779,0.201549166,0.235648448,0.169522987,0.209866583,0.197733924,0.101603456,0.125,0.091275,0.135625,0.059025,0.19076158,0.255024008,0.207549694
2013-06-03 20:00:00+00:00,0.158811237,0.14765355,0.065115899,0.178023744,0.204198766,0.240849561,0.169356132,0.214010742,0.19537,0.1055162,0.126075,0.091575,0.136275,0.059524999999999995,0.194719582,0.251533448,0.205604556
2013-06-04 20:00:00+00:00,0.157642989,0.149613843,0.066085087,0.184321783,0.202144784,0.24220529,0.166459273,0.211910357,0.201222734,0.100934231,0.125425,0.091525,0.136075,0.059125,0.193432594,0.256356416,0.207018919
2013-06-05 20:00:00+00:00,0.164275808,0.155831306,0.065870343,0.183706291,0.205532593,0.242664425,0.175695322,0.226351409,0.205908387,0.102177362,0.12392500000000001,0.09054999999999999,0.13985,0.059375,0.200598225,0.272139783,0.208686372
2013-06-06 20:00:00+00:00,0.156861206,0.158241693,0.066172234,0.181109659,0.206408305,0.2357179,0.173131598,0.237319438,0.212020593,0.098662837,0.12645,0.09050000000000001,0.144775,0.059524999999999995,0.202547392,0.270884792,0.211419188
2013-06-07 20:00:00+00:00,0.155013644,0.155084675,0.066640693,0.190558671,0.200505,0.229619909,0.168986786,0.228912114,0.208111092,0.102320087,0.13065,0.091375,0.1514,0.05995,0.194159414,0.273723437,0.219005176
2013-06-10 20:00:00+00:00,0.151804877,0.152746368,0.065314501,0.180330047,0.203623566,0.216382096,0.167216561,0.22382138,0.207436737,0.104912343,0.13135,0.0969,0.1484,0.060599999999999994,0.190110318,0.270116054,0.211423047
2013-06-11 20:00:00+00:00,0.164457762,0.149351175,0.067916109,0.189876991,0.201834474,0.224508783,0.169076864,0.239750066,0.218173906,0.104128318,0.13315,0.09972500000000001,0.15130000000000002,0.061974999999999995,0.197196482,0.271733212,0.214752107
2013-06-12 20:00:00+00:00,0.16920663,0.160398425,0.069029775,0.184757033,0.215925077,0.237401537,0.176166257,0.2351177,0.22397064,0.106274874,0.137925,0.09995,0.15515,0.061725,0.199753789,0.27484314,0.214752107
2013-06-13 20:00:00+00:00,0.164619261,0.167088924,0.066839875,0.183408267,0.203929801,0.224347722,0.17178501,0.24758299,0.221151649,0.10802175,0.14375,0.107,0.165,0.06415,0.202003646,0.294803566,0.223931575
2013-06-14 20:00:00+00:00,0.17061314,0.157586971,0.069835996,0.180244091,0.204162615,0.217958712,0.178920406,0.255145757,0.225115953,0.107525267,0.1414,0.100075,0.161,0.0637,0.200970977,0.28326395,0.222629923
2013-06-17 20:00:00+00:00,0.161928703,0.163550387,0.069138687,0.178614445,0.212595111,0.214310748,0.166421186,0.235401885,0.224529237,0.106959937,0.13567500000000002,0.098025,0.15455,0.063,0.196467516,0.277337885,0.218171959
2013-06-18 20:00:00+00:00,0.158170257,0.162213106,0.069998424,0.188876605,0.203254745,0.212348664,0.170234677,0.227219009,0.222197949,0.108350157,0.13735,0.098375,0.15564999999999998,0.06292500000000001,0.196345902,0.276668524,0.21741305
2013-06-19 20:00:00+00:00,0.161286518,0.158529181,0.072687475,0.187140142,0.199863484,0.22009867,0.166882513,0.234764285,0.221139625,0.10767035,0.137875,0.09815,0.157825,0.06245,0.194492317,0.279575268,0.22125103
2013-06-20 20:00:00+00:00,0.174284786,0.165741248,0.077914646,0.216743579,0.218475186,0.239756164,0.179045389,0.24205995,0.245921409,0.113049559,0.14455,0.109475,0.1611,0.0695,0.209162744,0.274113329,0.231175415
2013-06-21 20:00:00+00:00,0.175182788,0.171479125,0.082290037,0.210613432,0.224926881,0.244964119,0.188044054,0.238011838,0.237312099,0.111720046,0.14485,0.1116,0.16204999999999997,0.0742,0.212887329,0.279653334,0.238603396
2013-06-24 20:00:00+00:00,0.184467904,0.168999079,0.084824315,0.206854009,0.233413861,0.234063819,0.188181536,0.232217738,0.275401154,0.124263112,0.150025,0.11914999999999999,0.16435,0.082175,0.221351583,0.278190806,0.250031698
2013-06-25 20:00:00+00:00,0.178280199,0.166628,0.079332,0.2021977,0.228836799,0.234288735,0.192230599,0.267194285,0.225612999,0.113811399,0.1465,0.1157,0.16265000000000002,0.081075,0.214603004,0.278812897,0.255596972
2013-06-26 20:00:00+00:00,0.16666448,0.164937622,0.077250999,0.226217488,0.21142474,0.219590903,0.173816999,0.247396799,0.236424769,0.117342499,0.1458,0.115625,0.16125,0.0815,0.206630711,0.276781642,0.244329303
2013-06-27 20:00:00+00:00,0.17293304,0.160171322,0.0733328,0.242251736,0.20833504,0.224526609,0.180709285,0.248897557,0.233780011,0.113753333,0.1424,0.1149,0.155,0.08042500000000001,0.203981153,0.272034348,0.246098251
2013-06-28 20:00:00+00:00,0.170707,0.162087266,0.072504,0.238313504,0.211783446,0.232146958,0.181649599,0.247576342,0.220531666,0.1235042,0.138875,0.11259999999999999,0.1525,0.0801,0.207798827,0.277205375,0.240909779
2013-07-01 20:00:00+00:00,0.166170079,0.159025077,0.074795,0.233724872,0.20363476,0.219359729,0.172706,0.240543999,0.234771733,0.121903488,0.13905,0.11044999999999999,0.14935,0.08,0.206133935,0.276627195,0.240909779
2013-07-02 20:00:00+00:00,0.1654424,0.159377499,0.075951,0.2298215,0.210295899,0.230350462,0.1701,0.238132023,0.233325718,0.121117005,0.137525,0.10845,0.1474,0.079025,0.205775832,0.273798644,0.243727232
2013-07-03 17:00:00+00:00,0.163962338,0.166541833,0.0763139,0.228868236,0.200958138,0.226548632,0.175803661,0.2630966,0.257473333,0.119245666,0.139825,0.108825,0.1555,0.07835,0.210639448,0.275691331,0.256111135
2013-07-05 20:00:00+00:00,0.157146546,0.163917911,0.0805414,0.227342569,0.20043723,0.234886174,0.16579843,0.234574573,0.227793666,0.122038055,0.136125,0.10965,0.151075,0.07735,0.209586872,0.277409292,0.247113195
2013-07-08 20:00:00+00:00,0.154309469,0.163048477,0.079490399,0.220404747,0.197555192,0.229334909,0.163601461,0.2365182,0.231118733,0.116281444,0.133725,0.111825,0.148125,0.0793,0.201626614,0.275072301,0.249655088
2013-07-09 20:00:00+00:00,0.150694738,0.162184999,0.0786395,0.222350898,0.194085261,0.224485901,0.166276,0.234658771,0.2123766,0.1037318,0.132175,0.106375,0.1448,0.07919999999999999,0.198519783,0.267930775,0.241408733
2013-07-10 20:00:00+00:00,0.148230824,0.159776444,0.0797504,0.224171853,0.189260923,0.236171561,0.157935915,0.235762119,0.233884399,0.100756666,0.1336,0.10157500000000001,0.14575,0.0783,0.197632637,0.264704434,0.232871785
2013-07-11 20:00:00+00:00,0.149673753,0.151547922,0.0750841,0.20802248,0.183999076,0.240452643,0.14949,0.224250999,0.221336722,0.099858388,0.13735,0.10095000000000001,0.1463,0.079275,0.192397033,0.25697882,0.228020578
2013-07-12 20:00:00+00:00,0.148259623,0.152324266,0.076589999,0.206090661,0.182069384,0.220421225,0.15914123,0.228242714,0.226551333,0.096252933,0.13505,0.097375,0.145025,0.0821,0.192381195,0.242529224,0.228838266
2013-07-15 20:00:00+00:00,0.14840723,0.161249622,0.07349,0.204763683,0.180055861,0.214308233,0.156949961,0.235886023,0.221178066,0.095892111,0.13285,0.093425,0.14305,0.08145,0.189182968,0.242529224,0.225396656
2013-07-16 20:00:00+00:00,0.149757269,0.153149088,0.073927099,0.200282069,0.188089092,0.225668167,0.158875023,0.241300076,0.221935466,0.095772133,0.13115,0.091875,0.13949999999999999,0.08130000000000001,0.190543105,0.241931101,0.223665627
2013-07-17 20:00:00+00:00,0.146317646,0.1465462,0.073725,0.20364144,0.183201861,0.218489064,0.155199846,0.250973728,0.224332416,0.093860333,0.12755,0.09154999999999999,0.1325,0.07780000000000001,0.188937378,0.242628568,0.224313197
2013-07-18 20:00:00+00:00,0.147112515,0.151663333,0.0732004,0.196199216,0.183217892,0.223913367,0.167065138,0.243509228,0.226960311,0.089557822,0.12575,0.08925000000000001,0.12664999999999998,0.0759,0.184984041,0.246301233,0.224247514
2013-07-19 20:00:00+00:00,0.144014615,0.154441666,0.0696326,0.198218353,0.175694799,0.220767443,0.155226846,0.243230514,0.221619177,0.090873666,0.1244,0.0892,0.126525,0.07440000000000001,0.185689469,0.24828295,0.226899938
2013-07-22 20:00:00+00:00,0.140720499,0.1488168,0.066879778,0.188161439,0.179273999,0.215031999,0.150579599,0.2348634,0.21241,0.0903991,0.117425,0.086375,0.12002499999999999,0.07,0.183563228,0.241473369,0.223388433
2013-07-23 20:00:00+00:00,0.142705032,0.139793999,0.066069465,0.187578419,0.177251179,0.228900061,0.157674306,0.227844608,0.208701318,0.089537469,0.116425,0.08460000000000001,0.11622500000000001,0.06965,0.18034075,0.224876461,0.215057371
2013-07-24 20:00:00+00:00,0.14312186,0.148047572,0.069179745,0.195680117,0.180733383,0.228009935,0.15050322,0.215340339,0.213421665,0.091643058,0.1175,0.08539999999999999,0.11675,0.0688,0.17892169,0.217644774,0.215642344
2013-07-25 20:00:00+00:00,0.142173581,0.150033683,0.06875488,0.191359176,0.18299142,0.224325577,0.148123188,0.220852852,0.210524781,0.090659544,0.11779999999999999,0.08800000000000001,0.118125,0.0703,0.184252238,0.213721557,0.213557648
2013-07-26 20:00:00+00:00,0.14220299,0.159617372,0.069245295,0.194825289,0.181448067,0.234733264,0.151476255,0.223584973,0.20718909,0.091275232,0.1192,0.084825,0.119225,0.0706,0.186565387,0.232444088,0.213582693
2013-07-29 20:00:00+00:00,0.141680813,0.15605086,0.068480983,0.195012878,0.183824339,0.235931266,0.154060323,0.217846243,0.212529758,0.091438506,0.121525,0.08449999999999999,0.1229,0.07095,0.185385752,0.237370379,0.217096
2013-07-30 20:00:00+00:00,0.139679355,0.156588999,0.069034362,0.200154881,0.18597164,0.228219541,0.148306279,0.223611739,0.21328912,0.089991353,0.1201,0.08455,0.1297,0.0712,0.18656238,0.226737933,0.218857713
2013-07-31 20:00:00+00:00,0.139356453,0.150366162,0.067843134,0.206876007,0.181380999,0.232142593,0.148703532,0.215589217,0.21430352,0.091746562,0.12145,0.08932499999999999,0.1318,0.07214999999999999,0.184526115,0.225265367,0.220869818
2013-08-01 20:00:00+00:00,0.137621988,0.157595134,0.071717475,0.210699804,0.17542843,0.227940416,0.152212209,0.238761054,0.206209004,0.098678116,0.12045,0.08994999999999999,0.1304,0.0717,0.179348439,0.223226772,0.217112914
2013-08-02 20:00:00+00:00,0.134643767,0.151685934,0.070281731,0.209309067,0.177530697,0.214805283,0.154285679,0.237927426,0.202863023,0.096423474,0.11935000000000001,0.08965,0.130825,0.0719,0.177072813,0.229371605,0.21810001
2013-08-05 20:00:00+00:00,0.133487981,0.150670744,0.071957559,0.204862646,0.180194106,0.217282006,0.146385176,0.215705721,0.20140872,0.0968262,0.11852499999999999,0.086375,0.13045,0.07205,0.175397286,0.22546179,0.211642544
2013-08-06 20:00:00+00:00,0.137850855,0.161391486,0.070220019,0.202754586,0.176603172,0.224726616,0.152964846,0.224263695,0.208632218,0.097448616,0.1189,0.086625,0.1273,0.0722,0.179487419,0.223004979,0.210720819
2013-08-07 20:00:00+00:00,0.140889534,0.147364093,0.070180065,0.20397319,0.178925041,0.233660077,0.151869016,0.231296478,0.213748034,0.097606613,0.12112500000000001,0.086175,0.12975,0.0723,0.181143765,0.230692294,0.215179278
2013-08-08 20:00:00+00:00,0.13860812,0.158146625,0.071969132,0.197584232,0.173090446,0.218497232,0.151234288,0.225997999,0.204688604,0.0939212,0.12087500000000001,0.08497500000000001,0.1303,0.0724,0.179885176,0.238227691,0.212585697
2013-08-09 20:00:00+00:00,0.143091372,0.15362712,0.072770542,0.196619513,0.176810348,0.222736922,0.153043162,0.223659165,0.206540827,0.094597367,0.11852499999999999,0.0848,0.1293,0.0713,0.179295705,0.233987292,0.20957572
2013-08-12 20:00:00+00:00,0.14338459,0.150366772,0.072410903,0.195325124,0.178921897,0.218236729,0.153584441,0.219994695,0.199197315,0.09214463,0.1158,0.08387499999999999,0.125075,0.071925,0.177379837,0.229184502,0.207703755
2013-08-13 20:00:00+00:00,0.140491295,0.145642816,0.072289459,0.193207456,0.179360197,0.217295322,0.150230674,0.225305652,0.203752704,0.091329806,0.11877499999999999,0.08605,0.12619999999999998,0.07155,0.175693215,0.226838262,0.212684507
2013-08-14 20:00:00+00:00,0.143225146,0.160544825,0.073025126,0.187036372,0.178998018,0.236683493,0.153658639,0.226000391,0.208622767,0.094349462,0.120075,0.08625,0.12605,0.071975,0.175504904,0.225558602,0.212684507
2013-08-15 20:00:00+00:00,0.151752572,0.157425979,0.076951213,0.194956172,0.18518686,0.238319832,0.162154539,0.227938217,0.213501862,0.095647479,0.119175,0.08465,0.125675,0.07145,0.181484937,0.231811977,0.2151015
2013-08-16 20:00:00+00:00,0.148696767,0.166299669,0.084435942,0.196013685,0.18645903,0.232707451,0.160180376,0.231088121,0.217209767,0.096287267,0.11835000000000001,0.085175,0.12585000000000002,0.071975,0.178753746,0.237705543,0.216923059
2013-08-19 20:00:00+00:00,0.150041046,0.165500125,0.083892068,0.203818166,0.189701379,0.24129947,0.162636953,0.230186321,0.22502519,0.098713341,0.12002499999999999,0.08574999999999999,0.1265,0.07327499999999999,0.180750049,0.228627369,0.216736473
2013-08-20 20:00:00+00:00,0.14960293,0.169681023,0.080545144,0.199486583,0.185466216,0.238822096,0.162376474,0.234030426,0.225551144,0.099060986,0.121975,0.09005,0.136,0.07455,0.185666913,0.233219177,0.224641123
2013-08-21 20:00:00+00:00,0.154113395,0.171983493,0.08281579,0.201089646,0.184253795,0.240665258,0.163864911,0.241253456,0.235196604,0.099912632,0.12242499999999999,0.0902,0.1389,0.0802,0.18817666,0.229588832,0.222066889
2013-08-22 20:00:00+00:00,0.150684941,0.169771667,0.079779977,0.196543013,0.183869367,0.234997009,0.161543409,0.2356586,0.227374344,0.101260697,0.12307499999999999,0.09112500000000001,0.13985,0.081,0.182063754,0.237104834,0.220801206
2013-08-23 20:00:00+00:00,0.144221918,0.164961627,0.078476039,0.195369511,0.179624455,0.219508403,0.158628302,0.229402447,0.22308733,0.099470441,0.12300000000000001,0.09022500000000001,0.13705,0.08039999999999999,0.180442156,0.235211861,0.220242944
2013-08-26 20:00:00+00:00,0.148342725,0.153875037,0.077110734,0.204087802,0.182919797,0.221381393,0.160295018,0.230224763,0.229931,0.099750246,0.123775,0.08967499999999999,0.1369,0.08109999999999999,0.180734791,0.230280538,0.221568798
2013-08-27 20:00:00+00:00,0.159464465,0.165699574,0.0780052,0.202913255,0.193976702,0.233508651,0.169736081,0.239343796,0.243573553,0.101835637,0.127825,0.09015000000000001,0.14515,0.08039999999999999,0.19164329,0.230054839,0.224229185
2013-08-28 20:00:00+00:00,0.158851934,0.167808448,0.079768232,0.208583748,0.190885004,0.257297045,0.171400093,0.243771854,0.243688846,0.104371125,0.12545,0.09345,0.147975,0.08035,0.1924575,0.23532733,0.232323466
2013-08-29 20:00:00+00:00,0.162757199,0.171249532,0.079160573,0.202678079,0.198421674,0.253277019,0.17405916,0.243275216,0.248568555,0.10173196,0.125025,0.09269999999999999,0.146525,0.07939999999,0.189983594,0.234487741,0.22858685
2013-08-30 20:00:00+00:00,0.161699395,0.158430976,0.082572975,0.210673562,0.20609466,0.245225858,0.174634403,0.2373484,0.246595072,0.104135755,0.12575,0.095175,0.145725,0.07939999999,0.198598187,0.240280851,0.229040768
2013-09-03 20:00:00+00:00,0.160641716,0.173245948,0.082023055,0.216026181,0.200649674,0.251256296,0.175652902,0.240193976,0.243598818,0.109530893,0.126775,0.09387499999999999,0.145475,0.0801,0.198507565,0.243410774,0.228897027
2013-09-04 20:00:00+00:00,0.155984441,0.16031072,0.084713296,0.210722711,0.194991906,0.249545799,0.170923071,0.239833355,0.23670152,0.10625112,0.12392500000000001,0.09365,0.14125,0.08035,0.19692553,0.244631545,0.23373779
2013-09-05 20:00:00+00:00,0.155596006,0.169171572,0.086564155,0.217029395,0.190511558,0.247175303,0.170080046,0.237217725,0.233199176,0.109632609,0.123525,0.09359999999999999,0.138575,0.07885,0.195581393,0.245043932,0.232283446
2013-09-06 20:00:00+00:00,0.154426511,0.173542848,0.086490545,0.210990639,0.191545018,0.246356812,0.168865581,0.239803267,0.233522372,0.106492218,0.12279999999999999,0.093925,0.137475,0.07885,0.18954348,0.244848182,0.230717084
2013-09-09 20:00:00+00:00,0.155742816,0.171861581,0.084028163,0.195758844,0.189711576,0.238582283,0.166749762,0.23951011,0.230299767,0.104519348,0.121925,0.094025,0.13505,0.079,0.191706077,0.244102452,0.228409166
2013-09-10 20:00:00+00:00,0.145696072,0.166513855,0.085775937,0.200294418,0.185627279,0.24420672,0.161078374,0.236857963,0.224773172,0.105297199,0.11962500000000001,0.09092499999999999,0.130225,0.0768,0.185978579,0.242154783,0.224968612
2013-09-11 20:00:00+00:00,0.142993827,0.164668976,0.082330475,0.200076976,0.179506697,0.227802206,0.157063227,0.233165932,0.221281241,0.10130693,0.1198,0.090475,0.1311,0.07605,0.183038911,0.239170761,0.225824528
2013-09-12 20:00:00+00:00,0.146495125,0.165245848,0.082214201,0.209348253,0.184252367,0.224213078,0.157841953,0.233536054,0.22428136,0.102929283,0.120175,0.08835000000000001,0.13645,0.07554999999999999,0.182317904,0.236551483,0.225362578
2013-09-13 20:00:00+00:00,0.144113423,0.157901046,0.082214906,0.206912888,0.184980123,0.221662387,0.158628711,0.233884015,0.216251948,0.101269665,0.119475,0.0898,0.137525,0.07605,0.18370874,0.232493329,0.22742139
2013-09-16 20:00:00+00:00,0.143458697,0.155891618,0.082012524,0.211210453,0.178645558,0.233462101,0.162095534,0.234095213,0.213604995,0.098497776,0.11814999999999999,0.085875,0.13305,0.0774,0.182251994,0.232493329,0.227494107
2013-09-17 20:00:00+00:00,0.144616118,0.153222348,0.084256922,0.210209651,0.180091399,0.226726832,0.157490613,0.235055081,0.213158195,0.097523274,0.11574999999999999,0.08537499999999999,0.13195,0.07564999999000001,0.182819301,0.228172643,0.227678226
2013-09-18 20:00:00+00:00,0.139577906,0.146793595,0.080081475,0.201518576,0.176008232,0.223852509,0.154537137,0.233004528,0.206045686,0.091952441,0.113,0.09119999999999999,0.12744999999999998,0.07629999999999999,0.179227591,0.23286906,0.226370323
2013-09-19 20:00:00+00:00,0.140037609,0.155565513,0.08037428,0.194433604,0.176577934,0.22847827,0.154085863,0.228995728,0.204781441,0.091591876,0.1115,0.075225,0.125275,0.07485,0.175435559,0.226910516,0.220700456
2013-09-20 20:00:00+00:00,0.145163,0.14311975,0.07866744,0.1972276,0.167944548,0.220299495,0.152671599,0.233361542,0.216802,0.091226,0.1128,0.07627499999000001,0.128975,0.07915,0.174686503,0.222489836,0.220700456
2013-09-23 20:00:00+00:00,0.15270192,0.144192606,0.07393,0.19955178,0.17846568,0.222765335,0.15629132,0.230777511,0.214301339,0.090801355,0.11199999999999999,0.07667500000000001,0.128875,0.079025,0.176010762,0.222489836,0.221462682
2013-09-24 20:00:00+00:00,0.151323436,0.142092009,0.072630799,0.200857144,0.176277499,0.224846219,0.153140139,0.229482108,0.217853917,0.094266072,0.111625,0.07752499999000001,0.127875,0.0812,0.173795575,0.220944097,0.221288352
2013-09-25 20:00:00+00:00,0.149852479,0.155472904,0.07334525,0.194518964,0.174441779,0.216557509,0.157404159,0.226692193,0.214520609,0.094908796,0.110875,0.0793,0.12775,0.08455,0.173809301,0.222459828,0.218301886
2013-09-26 20:00:00+00:00,0.14788376,0.15379619,0.0741058,0.19439468,0.17198624,0.223476006,0.159711399,0.223001423,0.217013034,0.093168934,0.11047499999999999,0.081225,0.12615,0.08175,0.173127674,0.22477387,0.216442016
2013-09-27 20:00:00+00:00,0.15060066,0.149680679,0.0732416,0.19446812,0.177334,0.214270748,0.161279999,0.222191288,0.219018015,0.092468734,0.110175,0.080375,0.1275,0.0825,0.17453068,0.222085912,0.215352443
2013-09-30 20:00:00+00:00,0.154737824,0.15665638,0.0750048,0.199312811,0.17025772,0.219218822,0.154957758,0.228749613,0.229610547,0.096618761,0.111,0.08612500000000001,0.130175,0.0825,0.182146943,0.22542253,0.217781527
2013-10-01 20:00:00+00:00,0.150651175,0.148684,0.076943199,0.203912475,0.181142177,0.2252476,0.159979061,0.229641186,0.221225833,0.096993003,0.110375,0.086675,0.1294,0.08410000000000001,0.177172088,0.22266937,0.217781527
2013-10-02 20:00:00+00:00,0.154411134,0.144690247,0.0743212,0.202656172,0.179580714,0.211500899,0.157789853,0.223406538,0.223319571,0.097075523,0.11082499999999999,0.08657500000000001,0.13235,0.087975,0.180274692,0.224472267,0.216034738
2013-10-03 20:00:00+00:00,0.160192137,0.148271999,0.0736536,0.205117558,0.184062253,0.223377535,0.166208868,0.226585461,0.224997385,0.097758318,0.10917500000000001,0.086375,0.12990000000000002,0.087225,0.182795932,0.222061725,0.214133108
2013-10-04 20:00:00+00:00,0.156549026,0.148272917,0.0732991,0.20752688,0.179565738,0.215452535,0.165321931,0.22708144,0.215133007,0.09716274,0.108975,0.086675,0.12975,0.08602499999999999,0.182538652,0.218411319,0.216071738
2013-10-07 20:00:00+00:00,0.16708262,0.159126215,0.0748981,0.206053462,0.194952685,0.220460374,0.17182232,0.233854915,0.229538374,0.099440742,0.11,0.08685000000000001,0.130975,0.085425,0.18395068,0.218592906,0.220363443
2013-10-08 20:00:00+00:00,0.173517493,0.162319357,0.075738399,0.210573358,0.205200677,0.216961138,0.184764003,0.239189105,0.235149323,0.101705996,0.10880000000000001,0.0861,0.1298,0.083125,0.186485374,0.219678489,0.218314762
2013-10-09 20:00:00+00:00,0.170806275,0.159762234,0.0763009,0.215438168,0.198627174,0.231240677,0.179800262,0.235019635,0.234150603,0.101550356,0.111175,0.08712500000000001,0.13105,0.08282500000000001,0.19094838,0.221019628,0.220679544
2013-10-10 20:00:00+00:00,0.15788,0.153670277,0.076785699,0.209873083,0.190282285,0.228189548,0.172257172,0.231409898,0.225289866,0.099347041,0.1117,0.08612500000000001,0.12890000000000001,0.08205,0.180317798,0.219118918,0.222337385
2013-10-11 20:00:00+00:00,0.152037613,0.154327159,0.0743756,0.214661089,0.183221327,0.222223225,0.169761303,0.228373176,0.221238309,0.096465536,0.108675,0.08529999999999999,0.1272,0.08042500000000001,0.177979549,0.21200633,0.217364504
2013-10-14 20:00:00+00:00,0.151936405,0.153276768,0.074435899,0.214106842,0.176112257,0.214120635,0.162306272,0.229547966,0.211511828,0.094821261,0.107475,0.08405,0.1268,0.079725,0.181077533,0.21200633,0.217364504
2013-10-15 20:00:00+00:00,0.159637703,0.15371519,0.0741075,0.210960217,0.183307,0.212497587,0.170900282,0.23110983,0.222805828,0.094528012,0.106325,0.083925,0.1265,0.081175,0.175117491,0.209471102,0.216262319
2013-10-16 20:00:00+00:00,0.147881534,0.145716285,0.073700099,0.206271241,0.183845708,0.210096096,0.165728194,0.225780523,0.220536571,0.091021965,0.1067,0.083825,0.12619999999999998,0.079275,0.17232809,0.209183516,0.218663643
2013-10-17 20:00:00+00:00,0.141931103,0.141240599,0.068018299,0.19876339,0.175145995,0.212317999,0.159355931,0.217392261,0.203310953,0.086602371,0.103825,0.08265,0.12279999999999999,0.077475,0.167557427,0.202926686,0.212210191
2013-10-18 20:00:00+00:00,0.137399248,0.148171161,0.0681632,0.19425196,0.172144071,0.202782619,0.155630256,0.214455525,0.200067601,0.086432792,0.098925,0.08039999999999999,0.11810000000000001,0.0764,0.163005143,0.193514293,0.205914192
2013-10-21 20:00:00+00:00,0.136517141,0.136303333,0.072012733,0.193174651,0.1711801,0.204502209,0.153504179,0.207310686,0.1950463,0.089571533,0.097475,0.07939999999,0.1149,0.076575,0.163803336,0.196495234,0.202660689
2013-10-22 20:00:00+00:00,0.140064482,0.127992195,0.068263295,0.187457498,0.171464286,0.208994828,0.155938981,0.211461055,0.195695682,0.088105252,0.094725,0.07719999999999999,0.1115,0.0765,0.16031423,0.198746143,0.202281176
2013-10-23 20:00:00+00:00,0.140836251,0.134211047,0.067708341,0.18578041,0.177412289,0.21471973,0.162018027,0.218708067,0.205534482,0.085984715,0.094975,0.07705000000000001,0.1153,0.0762,0.165202573,0.199111222,0.206765146
2013-10-24 20:00:00+00:00,0.139290455,0.123622476,0.068484257,0.183579903,0.174050644,0.20903178,0.152050712,0.221586686,0.202001619,0.087196,0.09457499999999999,0.076225,0.11735,0.07485,0.162061757,0.198058874,0.207635573
2013-10-25 20:00:00+00:00,0.139530075,0.131408884,0.06564953,0.188683656,0.168497448,0.209988819,0.151726882,0.219843877,0.20547674,0.086615485,0.09539999999999998,0.07685,0.12135,0.0737,0.161808272,0.201778096,0.207882816
2013-10-28 20:00:00+00:00,0.140080681,0.116969803,0.065396295,0.187281281,0.168718668,0.221022888,0.161205241,0.217016118,0.198611136,0.086250926,0.09295,0.077775,0.11914999999999999,0.07395,0.163062273,0.199958241,0.20705679
2013-10-29 20:00:00+00:00,0.139978258,0.133122657,0.064051214,0.183518358,0.169314766,0.206871457,0.158258786,0.210645101,0.200700571,0.085657771,0.094775,0.07825,0.12095,0.0737,0.160493246,0.199743259,0.204147734
2013-10-30 20:00:00+00:00,0.141650806,0.127040511,0.064577377,0.187627344,0.17001111,0.211658142,0.15770452,0.21072661,0.211056555,0.089275511,0.09615,0.07730000000000001,0.12065,0.07315,0.163426384,0.200214652,0.202225176
2013-10-31 20:00:00+00:00,0.137283772,0.123566895,0.064036666,0.188787246,0.170166681,0.216635317,0.151163227,0.209041349,0.21331365,0.087266306,0.09727499999999999,0.07872499999999999,0.11939999999999999,0.072675,0.161982804,0.200267488,0.202738701
2013-11-01 20:00:00+00:00,0.137329655,0.134758571,0.068301595,0.18865262,0.180339921,0.223093763,0.154258548,0.210892111,0.210437142,0.091031847,0.098925,0.08,0.11975,0.07345,0.163318549,0.200808932,0.202008066
2013-11-04 21:00:00+00:00,0.13627281,0.130762906,0.068333904,0.187383937,0.172982521,0.226322228,0.149813448,0.2093514,0.20511626,0.090039707,0.099375,0.07925,0.1209,0.07395,0.164235492,0.200808932,0.20255158
2013-11-05 21:00:00+00:00,0.140848817,0.138220828,0.069294238,0.18746896,0.174838451,0.22304738,0.152390262,0.219459296,0.217789047,0.090620677,0.09925,0.0793,0.1211,0.073825,0.166612333,0.196654452,0.204178108
2013-11-06 21:00:00+00:00,0.140125862,0.135338433,0.068064238,0.186228482,0.17314847,0.21825978,0.152840503,0.218372901,0.220674333,0.090360476,0.09945,0.0799,0.11935000000000001,0.072675,0.165971886,0.194990521,0.205894323
2013-11-07 21:00:00+00:00,0.145058,0.118680349,0.066894712,0.18859888,0.18065567,0.207137247,0.161420999,0.220922006,0.223698273,0.089519025,0.10147500000000001,0.08095000000000001,0.1197,0.0721,0.165323823,0.194459172,0.204735315
2013-11-08 21:00:00+00:00,0.140015655,0.131953366,0.069142644,0.184207098,0.182597411,0.218978504,0.157229503,0.219136108,0.218530755,0.089777333,0.1012,0.080875,0.11994999999999999,0.075775,0.167244734,0.196143869,0.206229201
2013-11-11 21:00:00+00:00,0.139747029,0.140315171,0.070161142,0.181613179,0.172287571,0.209277282,0.158731934,0.219042584,0.227589085,0.088895785,0.1027,0.0858,0.1176,0.078575,0.165369619,0.193851365,0.204790388
2013-11-12 21:00:00+00:00,0.142745334,0.130175634,0.070268238,0.193745351,0.174182397,0.215799885,0.156589034,0.220389864,0.221271533,0.089445876,0.10805,0.087675,0.1201,0.080575,0.167624794,0.198821286,0.207156329
2013-11-13 21:00:00+00:00,0.140984703,0.124558634,0.06922038,0.187442172,0.173839027,0.202182031,0.155232248,0.221980908,0.225839171,0.0879468,0.104225,0.08800000000000001,0.1174,0.08047499999999999,0.168725596,0.20344957,0.208994588
2013-11-14 21:00:00+00:00,0.141171827,0.12773259,0.069876009,0.187738822,0.177441796,0.20228458,0.152980965,0.219907,0.222476952,0.087509066,0.10862500000000001,0.08755,0.11869999999999999,0.0796,0.164827038,0.215322813,0.20665923
2013-11-15 21:00:00+00:00,0.140009777,0.120804639,0.067139136,0.185166611,0.19626006,0.203285466,0.153068327,0.224036622,0.214648209,0.084742631,0.1061,0.087925,0.11625,0.07844999999999999,0.162487793,0.228406178,0.209690436
2013-11-18 21:00:00+00:00,0.142283386,0.12439779,0.06132963,0.186598275,0.178047986,0.213108679,0.161985965,0.231452057,0.215695066,0.085248938,0.10279999999999999,0.08199999999999999,0.11470000000000001,0.076975,0.161327724,0.232471903,0.227269338
2013-11-19 21:00:00+00:00,0.145410724,0.124529999,0.062845533,0.184735089,0.177880052,0.210928057,0.158743022,0.238348323,0.2251928,0.084470199,0.102925,0.081125,0.11545,0.074725,0.163740193,0.224163305,0.225140817
2013-11-20 21:00:00+00:00,0.141916731,0.126945149,0.06589779,0.204281696,0.170429655,0.218159933,0.158864199,0.237165574,0.227671904,0.08400939,0.10092499999999999,0.081875,0.11465,0.0733,0.164155932,0.229282144,0.228401181
2013-11-21 21:00:00+00:00,0.137048055,0.12325346,0.068282841,0.192268896,0.168993776,0.210897955,0.156542336,0.240179009,0.228671758,0.083891428,0.10575,0.08095000000000001,0.12054999999999999,0.073875,0.164116395,0.229989597,0.232615457
2013-11-22 21:00:00+00:00,0.135159131,0.123305142,0.065113428,0.191199528,0.171620308,0.213770838,0.1521903,0.242959142,0.222021999,0.082931214,0.1066,0.081425,0.12265000000000001,0.0741,0.162244568,0.234045051,0.236895718
2013-11-25 21:00:00+00:00,0.135673836,0.13392242,0.066004682,0.192317599,0.171678574,0.204172457,0.155653206,0.239718333,0.233314285,0.082576926,0.106325,0.081625,0.122575,0.074525,0.160580227,0.231149905,0.230093494
2013-11-26 21:00:00+00:00,0.136888648,0.128786253,0.065496688,0.185642903,0.173697064,0.207433377,0.151772689,0.237884304,0.22090419,0.08181592,0.1045,0.081125,0.12165,0.07445,0.161051526,0.226512257,0.224083887
2013-11-27 21:00:00+00:00,0.13627575,0.132258028,0.065506785,0.189010724,0.173076151,0.210733307,0.153829882,0.236162228,0.223370428,0.0822644,0.105175,0.081225,0.12269999999999999,0.07552500000000001,0.158785041,0.223305631,0.228176633
2013-11-29 18:00:00+00:00,0.138027372,0.132508333,0.067569977,0.186146999,0.174639037,0.202601847,0.150859213,0.22659105,0.220484555,0.082783933,0.1061,0.08130000000000001,0.12215,0.077,0.16038156,0.228084205,0.228311517
2013-12-02 21:00:00+00:00,0.140190855,0.134881417,0.069559404,0.195638848,0.174550408,0.212544177,0.15444681,0.23246279,0.233011447,0.085219365,0.106275,0.082125,0.12185,0.0774,0.162601059,0.231613063,0.229519726
2013-12-03 21:00:00+00:00,0.141385517,0.129657319,0.068902228,0.192368102,0.173785069,0.21396593,0.156045365,0.2344372,0.228102314,0.086696461,0.10654999999999999,0.082225,0.12205,0.07769999999999999,0.169015357,0.231872257,0.22880924
2013-12-04 21:00:00+00:00,0.140790055,0.131112038,0.069098038,0.188980226,0.176601443,0.197781619,0.15700235,0.234941866,0.227884603,0.087785558,0.108475,0.0827,0.1268,0.0775,0.170828447,0.232421397,0.231804162
2013-12-05 21:00:00+00:00,0.141489862,0.134745666,0.070044688,0.197489413,0.179248972,0.192117882,0.159799999,0.238995111,0.219353619,0.08674873,0.107875,0.08289999999999999,0.1268,0.07725,0.172057458,0.235852873,0.230639839
2013-12-06 21:00:00+00:00,0.137188689,0.123182628,0.066626142,0.191415568,0.173886755,0.202633666,0.159281939,0.236043571,0.232598399,0.085488285,0.10612500000000001,0.082475,0.12425000000000001,0.07735,0.167731983,0.238809937,0.229741645
2013-12-09 21:00:00+00:00,0.135194841,0.134928457,0.06678096,0.188981053,0.172891042,0.189656171,0.155011517,0.237971885,0.214693984,0.086000507,0.10635,0.083125,0.12315,0.0781,0.166109866,0.241206238,0.230576611
2013-12-10 21:00:00+00:00,0.136197853,0.123156555,0.065010233,0.186946451,0.173562786,0.19014026,0.155253372,0.231316457,0.235673333,0.084462888,0.10635,0.08310000000000001,0.12179999999999999,0.0782,0.167951225,0.240452195,0.223886334
2013-12-11 21:00:00+00:00,0.143050855,0.136094761,0.067941533,0.189523776,0.178262074,0.186470628,0.160585448,0.236993599,0.219360304,0.087466133,0.105625,0.08474999999999999,0.12135,0.0776,0.169500798,0.240175575,0.225474412
2013-12-12 21:00:00+00:00,0.144306144,0.129402088,0.067333342,0.200514949,0.177518965,0.18751699,0.158971965,0.235308231,0.228636841,0.085871309,0.10682499999999999,0.0867,0.1249,0.07805,0.170610013,0.239754003,0.221458602
2013-12-13 21:00:00+00:00,0.145528224,0.135110909,0.066111766,0.20003011,0.180578296,0.201346349,0.159956724,0.229572577,0.229943704,0.08815492,0.10772500000000002,0.0873,0.12325,0.078,0.170266922,0.241854412,0.220664767
2013-12-16 21:00:00+00:00,0.14642995,0.126165066,0.06600059,0.196538071,0.175536722,0.188354685,0.163746689,0.2298202,0.218062142,0.088476666,0.106075,0.088825,0.1226,0.079,0.169527679,0.236997979,0.220123919
2013-12-17 21:00:00+00:00,0.146728096,0.132747555,0.063809955,0.196546268,0.177933089,0.191264666,0.165823724,0.231376628,0.225583066,0.088822234,0.10462500000000001,0.08932499999999999,0.12269999999999999,0.0787,0.172382001,0.23945003,0.217992032
2013-12-18 21:00:00+00:00,0.135986224,0.124595031,0.061233974,0.194604257,0.16700014,0.201267657,0.159873318,0.214095895,0.210926603,0.087492999,0.10325,0.08897500000000001,0.12050000000000001,0.0786,0.16622688,0.237426381,0.217274741
2013-12-19 21:00:00+00:00,0.1376198,0.126863299,0.0612725,0.2009638,0.161850732,0.190688012,0.1566997,0.231601704,0.2029972,0.0830465,0.10377499999999999,0.087925,0.11960000000000001,0.07875,0.159338601,0.231133045,0.21318609
2013-12-20 21:00:00+00:00,0.13673591,0.129895119,0.0586792,0.19450484,0.164816892,0.182416914,0.15433862,0.220634082,0.211626044,0.082357257,0.105475,0.08717499999999999,0.12029999999999999,0.079,0.157818136,0.232932049,0.214329409
2013-12-23 21:00:00+00:00,0.13334815,0.12523492,0.060853999,0.19760856,0.163287087,0.18511579,0.15271172,0.218208609,0.203065907,0.081943226,0.105175,0.08712500000000001,0.1177,0.078475,0.156379225,0.232932049,0.213630029
2013-12-24 18:00:00+00:00,0.131455449,0.1239352,0.059758899,0.1989894,0.163624432,0.180268885,0.1510432,0.208018285,0.19188939,0.081329806,0.10445,0.0868,0.1166,0.07872499999999999,0.156358334,0.236009113,0.209985514
2013-12-26 21:00:00+00:00,0.1329277,0.130526444,0.0609292,0.1936016,0.162012056,0.185351428,0.148271319,0.223082799,0.196794682,0.081377948,0.106275,0.0866,0.1177,0.078375,0.156358334,0.231179127,0.209985514
2013-12-27 21:00:00+00:00,0.1318626,0.125763869,0.0615642,0.198561599,0.162454179,0.175584399,0.1509365,0.220086666,0.198641079,0.080160158,0.10677500000000001,0.087225,0.117225,0.07919999999999999,0.154575244,0.230933978,0.208944445
2013-12-30 21:00:00+00:00,0.13641919,0.126487795,0.059311999,0.200056181,0.165588401,0.18808019,0.152580851,0.206875742,0.20586878,0.07972238,0.106075,0.086525,0.11805,0.0799,0.158893595,0.227127474,0.207366906
2013-12-31 21:00:00+00:00,0.137706634,0.122777111,0.061825759,0.204128731,0.168011449,0.180596076,0.154509537,0.216091409,0.197387533,0.082475994,0.105975,0.08525,0.1174,0.079425,0.158488285,0.227127474,0.207439981
2014-01-02 21:00:00+00:00,0.138192575,0.128368988,0.0608539,0.191640689,0.174094403,0.198695936,0.155311379,0.223406304,0.208001542,0.083393324,0.10445,0.085675,0.117425,0.081275,0.165012819,0.227127474,0.207707525
2014-01-03 21:00:00+00:00,0.137445775,0.127828242,0.060816,0.191710465,0.171506956,0.201856825,0.155640686,0.22497739,0.204824571,0.083406785,0.105025,0.084275,0.11904999999999999,0.081425,0.161845393,0.227127474,0.210019382
2014-01-06 21:00:00+00:00,0.135249642,0.124425174,0.0600788,0.189073965,0.171179531,0.212036571,0.156084849,0.218602726,0.208160958,0.081346593,0.10175000000000001,0.085075,0.11715,0.0812,0.163059449,0.230740836,0.208654205
2014-01-07 21:00:00+00:00,0.134017241,0.118004082,0.0599786,0.185363648,0.165416358,0.210885111,0.154382827,0.213259288,0.20450405,0.079118307,0.0986,0.086325,0.11485,0.079525,0.159592699,0.226982774,0.206459494
2014-01-08 21:00:00+00:00,0.134015883,0.120387314,0.0616625,0.19217811,0.168230205,0.214457422,0.151214731,0.214578,0.203395628,0.076658793,0.099,0.0891,0.11410000000000001,0.07980000000000001,0.161059006,0.219837828,0.205022211
2014-01-09 21:00:00+00:00,0.133623606,0.119400923,0.059280799,0.186017917,0.168337692,0.212475047,0.155031493,0.221549193,0.200461015,0.072485531,0.097475,0.08779999999999999,0.113425,0.078925,0.163672518,0.218345823,0.206737851
2014-01-10 21:00:00+00:00,0.132591105,0.114544366,0.0585781,0.17952092,0.167340554,0.210077955,0.150556213,0.215710333,0.196406066,0.06754578,0.09734999999999999,0.086325,0.11199999999999999,0.07705000000000001,0.159601565,0.216137069,0.209388597
2014-01-13 21:00:00+00:00,0.135807003,0.107908909,0.056661,0.180177165,0.171746491,0.207328926,0.156425,0.219652504,0.203517619,0.069039065,0.09865,0.08352499999999999,0.1117,0.07595,0.160895963,0.216137069,0.211411368
2014-01-14 21:00:00+00:00,0.135439649,0.113888801,0.059339199,0.172138736,0.168890033,0.214706819,0.14793571,0.219715796,0.198681174,0.068537296,0.096425,0.0818,0.110225,0.0748,0.160170786,0.223170173,0.211583032
2014-01-15 21:00:00+00:00,0.136511969,0.115321999,0.059626399,0.175266517,0.168993863,0.20104539,0.151006165,0.221085199,0.197445993,0.068139365,0.09720000000000001,0.083125,0.1108,0.07475,0.158603867,0.226265394,0.210825385
2014-01-16 21:00:00+00:00,0.138546564,0.117025428,0.056972999,0.172115375,0.166982767,0.206572476,0.15362711,0.2251168,0.203076971,0.069219812,0.097225,0.083,0.11205,0.0768,0.160984539,0.224750283,0.208071045
2014-01-17 21:00:00+00:00,0.137236555,0.113141295,0.0569756,0.165277413,0.168432309,0.2032304,0.149715758,0.222086571,0.201868936,0.068336211,0.09565,0.08310000000000001,0.1109,0.07575,0.158531,0.221141598,0.206835426
2014-01-21 21:00:00+00:00,0.133828858,0.111725174,0.059183612,0.16763612,0.161857968,0.192034743,0.151522303,0.221621396,0.201743387,0.068020523,0.0953,0.0825,0.1116,0.076525,0.158011708,0.217023714,0.211222372
2014-01-22 21:00:00+00:00,0.133281103,0.113323666,0.059676666,0.168963996,0.162477824,0.204450224,0.148132786,0.222721142,0.200471466,0.068003066,0.095275,0.082725,0.109825,0.076225,0.159687034,0.212405172,0.210244298
2014-01-23 21:00:00+00:00,0.138112103,0.109660474,0.058284546,0.161050855,0.166290902,0.198734456,0.151202956,0.229846152,0.209997174,0.06845118,0.09852499999999999,0.082975,0.11515,0.076825,0.164191674,0.20948173,0.212357713
2014-01-24 21:00:00+00:00,0.152602689,0.116610952,0.060778965,0.170573744,0.171865196,0.206749825,0.163999393,0.241085873,0.22689153,0.074692066,0.104725,0.08664999999999999,0.12539999999999998,0.079225,0.175842782,0.214680551,0.214210371
2014-01-27 21:00:00+00:00,0.153993368,0.112726509,0.062576266,0.170064179,0.171334837,0.204238993,0.165079148,0.241723466,0.231763333,0.076284209,0.102675,0.08837500000000001,0.12359999999999999,0.082325,0.173527332,0.22926089,0.224371781
2014-01-28 21:00:00+00:00,0.150062586,0.117096077,0.059563904,0.174245431,0.174767701,0.204481068,0.164738651,0.251182111,0.239443371,0.074040984,0.099575,0.08902499999999999,0.1204,0.082325,0.171749088,0.227400548,0.224413162
2014-01-29 21:00:00+00:00,0.155481551,0.116634214,0.058967093,0.168082524,0.178147186,0.204600059,0.169565746,0.248313809,0.244540923,0.076296076,0.09942500000000001,0.0883,0.12175000000000001,0.08199999999999999,0.176237371,0.226364792,0.22081599
2014-01-30 21:00:00+00:00,0.15560071,0.1161912,0.059972114,0.171649375,0.179223482,0.203386625,0.17631622,0.246781238,0.238236857,0.0749132,0.09907500000000001,0.09307499999999999,0.1231,0.08385,0.176265202,0.232236168,0.223435569
2014-01-31 21:00:00+00:00,0.1600764,0.117914355,0.059186488,0.175473372,0.183536541,0.207016093,0.165657303,0.247662253,0.238465333,0.077241944,0.1003,0.09305,0.128875,0.084525,0.177909328,0.235072474,0.223435569
2014-02-03 21:00:00+00:00,0.174796537,0.123785161,0.061642628,0.175790427,0.193746982,0.21120095,0.179444972,0.258748571,0.246663984,0.082590442,0.1052,0.09325,0.13255,0.083325,0.18586921,0.235737234,0.223435569
2014-02-04 21:00:00+00:00,0.168594593,0.124488457,0.062857199,0.173377818,0.189192258,0.210889293,0.176085293,0.254946399,0.235009485,0.083513599,0.101975,0.09585,0.1297,0.08349999999999999,0.184663509,0.248871796,0.233915065
2014-02-05 21:00:00+00:00,0.170701558,0.125526444,0.063913642,0.173149486,0.19371331,0.210331212,0.180313331,0.258521241,0.240554231,0.084205847,0.102825,0.0935,0.12875,0.082175,0.184726047,0.247412227,0.233749348
2014-02-06 21:00:00+00:00,0.158571362,0.122620714,0.062328063,0.170443406,0.184766568,0.204918875,0.173631255,0.253421022,0.230103053,0.082828658,0.101425,0.09300000000000001,0.12685000000000002,0.08224999999999999,0.177073403,0.242149496,0.230480453
2014-02-07 21:00:00+00:00,0.148250579,0.122025976,0.060256361,0.165266493,0.176846263,0.202127487,0.162953117,0.247260571,0.22466179,0.07495978,0.0983,0.09147500000000001,0.124375,0.0783,0.170146152,0.238374709,0.225219391
2014-02-10 21:00:00+00:00,0.148044999,0.120763004,0.060028922,0.1676532,0.176326625,0.199395749,0.1617095,0.247464444,0.224735695,0.074571015,0.097375,0.088875,0.12195,0.07725,0.170783225,0.229916411,0.223013172
2014-02-11 21:00:00+00:00,0.143570413,0.120700433,0.058120433,0.164133572,0.170694358,0.1986355,0.159286544,0.243779809,0.216873222,0.072894266,0.09630000000000001,0.08765,0.12015,0.077125,0.164817685,0.229916411,0.221452458
2014-02-12 21:00:00+00:00,0.142839377,0.120662342,0.057584228,0.161511394,0.168986246,0.197839843,0.159351958,0.244480857,0.2205826,0.073569,0.0949,0.086975,0.1201,0.07730000000000001,0.164275868,0.227597164,0.219809455
2014-02-13 21:00:00+00:00,0.142115717,0.118963542,0.055091587,0.162897158,0.170070272,0.197565043,0.157663172,0.238977495,0.216811444,0.072777473,0.096425,0.08564999999999999,0.12275,0.07689999999000001,0.164615488,0.229196763,0.221373413
2014-02-14 21:00:00+00:00,0.139311896,0.117808673,0.053897333,0.163026491,0.165148324,0.19429904,0.15597537,0.236065574,0.213276444,0.071972482,0.09570000000000001,0.085425,0.12205,0.07665,0.162226002,0.231480154,0.217776075
2014-02-18 21:00:00+00:00,0.138429431,0.120053104,0.054860638,0.16148,0.162758494,0.1898964,0.155698458,0.238536,0.217712799,0.071402342,0.09542500000000001,0.08555,0.12054999999999999,0.07635,0.163507606,0.226271451,0.21815619
2014-02-19 21:00:00+00:00,0.144353172,0.120732492,0.054993914,0.161069084,0.161835928,0.18779925,0.158512786,0.239494028,0.221167184,0.070302857,0.094875,0.085475,0.12054999999999999,0.075575,0.163438371,0.228157103,0.218285972
2014-02-20 21:00:00+00:00,0.14060222,0.120674679,0.056397038,0.159460551,0.161677751,0.186164962,0.157118041,0.240074144,0.218193828,0.071501206,0.09445,0.086175,0.12175000000000001,0.075475,0.163818152,0.230233189,0.221061237
2014-02-21 21:00:00+00:00,0.140027593,0.119375633,0.056607333,0.158689355,0.162786112,0.187597318,0.156851896,0.241518139,0.217960666,0.068414533,0.09435,0.08852499999999999,0.12140000000000001,0.0754,0.161285752,0.229246864,0.221136899
2014-02-24 21:00:00+00:00,0.138216593,0.119242222,0.054655498,0.159219037,0.159858586,0.184906125,0.154034237,0.244382417,0.216934698,0.065910993,0.09387499999999999,0.08664999999999999,0.122225,0.0756,0.159051702,0.228268041,0.223889027
2014-02-25 21:00:00+00:00,0.138089434,0.119484103,0.055184696,0.158714439,0.162637712,0.187258965,0.154680517,0.247441043,0.220802168,0.065558955,0.09195,0.086875,0.11960000000000001,0.07377500000000001,0.158001486,0.224768061,0.222542286
2014-02-26 21:00:00+00:00,0.141521089,0.121110628,0.055376685,0.160796496,0.165990924,0.186319843,0.156919431,0.248614295,0.222730514,0.064588071,0.09269999999999999,0.08682499999999999,0.11960000000000001,0.073825,0.158636248,0.224058459,0.222335456
2014-02-27 21:00:00+00:00,0.13879195,0.120556598,0.05410989,0.159885862,0.165804145,0.187048418,0.154082772,0.246225008,0.217021695,0.064088103,0.09394999999999999,0.08735,0.12175000000000001,0.07305,0.160608128,0.224281472,0.220258957
2014-02-28 21:00:00+00:00,0.139503996,0.119455228,0.05504412,0.161426317,0.166257303,0.187480524,0.155168727,0.247430884,0.222759034,0.063398988,0.09385,0.086875,0.12210000000000001,0.072525,0.15858043,0.225106357,0.219323504
2014-03-03 21:00:00+00:00,0.147271113,0.123095271,0.059349333,0.163994872,0.17210942,0.193141125,0.161420134,0.252405043,0.232006,0.068785895,0.0968,0.08800000000000001,0.12710000000000002,0.07275000000000001,0.174302761,0.229264524,0.222248537
2014-03-04 21:00:00+00:00,0.140043603,0.119578799,0.061591333,0.165242262,0.169612903,0.191660524,0.155598482,0.249719228,0.223112222,0.066425955,0.0953,0.08755,0.1234,0.07145,0.162222271,0.227119423,0.221709755
2014-03-05 21:00:00+00:00,0.140026662,0.118720825,0.060651407,0.165700836,0.171495541,0.197272187,0.154642232,0.250990976,0.221208888,0.066405087,0.0947,0.08839999999999999,0.12029999999999999,0.07155,0.161638753,0.227292759,0.222064668
2014-03-06 21:00:00+00:00,0.141633237,0.116257752,0.060993066,0.165204006,0.169637072,0.1941607,0.156037006,0.247676747,0.219945761,0.06721139,0.09315,0.08657500000000001,0.1175,0.0704,0.161887908,0.231471338,0.219931096
2014-03-07 21:00:00+00:00,0.141448948,0.115155474,0.056375269,0.163699979,0.168305672,0.196199237,0.157732965,0.248105394,0.227814146,0.069173015,0.09225,0.085425,0.11710000000000001,0.06985000000000001,0.169044851,0.231847739,0.217708686
2014-03-10 20:00:00+00:00,0.141840717,0.112644926,0.055655346,0.162930158,0.168681158,0.20051775,0.157887931,0.25449306,0.230570987,0.069182946,0.09225,0.08380000000000001,0.11885,0.069625,0.170713187,0.233477931,0.218553068
2014-03-11 20:00:00+00:00,0.144964767,0.1113632,0.056089257,0.164895389,0.173634637,0.200904315,0.160449006,0.254217913,0.232915228,0.068049885,0.09154999999999999,0.0843,0.11869999999999999,0.06875,0.169429526,0.228774404,0.216579878
2014-03-12 20:00:00+00:00,0.143093613,0.112216492,0.056069717,0.168168868,0.173155245,0.199572062,0.158259144,0.251677202,0.229500342,0.068400488,0.09244999999999999,0.086,0.12135,0.068425,0.173181414,0.228069429,0.220484763
2014-03-13 20:00:00+00:00,0.150765534,0.115426111,0.055358888,0.170542205,0.177513872,0.201708481,0.166407189,0.254850028,0.236761133,0.068473877,0.0925,0.086875,0.12205,0.06860000000000001,0.182854312,0.229283334,0.221950984
2014-03-14 20:00:00+00:00,0.154472417,0.120105714,0.056315371,0.174918551,0.181285641,0.203133037,0.170845427,0.256747286,0.238121371,0.070367523,0.0942,0.08785,0.1229,0.06924999999999999,0.18548297,0.24153262,0.225775406
2014-03-17 20:00:00+00:00,0.146411406,0.117640499,0.058501101,0.172923331,0.175661068,0.203134843,0.165684896,0.249742715,0.229313409,0.068047687,0.09234999999999999,0.087875,0.12125,0.0693,0.176851585,0.237164819,0.224390099
2014-03-18 20:00:00+00:00,0.143225496,0.116661396,0.056665565,0.172323731,0.170787289,0.20377835,0.161082465,0.241124576,0.222870726,0.066980571,0.09325,0.08869999999999999,0.12015,0.0689,0.172612129,0.228583509,0.220530916
2014-03-19 20:00:00+00:00,0.144979913,0.116322419,0.054906638,0.17134977,0.170635251,0.1985469,0.160952944,0.244362,0.226995504,0.0659918,0.09215,0.088925,0.1197,0.06849999999999999,0.171377575,0.22698628,0.216939617
2014-03-20 20:00:00+00:00,0.140944034,0.11212839,0.056004936,0.168983013,0.170268917,0.19547955,0.159831103,0.242795942,0.222672507,0.068321714,0.09095,0.089575,0.11825,0.068575,0.169121631,0.229414909,0.219426482
2014-03-21 20:00:00+00:00,0.14496862,0.110846163,0.053929365,0.164507696,0.169237773,0.1949294,0.165353427,0.242040666,0.223932885,0.066405704,0.0901,0.0897,0.11635,0.0679,0.166627417,0.229414909,0.218084996
2014-03-24 20:00:00+00:00,0.146655999,0.11129,0.0531472,0.1670996,0.1686488,0.193555225,0.166532,0.242747391,0.2200436,0.0682958,0.08994999999999999,0.09205,0.1148,0.06787499999999999,0.171396788,0.225568508,0.21827785
2014-03-25 20:00:00+00:00,0.142963783,0.110743815,0.054559999,0.167081733,0.164119983,0.191809678,0.164666133,0.239563733,0.214854387,0.065770748,0.0907,0.0908,0.11375,0.067175,0.166847166,0.224163871,0.218405598
2014-03-26 20:00:00+00:00,0.148067266,0.112017975,0.054014499,0.167370833,0.165399172,0.190883325,0.169671333,0.240659826,0.215623537,0.065364078,0.09052500000000001,0.08960000000000001,0.11305,0.0659,0.162358535,0.221338931,0.217520295
2014-03-27 20:00:00+00:00,0.146869649,0.115393659,0.054465599,0.1673693,0.166262,0.190654687,0.170877999,0.242752608,0.213289093,0.067899284,0.09234999999999999,0.0901,0.11455,0.06570000000000001,0.165400243,0.221018057,0.218148385
2014-03-28 20:00:00+00:00,0.1433446,0.115567549,0.0549835,0.167966266,0.1611272,0.1893193,0.169463466,0.238436377,0.212317075,0.065604878,0.09369999999999999,0.087575,0.11495,0.06465,0.162119981,0.220335354,0.217548334
2014-03-31 20:00:00+00:00,0.140328233,0.116256781,0.0548728,0.165649233,0.162269533,0.188318696,0.167820333,0.23179626,0.209311596,0.064795204,0.09269999999999999,0.086325,0.11449999999999999,0.06485,0.165501815,0.220855098,0.216739972
2014-04-01 20:00:00+00:00,0.136501999,0.115745553,0.056759999,0.162375699,0.156642553,0.191647143,0.160379999,0.226031652,0.203044113,0.067743404,0.092475,0.0851,0.11445,0.063125,0.161002415,0.221809911,0.21501865
2014-04-02 20:00:00+00:00,0.137139285,0.115736834,0.057322499,0.160248579,0.157446619,0.191817437,0.159609524,0.225476811,0.201212381,0.068697465,0.09185,0.0848,0.1142,0.063,0.161313588,0.225653779,0.21359431
2014-04-03 20:00:00+00:00,0.137799371,0.115336924,0.055493899,0.159719806,0.157337271,0.185435275,0.161836362,0.225881376,0.201658249,0.068512336,0.09179999999999999,0.08315,0.11255000000000001,0.06285,0.156511991,0.225188145,0.211631533
2014-04-04 20:00:00+00:00,0.140292392,0.111526003,0.0537352,0.156590818,0.160873628,0.185849028,0.171484317,0.228476286,0.207573037,0.067867302,0.08839999999999999,0.083025,0.11019999999999999,0.06235,0.152694445,0.224627135,0.212136541
2014-04-07 20:00:00+00:00,0.147455571,0.110288256,0.0541459,0.156826379,0.167756428,0.185191237,0.176174006,0.228856197,0.207524575,0.070677395,0.08689999999999999,0.08102499999999999,0.10859999999999999,0.06175,0.163466929,0.224266113,0.210537806
2014-04-08 20:00:00+00:00,0.144702971,0.109666703,0.052431999,0.157357629,0.164149628,0.185414687,0.172026718,0.229154765,0.206791137,0.068875804,0.086775,0.081475,0.1081,0.0622,0.164723557,0.222332339,0.211972028
2014-04-09 20:00:00+00:00,0.1392571,0.110245106,0.0508432,0.152137737,0.161943885,0.1843023,0.165890151,0.22554993,0.205108925,0.067415975,0.0851,0.07980000000000001,0.10439999999999999,0.061375,0.163007723,0.226679928,0.210726238
2014-04-10 20:00:00+00:00,0.1484613,0.112676862,0.051392,0.152998987,0.166639999,0.183331937,0.180378715,0.231631756,0.215222771,0.073628756,0.08574999999999999,0.080875,0.10375,0.061500000000000006,0.167011914,0.22454981,0.213236421
2014-04-11 20:00:00+00:00,0.153461971,0.118504896,0.053569999,0.1540351,0.167859885,0.182115525,0.184895931,0.232503657,0.215232187,0.077931073,0.0863,0.082775,0.10644999999999999,0.06035,0.175243222,0.225723951,0.215293274
2014-04-14 20:00:00+00:00,0.150487799,0.120469812,0.054188799,0.155343982,0.165553642,0.180169893,0.180815827,0.229360434,0.2120384,0.078355687,0.0861,0.085275,0.1061,0.060125000000000005,0.175171086,0.222008193,0.214788986
2014-04-15 20:00:00+00:00,0.147393657,0.12022215,0.055020699,0.158670144,0.164506371,0.181664674,0.184011793,0.233073713,0.2154806,0.076169995,0.0855,0.08497500000000001,0.10625,0.0601,0.17902579,0.217704745,0.213018412
2014-04-16 20:00:00+00:00,0.144056285,0.120378345,0.054401599,0.156396062,0.160639214,0.180409387,0.184277396,0.225808562,0.206410875,0.07365278,0.08495,0.085075,0.10414999999999999,0.060375,0.171956923,0.219266926,0.212336394
2014-04-17 20:00:00+00:00,0.141202042,0.119940156,0.054456,0.157142586,0.156884419,0.180328224,0.174951634,0.221344539,0.200937556,0.072991199,0.084225,0.08485,0.10365,0.060175,0.1688637,0.217743642,0.208326344
2014-04-21 20:00:00+00:00,0.140318657,0.118708562,0.055098378,0.157322179,0.157201228,0.176791563,0.172191177,0.222188947,0.203223637,0.073395924,0.08505000000000001,0.08497500000000001,0.10395,0.0604,0.1688637,0.215223419,0.208326344
2014-04-22 20:00:00+00:00,0.1387186,0.117570793,0.054222574,0.157842551,0.1572656,0.17968,0.166601524,0.221632663,0.202897812,0.071921812,0.08405,0.0842,0.1026,0.06085,0.163899937,0.214612729,0.207498165
2014-04-23 20:00:00+00:00,0.139085636,0.118337799,0.054633637,0.155513834,0.155509663,0.177529246,0.164739813,0.220030252,0.202360403,0.071973281,0.0815,0.083825,0.10215,0.0604,0.165692866,0.212749918,0.206881629
2014-04-24 20:00:00+00:00,0.139460209,0.118485887,0.054400662,0.155413599,0.15693305,0.178739903,0.168102724,0.2194828,0.202203649,0.070989421,0.0791,0.08377499999999999,0.09925,0.059925,0.164868671,0.211672785,0.204305668
2014-04-25 20:00:00+00:00,0.141862411,0.118687732,0.054744996,0.156270598,0.162795818,0.180377838,0.172376034,0.219644202,0.204621781,0.071142756,0.07877499999,0.084325,0.098,0.05965,0.17255648,0.211084603,0.203527407
2014-04-28 20:00:00+00:00,0.139242818,0.119471562,0.054664,0.15410251,0.1585166,0.179606651,0.173566868,0.221417121,0.2050485,0.070560025,0.078525,0.08317500000000001,0.0984,0.059725,0.169090352,0.211346006,0.201475158
2014-04-29 20:00:00+00:00,0.138389568,0.118944318,0.054332921,0.152321596,0.157944609,0.179178948,0.170595337,0.219866026,0.200811343,0.069856831,0.0797,0.08365,0.0993,0.05965,0.164968168,0.211346006,0.199121274
2014-04-30 20:00:00+00:00,0.136806718,0.119229656,0.053981453,0.153241103,0.157136013,0.181210477,0.168404503,0.210640652,0.198826806,0.069497499,0.0797,0.0823,0.0993,0.06005,0.164760356,0.204884036,0.198908617
2014-05-01 20:00:00+00:00,0.137412468,0.1193491,0.055177984,0.151682172,0.155117256,0.181351632,0.166799944,0.212407113,0.196001512,0.071514825,0.0786,0.082475,0.09945,0.059500000000000004,0.164760356,0.202676414,0.198908617
2014-05-02 20:00:00+00:00,0.139196363,0.116067581,0.05359,0.148822572,0.155423863,0.177400516,0.166564899,0.208783333,0.191077212,0.071684099,0.076325,0.08275,0.09685,0.059475,0.167133188,0.200351478,0.198145577
2014-05-05 20:00:00+00:00,0.139133886,0.118414156,0.054742929,0.150763065,0.153523963,0.180275903,0.166179406,0.210049246,0.194391687,0.072343906,0.07695,0.081675,0.0971,0.059275,0.167144828,0.200351478,0.196738878
2014-05-06 20:00:00+00:00,0.14140299,0.119351337,0.054003937,0.148973351,0.15310409,0.177689429,0.168533172,0.211201495,0.192100962,0.070999068,0.076525,0.08039999999999999,0.0966,0.05975,0.16907548,0.200351478,0.196738878
2014-05-07 20:00:00+00:00,0.1383225,0.11878505,0.053759421,0.151341224,0.15288,0.177004064,0.170141172,0.209446698,0.187053934,0.069200731,0.075475,0.080225,0.09655,0.060125000000000005,0.166812537,0.201266174,0.197265695
2014-05-08 20:00:00+00:00,0.137886072,0.118565,0.05291,0.150005337,0.1587836,0.175955903,0.168710544,0.204094828,0.1868479,0.069891099,0.0736,0.08045,0.09525,0.059675000000000006,0.162002814,0.199084344,0.1941391
2014-05-09 20:00:00+00:00,0.136386072,0.117929187,0.051617514,0.150114379,0.158503154,0.17510429,0.165713965,0.200680991,0.185691937,0.069858301,0.0711,0.080625,0.0907,0.059275,0.162874339,0.196128104,0.188230886
2014-05-12 20:00:00+00:00,0.1329175,0.119394693,0.053673171,0.148413082,0.155031668,0.172503896,0.160763765,0.19930931,0.179964237,0.068034418,0.07155,0.080825,0.08994999999999999,0.058600000000000006,0.159574071,0.192067566,0.186443237
2014-05-13 20:00:00+00:00,0.133990422,0.118625898,0.051069842,0.146241999,0.151717897,0.173460767,0.1606405,0.194743321,0.17416065,0.068267018,0.0733,0.07945,0.0909,0.058949999999999995,0.158360965,0.191243914,0.185745324
2014-05-14 20:00:00+00:00,0.135464436,0.121659424,0.052964125,0.145558506,0.149730681,0.170990541,0.161277313,0.195102626,0.176722187,0.067703887,0.073125,0.0791,0.09075,0.058449999999999995,0.158245818,0.191407278,0.186181882
2014-05-15 20:00:00+00:00,0.139369656,0.125212378,0.055073756,0.147652518,0.155193254,0.171263638,0.16524811,0.197321872,0.180873664,0.065562762,0.074975,0.07997499999999999,0.0928,0.057925000000000004,0.163461851,0.191701662,0.186309258
2014-05-16 20:00:00+00:00,0.135657913,0.123643106,0.055533362,0.14686931,0.154229768,0.16104569,0.161788679,0.196098886,0.176918432,0.062386267,0.075325,0.07975,0.09394999999999999,0.058499999999999996,0.161270921,0.193104562,0.186786515
2014-05-19 20:00:00+00:00,0.133647327,0.122800453,0.054856468,0.144897403,0.150218443,0.160597087,0.159520327,0.19405136,0.173860548,0.059980253,0.07440000000000001,0.079475,0.09365,0.058499999999999996,0.158839768,0.192303378,0.18652494
2014-05-20 20:00:00+00:00,0.13532909,0.121742937,0.054981574,0.144456627,0.149897818,0.15935267,0.1604118,0.194269555,0.180936,0.060466374,0.074175,0.07875,0.09455,0.058550000000000005,0.15728512,0.192101193,0.183688992
2014-05-21 20:00:00+00:00,0.131268047,0.121109603,0.054725137,0.145153427,0.145548411,0.163118109,0.159545636,0.192771804,0.176981151,0.062615656,0.07429999999999999,0.07934999999999999,0.09705,0.0581,0.155911123,0.188092317,0.181947932
2014-05-22 20:00:00+00:00,0.1320058,0.119602156,0.054016937,0.144344658,0.147239999,0.161851293,0.155627793,0.190097066,0.171949832,0.061699965,0.07139999999999999,0.07919999999999999,0.093925,0.058525,0.15607544,0.186783107,0.183016343
2014-05-23 20:00:00+00:00,0.13170142,0.118515859,0.053398501,0.145529468,0.147247018,0.159461283,0.152635341,0.1894708,0.174188592,0.061856893,0.07137500000000001,0.078525,0.09315,0.059775,0.156345434,0.190606282,0.182779478
2014-05-27 20:00:00+00:00,0.131099545,0.11815215,0.053207437,0.150869586,0.145586689,0.160876696,0.152159779,0.188650222,0.17641752,0.059714081,0.0711,0.078275,0.091325,0.059675000000000006,0.153386097,0.191398548,0.180831958
2014-05-28 20:00:00+00:00,0.132299154,0.120750025,0.053579431,0.151563551,0.146956313,0.16215989,0.154426599,0.188296599,0.175769999,0.057508659,0.069975,0.07785,0.08935,0.06055,0.1528487,0.188971995,0.180384328
2014-05-29 20:00:00+00:00,0.132365431,0.119730265,0.0539005,0.149377372,0.145376327,0.160238503,0.153635503,0.190476762,0.174748842,0.057636624,0.070075,0.076925,0.08945,0.060975,0.154826315,0.186498596,0.180826347
2014-05-30 20:00:00+00:00,0.133840086,0.120138625,0.052804581,0.149472489,0.149131772,0.161480645,0.154941868,0.193350702,0.181279536,0.059961953,0.06845,0.075075,0.08685000000000001,0.0599,0.156492011,0.18537411,0.181853287
2014-06-02 20:00:00+00:00,0.135049272,0.122843199,0.057271524,0.150728517,0.150537136,0.1605192,0.156690241,0.193871545,0.181132578,0.0639112,0.070575,0.07535,0.08612500000000001,0.06055,0.15704256,0.188794093,0.181853287
2014-06-03 20:00:00+00:00,0.134442395,0.11912097,0.057564515,0.149918879,0.15221079,0.158327696,0.155969536,0.195042324,0.179254784,0.065248006,0.073075,0.075175,0.086925,0.0611,0.156964422,0.192090125,0.184695388
2014-06-04 20:00:00+00:00,0.13331675,0.118833506,0.057281446,0.147775875,0.15144259,0.155643651,0.155468862,0.195823291,0.180639421,0.065417896,0.0737,0.076325,0.08725,0.061575,0.156151176,0.19049104,0.184345433
2014-06-05 20:00:00+00:00,0.13062339,0.118175928,0.054622581,0.144977303,0.151466818,0.15634125,0.153297637,0.195793048,0.176885947,0.061209106,0.07255,0.07435,0.08695,0.061475,0.150467872,0.191273543,0.183611967
2014-06-06 20:00:00+00:00,0.126154263,0.11684155,0.052313587,0.139480862,0.1470148,0.154927509,0.151579717,0.193963805,0.172839073,0.06210155,0.0683,0.072875,0.083325,0.059275,0.146917143,0.190449646,0.182830443
2014-06-09 20:00:00+00:00,0.1276024,0.115665706,0.052710195,0.135962431,0.147448325,0.153287116,0.151938224,0.19462334,0.173194842,0.063805684,0.068175,0.072325,0.082475,0.05915,0.145140114,0.18508691,0.181015162
2014-06-10 20:00:00+00:00,0.127207295,0.113764256,0.054429849,0.134266955,0.147434052,0.153307148,0.152017282,0.193927686,0.172863536,0.06313115,0.06860000000000001,0.071575,0.081625,0.058499999999999996,0.144613519,0.185130055,0.180947139
2014-06-11 20:00:00+00:00,0.128983965,0.113109959,0.053212212,0.133661179,0.145955145,0.15331137,0.152958365,0.193698075,0.176102526,0.064018218,0.06945,0.069525,0.08185,0.057775,0.147468785,0.180388328,0.178955483
2014-06-12 20:00:00+00:00,0.132848045,0.113435962,0.050714375,0.136078496,0.149922709,0.164284658,0.155017144,0.195050648,0.179292505,0.06368135,0.070375,0.06985000000000001,0.0817,0.058274999999999993,0.148131275,0.181519487,0.177310716
2014-06-13 20:00:00+00:00,0.131653009,0.113985492,0.051842437,0.134367179,0.152186511,0.1684688,0.1538142,0.194680464,0.178708736,0.062680421,0.0693,0.069175,0.080175,0.056875,0.15016964,0.184747813,0.177577654
2014-06-16 20:00:00+00:00,0.132822813,0.114345221,0.052029575,0.135296993,0.154274831,0.168666109,0.155561337,0.195421464,0.180418736,0.065242406,0.06945,0.06974999999999999,0.0803,0.057175000000000004,0.153709447,0.183028968,0.176832383
2014-06-17 20:00:00+00:00,0.130876443,0.115018156,0.054041421,0.135246751,0.153049536,0.164603503,0.154210325,0.193553751,0.179969605,0.065092979,0.07005,0.06915,0.081275,0.057074999999999994,0.151187348,0.180330228,0.176553415
2014-06-18 20:00:00+00:00,0.124990272,0.112599625,0.050695,0.13314582,0.148696705,0.163061999,0.150509572,0.189333967,0.174936315,0.066623537,0.07035,0.06987499999999999,0.080925,0.057350000000000005,0.149968395,0.180498524,0.176010375
2014-06-19 20:00:00+00:00,0.123393886,0.113751512,0.049430557,0.141421717,0.148909934,0.164499045,0.148776637,0.189835659,0.174076447,0.064024587,0.06745,0.068775,0.07752499999000001,0.06085,0.144827909,0.178338343,0.175169979
2014-06-20 20:00:00+00:00,0.126137054,0.112922999,0.048240837,0.136871724,0.148575169,0.171177238,0.148725975,0.187638529,0.171641347,0.060033556,0.066925,0.06862499999999999,0.076575,0.059524999999999995,0.145686826,0.179026992,0.171384884
2014-06-23 20:00:00+00:00,0.127194968,0.113461113,0.052481804,0.13551292,0.147881224,0.1693764,0.149177193,0.188693535,0.171454894,0.061688656,0.06615,0.06815,0.076825,0.059074999999999996,0.147286252,0.179682712,0.170678077
2014-06-24 20:00:00+00:00,0.130533999,0.1132458,0.0542395,0.1360108,0.1553388,0.166813651,0.148398918,0.18800527,0.1709296,0.063101999,0.06634999999999999,0.067475,0.0781,0.05945,0.147011173,0.178993262,0.169140039
2014-06-25 20:00:00+00:00,0.128146033,0.114399035,0.054924099,0.135002366,0.153030816,0.170065696,0.145626507,0.187197443,0.172338933,0.061811766,0.06625,0.0672,0.07907499999999999,0.06145,0.150930455,0.175814819,0.168460903
2014-06-26 20:00:00+00:00,0.127506206,0.112857437,0.0547818,0.1339209,0.153323013,0.16172857,0.14456291,0.183421935,0.170942577,0.063242933,0.066175,0.06497499999999999,0.0786,0.06075,0.151541738,0.171066896,0.168350875
2014-06-27 20:00:00+00:00,0.12689278,0.113017173,0.054683399,0.1328863,0.15178532,0.15908668,0.143318648,0.184210697,0.169015499,0.063201133,0.0667,0.064725,0.079375,0.059875,0.153654249,0.173691528,0.169821862
2014-06-30 20:00:00+00:00,0.126376293,0.113450355,0.054047999,0.137042,0.152492266,0.160218619,0.14289074,0.182555416,0.169114488,0.064228666,0.06662499999999999,0.06292500000000001,0.079425,0.06085,0.152556173,0.172425223,0.169916626
2014-07-01 20:00:00+00:00,0.125057816,0.113721177,0.0556401,0.136073166,0.152285453,0.162176806,0.141476126,0.181378097,0.1652369,0.061542794,0.06505,0.062400000000000004,0.076725,0.06095,0.147920425,0.171653387,0.169916626
2014-07-02 20:00:00+00:00,0.12318604,0.1138176,0.0575035,0.13635,0.15122108,0.156538645,0.1399268,0.183187654,0.163825666,0.060422399,0.062725,0.06205,0.076475,0.060700000000000004,0.14614774,0.172360456,0.173123631
2014-07-03 17:00:00+00:00,0.121445083,0.111477777,0.0560118,0.132884833,0.148992853,0.153861491,0.138160166,0.181916816,0.161896688,0.063645099,0.061799999999999994,0.0623,0.076375,0.060250000000000005,0.141186244,0.171774163,0.173901806
2014-07-07 20:00:00+00:00,0.125076233,0.111262042,0.054325399,0.132582133,0.152832313,0.1522126,0.141082333,0.183285878,0.162341022,0.062946155,0.0611,0.06275,0.07505,0.06085,0.147127297,0.168160807,0.174637781
2014-07-08 20:00:00+00:00,0.1281093,0.111921159,0.0530668,0.13159115,0.15328492,0.154967858,0.146071071,0.185794054,0.16649845,0.063253599,0.061349999999999995,0.06245,0.07492499999999999,0.061175,0.153886688,0.165795358,0.174779419
2014-07-09 20:00:00+00:00,0.12592028,0.112463344,0.0542692,0.132065866,0.151349918,0.157043477,0.144164774,0.186162737,0.165567555,0.066943166,0.060925,0.0625,0.075275,0.062575,0.150508747,0.163305036,0.175584833
2014-07-10 20:00:00+00:00,0.129853093,0.114583411,0.053547999,0.131409366,0.153023833,0.159634387,0.147229459,0.18651241,0.169558488,0.070070288,0.06275,0.063125,0.0774,0.061325000000000005,0.155319158,0.162752255,0.175837021
2014-07-11 20:00:00+00:00,0.12703332,0.113464733,0.053347,0.1326365,0.15536772,0.159501587,0.1454584,0.187743756,0.1694506,0.066589466,0.061825,0.062625,0.076925,0.060975,0.154464113,0.162651432,0.175877602
2014-07-14 20:00:00+00:00,0.124921124,0.113324372,0.05387,0.134414466,0.152217793,0.161576535,0.144963366,0.18691081,0.165480711,0.067346611,0.061200000000000004,0.06282499999999999,0.076,0.06075,0.149965145,0.158660451,0.175454876
2014-07-15 20:00:00+00:00,0.12622582,0.111545711,0.0535568,0.135393333,0.152905,0.162697432,0.146959127,0.187178594,0.167701666,0.06856,0.06045,0.064,0.0758,0.0601,0.154218665,0.159078746,0.175365033
2014-07-16 20:00:00+00:00,0.123506999,0.110178033,0.053559,0.13553865,0.148312089,0.159942875,0.14518915,0.188220367,0.165390433,0.067837499,0.05995,0.06485,0.0756,0.060375,0.148937762,0.159361607,0.175212163
2014-07-17 20:00:00+00:00,0.133864533,0.114347344,0.052119999,0.14064435,0.156748486,0.156260387,0.15388509,0.19241324,0.179774977,0.070806722,0.0613,0.06525,0.07595,0.060599999999999994,0.156913335,0.158988361,0.173489912
2014-07-18 20:00:00+00:00,0.126884842,0.112094222,0.05263,0.1385602,0.152005833,0.154904341,0.144127299,0.189864789,0.174080555,0.067877422,0.06045,0.06634999999999999,0.07635,0.060599999999999994,0.156069245,0.162313197,0.17433753
2014-07-21 20:00:00+00:00,0.1280096,0.1130536,0.05561684,0.1392024,0.15440492,0.152815999,0.1462703,0.1902437,0.172248499,0.0677124,0.060925,0.06475,0.07564999999000001,0.0621,0.159705311,0.162313197,0.173628638
2014-07-22 20:00:00+00:00,0.126795272,0.1124896,0.051380451,0.138721276,0.151342676,0.159088196,0.144841752,0.189451109,0.170691509,0.065391738,0.06115,0.0653,0.0758,0.062175,0.153448785,0.16147537,0.176250098
2014-07-23 20:00:00+00:00,0.128275827,0.112892266,0.050729733,0.135737476,0.151168619,0.153599036,0.144379833,0.188923781,0.171075909,0.070683509,0.06167500000000001,0.06485,0.07485,0.06292500000000001,0.152914591,0.16354007,0.18284721
2014-07-24 20:00:00+00:00,0.130179981,0.112899514,0.0544235,0.136775,0.151559265,0.152319954,0.145542664,0.192914581,0.17293659,0.069183857,0.0633,0.0654,0.0756,0.062725,0.151925293,0.163832484,0.186159833
2014-07-25 20:00:00+00:00,0.132762054,0.113790595,0.0525389,0.137748204,0.152956868,0.155386431,0.147147961,0.192183954,0.175742336,0.068852019,0.0644,0.06495000000000001,0.07595,0.062275,0.157521482,0.16655159,0.185363512
2014-07-28 20:00:00+00:00,0.132099231,0.114729271,0.0535163,0.1386374,0.153189971,0.15271939,0.14803389,0.195355318,0.174393299,0.066749676,0.06417500000000001,0.0653,0.07595,0.060625,0.159517209,0.171617903,0.191332391
2014-07-29 20:00:00+00:00,0.134626045,0.116445885,0.053184199,0.140965428,0.153674128,0.158499947,0.150002742,0.197523272,0.177388654,0.0696801,0.06622499999999999,0.06495000000000001,0.07725,0.060625,0.157535888,0.176760785,0.195046468
2014-07-30 20:00:00+00:00,0.133575422,0.116169066,0.0539658,0.141541133,0.155540166,0.167157718,0.148704999,0.198616968,0.179057531,0.075180066,0.069725,0.06572499999999999,0.079325,0.0596,0.160763397,0.177607062,0.197552919
2014-07-31 20:00:00+00:00,0.147700409,0.118375123,0.05322295,0.143913338,0.169278057,0.175824789,0.161445438,0.200206072,0.190218654,0.078716723,0.07135,0.067475,0.0821,0.059925,0.169355294,0.179381618,0.192195371
2014-08-01 20:00:00+00:00,0.151005027,0.118525171,0.05370253,0.139855342,0.171819571,0.173153095,0.163912491,0.201585454,0.191165277,0.087361199,0.0672,0.068425,0.0817,0.059375,0.173595009,0.182142781,0.192432408
2014-08-04 20:00:00+00:00,0.145290127,0.118394361,0.054140966,0.139374399,0.167429485,0.174109344,0.160998742,0.2006872,0.186735654,0.083683619,0.0653,0.068075,0.079,0.059325,0.172271222,0.180008342,0.192510858
2014-08-05 20:00:00+00:00,0.1542735,0.118876547,0.054344633,0.140483771,0.180469515,0.17240297,0.166890202,0.20414135,0.1946514,0.083300547,0.0653,0.068175,0.07795,0.05925,0.169550109,0.17654263,0.190787104
2014-08-06 20:00:00+00:00,0.15425889,0.119785714,0.055238799,0.141798628,0.182088,0.170464008,0.167647179,0.207063463,0.199070409,0.082141142,0.06745,0.0687,0.07975,0.059475,0.173510353,0.178968972,0.192872045
2014-08-07 20:00:00+00:00,0.156592472,0.122583864,0.05675509,0.142581552,0.182392032,0.169949521,0.169499469,0.210023209,0.201813699,0.083344452,0.069,0.071975,0.08234999999999999,0.059824999999999996,0.179499405,0.177402848,0.193611125
2014-08-08 20:00:00+00:00,0.152366509,0.1246492,0.058567813,0.143518466,0.17521339,0.172633619,0.169407145,0.211297854,0.197917374,0.083808966,0.07155,0.073125,0.08675000000000001,0.060774999999999996,0.181410836,0.187360193,0.196732777
2014-08-11 20:00:00+00:00,0.146448227,0.123432035,0.057697654,0.143152771,0.17674985,0.170666268,0.163532028,0.2078442,0.193278963,0.081141828,0.069625,0.0738,0.08410000000000001,0.0604,0.174305061,0.180877553,0.198695803
2014-08-12 20:00:00+00:00,0.146500772,0.12338299,0.057503423,0.143481666,0.17855547,0.171271636,0.162377471,0.206548127,0.190946681,0.0812674,0.0697,0.0725,0.08380000000000001,0.060375,0.17518876,0.177629607,0.197020323
2014-08-13 20:00:00+00:00,0.139678736,0.122313438,0.057129075,0.142481047,0.173198497,0.170727626,0.15613689,0.204040322,0.18915149,0.080140019,0.0704,0.0728,0.082725,0.060725,0.170600362,0.177555738,0.196081172
2014-08-14 20:00:00+00:00,0.135080563,0.121993542,0.055381599,0.138801057,0.169963157,0.176581709,0.151249642,0.204107781,0.186835504,0.0787834,0.07055,0.0689,0.08125,0.061175,0.167434945,0.175991259,0.195467074
2014-08-15 20:00:00+00:00,0.135264609,0.124754266,0.058994923,0.14086115,0.168056239,0.180602714,0.15065158,0.201869909,0.185005054,0.077511738,0.07175,0.0682,0.082525,0.061125,0.172127684,0.176967074,0.193355451
2014-08-18 20:00:00+00:00,0.129912436,0.122604561,0.0575361,0.140347847,0.164182102,0.183170754,0.147190095,0.199797272,0.178464036,0.074150819,0.07055,0.0682,0.08055,0.061625,0.164939475,0.174918301,0.192640444
2014-08-19 20:00:00+00:00,0.128549465,0.123040299,0.056643,0.1405546,0.1579564,0.183997622,0.1459625,0.198170531,0.173091763,0.076852849,0.06905,0.0682,0.07980000000000001,0.061375,0.161248269,0.172036644,0.190534309
2014-08-20 20:00:00+00:00,0.128915,0.122646361,0.057563333,0.140384428,0.157972152,0.180788921,0.146367652,0.196913199,0.174835499,0.076141066,0.071225,0.069775,0.0808,0.061375,0.161777748,0.170720557,0.189328296
2014-08-21 20:00:00+00:00,0.128092236,0.120152028,0.055798496,0.141329619,0.156785538,0.177661324,0.146437552,0.198025606,0.17451668,0.076483542,0.07165,0.0698,0.07985,0.061125,0.158336644,0.171993819,0.189214789
2014-08-22 20:00:00+00:00,0.12844629,0.1198548,0.055912479,0.1409107,0.157394692,0.177883108,0.145537306,0.197507657,0.17375825,0.078626671,0.071225,0.0693,0.07844999999999999,0.06115,0.162352323,0.172905837,0.187111074
2014-08-25 20:00:00+00:00,0.128013327,0.118776219,0.055208233,0.139537599,0.156791316,0.17519196,0.144691865,0.193697372,0.1675002,0.074199426,0.072175,0.071175,0.07780000000000001,0.0613,0.156225748,0.171237245,0.184548756
2014-08-26 20:00:00+00:00,0.128353438,0.117232238,0.05498296,0.13825088,0.153960139,0.173081101,0.145097785,0.193143101,0.1654688,0.076781238,0.0713,0.07045,0.07769999999999999,0.062375,0.154171406,0.170187964,0.182632522
2014-08-27 20:00:00+00:00,0.130026595,0.11714025,0.054086124,0.1351886,0.154106857,0.171660088,0.144939373,0.193219708,0.166599375,0.075388178,0.070225,0.070125,0.07745,0.06282499999999999,0.155540163,0.167153027,0.182346844
2014-08-28 20:00:00+00:00,0.13190065,0.120413666,0.054540043,0.13451,0.155309506,0.170466799,0.145980368,0.194848298,0.1694733,0.080041633,0.071525,0.07047500000000001,0.0784,0.062325,0.160301465,0.164207188,0.181283029
2014-08-29 20:00:00+00:00,0.133029768,0.121015964,0.054563213,0.134150109,0.15471361,0.170462622,0.146874231,0.191245464,0.17039863,0.078589085,0.0707,0.071525,0.0782,0.0623,0.161206371,0.164211668,0.178363349
2014-09-02 20:00:00+00:00,0.133665176,0.1240775,0.058292319,0.137164785,0.158596402,0.178510326,0.146489442,0.186907396,0.17108806,0.079435371,0.07345,0.0739,0.0796,0.061950000000000005,0.161556013,0.164413232,0.175769003
2014-09-03 20:00:00+00:00,0.134229016,0.123494042,0.058056435,0.134235273,0.157302166,0.175428081,0.149288995,0.189233179,0.16937255,0.07982598,0.0729,0.07285,0.07875,0.061799999999999994,0.15683024,0.170452779,0.180881148
2014-09-04 20:00:00+00:00,0.133937,0.122935642,0.059100099,0.13524219,0.15922629,0.172729721,0.149693433,0.188607284,0.170266749,0.080692209,0.07325,0.07665,0.0779,0.06065,0.153131949,0.168763384,0.183370978
2014-09-05 20:00:00+00:00,0.13033936,0.120554792,0.057975499,0.134566928,0.157895708,0.176788393,0.146318718,0.188969945,0.1692138,0.080422785,0.0718,0.076,0.076825,0.059325,0.152412854,0.171281391,0.186601791
2014-09-08 20:00:00+00:00,0.1324128,0.123230438,0.0579516,0.138151095,0.165160487,0.17767554,0.148186476,0.189085572,0.17208424,0.079138495,0.0735,0.077425,0.078025,0.059000000000000004,0.155237886,0.167955944,0.186548106
2014-09-09 20:00:00+00:00,0.135045919,0.124127333,0.057434446,0.142481566,0.161536213,0.17892457,0.150871899,0.191824962,0.178585575,0.081867,0.081625,0.0815,0.0823,0.06045,0.157760714,0.169512178,0.186548106
2014-09-10 20:00:00+00:00,0.134025899,0.123818114,0.057570079,0.145341771,0.164375574,0.186984868,0.147892285,0.193449491,0.176749985,0.081547657,0.083425,0.08227499999999999,0.087025,0.060774999999999996,0.160168177,0.171662617,0.189382523
2014-09-11 20:00:00+00:00,0.133965574,0.126363628,0.057630166,0.146167289,0.166304876,0.187230622,0.149225952,0.193694216,0.180498749,0.080064142,0.08315,0.083125,0.0861,0.060925,0.161540081,0.179039934,0.190026184
2014-09-12 20:00:00+00:00,0.1367956,0.124699876,0.05779118,0.151812961,0.172997356,0.188031934,0.152092649,0.19605222,0.185150294,0.080632347,0.08335000000000001,0.077875,0.086725,0.061399999999999996,0.160486494,0.176886606,0.189836255
2014-09-15 20:00:00+00:00,0.1390816,0.125321642,0.05777454,0.147302371,0.168897734,0.186556275,0.157998128,0.19840684,0.18687818,0.082393571,0.083925,0.07825,0.08705,0.061325000000000005,0.160464009,0.176886606,0.191510993
2014-09-16 20:00:00+00:00,0.13319108,0.124743138,0.058464159,0.146632942,0.166422659,0.178054795,0.152350742,0.200112542,0.185882,0.079874957,0.08195000000000001,0.07877499999,0.08625,0.06225,0.161672027,0.172629164,0.192386985
2014-09-17 20:00:00+00:00,0.131933625,0.121686238,0.05769668,0.147085723,0.16557318,0.177645701,0.149954555,0.198632772,0.182571355,0.078219504,0.07919999999999999,0.076975,0.085425,0.061799999999999994,0.15900873,0.172041711,0.193079403
2014-09-18 20:00:00+00:00,0.129678,0.122019599,0.055434899,0.1445876,0.1701685,0.180052465,0.1471868,0.196889674,0.180102,0.0781732,0.081075,0.0781,0.08372500000000001,0.059500000000000004,0.156034412,0.173424337,0.192447411
2014-09-19 20:00:00+00:00,0.1324356,0.119812253,0.055209,0.150333271,0.168817931,0.17962315,0.142059057,0.194044545,0.176517619,0.078432821,0.08045,0.076875,0.0819,0.059000000000000004,0.154260674,0.178446444,0.189918512
2014-09-22 20:00:00+00:00,0.138634985,0.120053295,0.056279,0.149174214,0.173472988,0.183258485,0.154325914,0.199165877,0.180102819,0.081193757,0.08015,0.07715,0.08539999999999999,0.057999999999999996,0.155819105,0.17872457,0.188735804
2014-09-23 20:00:00+00:00,0.143775714,0.120987023,0.053166199,0.148873428,0.174473349,0.186759436,0.158292685,0.197899138,0.182924476,0.081500111,0.08072499999999999,0.077675,0.088475,0.0574,0.162085611,0.17872457,0.187275562
2014-09-24 20:00:00+00:00,0.137769542,0.121906952,0.055275399,0.151962857,0.17130336,0.184734754,0.1541914,0.196843437,0.179997845,0.081595761,0.08,0.078225,0.08675000000000001,0.057824999999999994,0.157683609,0.178869381,0.187247053
2014-09-25 20:00:00+00:00,0.147084,0.1228297,0.0551868,0.1551965,0.186553742,0.189984327,0.164164142,0.203355254,0.186806438,0.085151184,0.082025,0.08005000000000001,0.08895,0.0572,0.162956148,0.179458673,0.187789617
2014-09-26 20:00:00+00:00,0.143742999,0.12549238,0.056583,0.154525257,0.178638239,0.185936727,0.17334,0.202256325,0.188549828,0.083272629,0.08255000000000001,0.081525,0.09050000000000001,0.0571,0.163441625,0.180279976,0.188096149
2014-09-29 20:00:00+00:00,0.1486368,0.124890577,0.056425,0.1531274,0.18296532,0.189814098,0.163509,0.210715013,0.196808977,0.088775048,0.08355,0.084725,0.09234999999999999,0.057350000000000005,0.168006214,0.179272559,0.192951408
2014-09-30 20:00:00+00:00,0.151659621,0.124575873,0.055479,0.160508842,0.190102615,0.198678022,0.166150589,0.210133227,0.196018812,0.088574692,0.082975,0.084525,0.09305,0.059050000000000005,0.16530112,0.180840729,0.194836529
2014-10-01 20:00:00+00:00,0.15757471,0.127034328,0.05661,0.160663192,0.197960599,0.201235475,0.171961132,0.2150732,0.202930685,0.091975925,0.0842,0.086525,0.092725,0.05945,0.170142748,0.182080707,0.194836529
2014-10-02 20:00:00+00:00,0.157020253,0.127593809,0.056429099,0.159101046,0.199105438,0.211682308,0.172277526,0.216126033,0.201481657,0.093075623,0.08595000000000001,0.08372500000000001,0.0934,0.05875,0.181054747,0.187063638,0.194836529
2014-10-03 20:00:00+00:00,0.149063514,0.126508269,0.056807899,0.164502742,0.201068995,0.213797173,0.167238378,0.214943823,0.195885377,0.09084917,0.0825,0.0848,0.09215,0.059875,0.177108476,0.186203905,0.197164712
2014-10-06 20:00:00+00:00,0.151147253,0.12639019,0.0585227,0.156404619,0.199437931,0.217242072,0.169060364,0.213258498,0.194025561,0.090592403,0.08205,0.087425,0.0917,0.05965,0.174385565,0.183322448,0.192736812
2014-10-07 20:00:00+00:00,0.15886681,0.131336907,0.059011599,0.154402614,0.206171038,0.216916668,0.174619196,0.213286542,0.198608219,0.091124374,0.08259999999999999,0.08602499999999999,0.09175000000000001,0.05975,0.180839607,0.183635143,0.189511736
2014-10-08 20:00:00+00:00,0.149627725,0.132336655,0.059653099,0.15409835,0.199662992,0.221154262,0.165639149,0.212450738,0.194847777,0.089475928,0.079775,0.084225,0.0875,0.06,0.182116583,0.185995227,0.190673562
2014-10-09 20:00:00+00:00,0.162788357,0.1323102,0.0602616,0.154808114,0.217769572,0.224016436,0.176673628,0.214835566,0.201995866,0.091055055,0.07730000000000001,0.08085,0.084275,0.059824999999999996,0.181412963,0.189372576,0.191214132
2014-10-10 20:00:00+00:00,0.171315732,0.134491738,0.0598986,0.1579505,0.234353474,0.240217583,0.189621164,0.219423816,0.210972863,0.097028615,0.07875,0.08195000000000001,0.09147500000000001,0.060599999999999994,0.189228817,0.192654882,0.195745293
2014-10-13 20:00:00+00:00,0.188796785,0.138653539,0.0635054,0.156110828,0.263310358,0.245492052,0.199670792,0.225208811,0.215906333,0.102216002,0.08065,0.081275,0.09415,0.0613,0.189060142,0.192654882,0.198084856
2014-10-14 20:00:00+00:00,0.183567646,0.142098328,0.0651651,0.157386664,0.270846127,0.271215565,0.201840396,0.22513765,0.214104457,0.101643658,0.08005000000000001,0.08070000000000001,0.095075,0.061224999999999995,0.191517315,0.197820514,0.198727803
2014-10-15 20:00:00+00:00,0.199670078,0.163785611,0.076763,0.165863992,0.27037582,0.2879584,0.211579828,0.237161864,0.227550711,0.099500394,0.085975,0.08172499999999999,0.100775,0.0661,0.210135398,0.195383905,0.197791254
2014-10-16 20:00:00+00:00,0.193635124,0.155852936,0.069982099,0.167872689,0.259464222,0.266522031,0.212524496,0.232513864,0.223329863,0.100164423,0.086925,0.08465,0.10685,0.068275,0.214399421,0.207021749,0.201877449
2014-10-17 20:00:00+00:00,0.18117965,0.144141699,0.0677928,0.165547325,0.252265488,0.251099841,0.20379965,0.228716983,0.2108828,0.094524942,0.0827,0.0837,0.10002499999999999,0.0682,0.195042641,0.212600389,0.204238879
2014-10-20 20:00:00+00:00,0.174948071,0.143059255,0.065799841,0.161113821,0.239357815,0.249415847,0.194279689,0.221408515,0.206973619,0.090518309,0.08134999999999999,0.082775,0.097675,0.06697499999999999,0.197941473,0.204711066,0.200177522
2014-10-21 20:00:00+00:00,0.163584342,0.140999057,0.065580533,0.158293857,0.227922057,0.233703587,0.183657485,0.215707613,0.199031805,0.086361012,0.07955,0.08199999999999999,0.0943,0.065875,0.186056289,0.205120287,0.200126157
2014-10-22 20:00:00+00:00,0.170968971,0.139469752,0.065279766,0.157201221,0.233166153,0.234608698,0.187564908,0.213325708,0.20008979,0.088764123,0.07825,0.082225,0.09095,0.06445000000000001,0.183594101,0.19861189,0.194806562
2014-10-23 20:00:00+00:00,0.163590571,0.139406412,0.066253142,0.157402742,0.224364204,0.245777752,0.181936692,0.211655932,0.197431942,0.08684676,0.0797,0.08195000000000001,0.09185,0.062575,0.181473249,0.197975977,0.19099576
2014-10-24 20:00:00+00:00,0.161597933,0.140092165,0.067117142,0.153578473,0.231294635,0.255071422,0.180416039,0.209628094,0.192309644,0.085659423,0.080875,0.08199999999999999,0.091225,0.062625,0.183912295,0.200117975,0.190203781
2014-10-27 20:00:00+00:00,0.161260542,0.139531885,0.065843571,0.152403271,0.236165514,0.260885606,0.179732878,0.207454067,0.192348857,0.088275057,0.080275,0.081475,0.09125,0.062275,0.187234616,0.197519732,0.187609822
2014-10-28 20:00:00+00:00,0.15315035,0.137635488,0.065266111,0.151204,0.22234385,0.262607485,0.173221812,0.206361844,0.187810177,0.089604222,0.07795,0.08025,0.087925,0.063225,0.178236358,0.19477881,0.185311753
2014-10-29 20:00:00+00:00,0.156130317,0.134713942,0.064364546,0.149524107,0.22224181,0.25330698,0.17332571,0.206560867,0.189183142,0.088808866,0.0757,0.07730000000000001,0.08560000000000001,0.063,0.17857701,0.191760591,0.186076899
2014-10-30 20:00:00+00:00,0.153785596,0.132936361,0.064300209,0.155354278,0.223456128,0.266760647,0.174371205,0.203910525,0.1850366,0.088968523,0.07894999999999999,0.0793,0.08495,0.062675,0.176956671,0.190004878,0.186053639
2014-10-31 20:00:00+00:00,0.150490114,0.133400357,0.061459898,0.171852028,0.224570342,0.270570295,0.171083828,0.202723722,0.183854523,0.08788853,0.090675,0.083025,0.0913,0.0637,0.171733785,0.206089238,0.187154393
2014-11-03 21:00:00+00:00,0.152155378,0.133643955,0.062465671,0.171475303,0.223979231,0.274246488,0.171864396,0.20172083,0.185987561,0.08975372,0.100825,0.08564999999999999,0.0971,0.063975,0.175060138,0.206089238,0.186400929
2014-11-04 21:00:00+00:00,0.154471057,0.134336142,0.062380952,0.167972828,0.235726571,0.283927333,0.173500478,0.201528491,0.18399099,0.092064623,0.09865,0.085975,0.09695000000000001,0.067575,0.182644476,0.230480276,0.185674235
2014-11-05 21:00:00+00:00,0.150985871,0.133783746,0.062323022,0.182838792,0.2273414,0.279735523,0.173197239,0.204489844,0.184655492,0.092361376,0.101075,0.089425,0.100425,0.0721,0.179438917,0.226482474,0.18602209
2014-11-06 21:00:00+00:00,0.147743599,0.131403022,0.062304444,0.1820278,0.2235838,0.281860317,0.1713013,0.202608406,0.190105688,0.087665833,0.103275,0.090725,0.10272500000000001,0.0725,0.178004722,0.225750777,0.185370637
2014-11-07 21:00:00+00:00,0.145041241,0.129133928,0.061700828,0.175398555,0.230307978,0.270687523,0.16869413,0.200195884,0.184263571,0.085869028,0.09664999999999999,0.08992499999999999,0.0966,0.0719,0.181611374,0.222415468,0.186498695
2014-11-10 21:00:00+00:00,0.140946385,0.1287475,0.062293366,0.175670778,0.220307671,0.276067028,0.166339035,0.200586135,0.179895628,0.086085063,0.08904999999999999,0.08875,0.09210000000000002,0.0692,0.174702624,0.214395715,0.188170306
2014-11-11 21:00:00+00:00,0.141043705,0.129004384,0.062070158,0.173460142,0.223299835,0.268800526,0.162453137,0.200091722,0.17874306,0.083086622,0.09625,0.08895,0.09515000000000001,0.070575,0.170678936,0.216745533,0.188720352
2014-11-12 21:00:00+00:00,0.142144685,0.131729457,0.063298985,0.174057142,0.218522428,0.269576768,0.162183342,0.201336,0.186070057,0.085705709,0.10015,0.089775,0.09905,0.07125,0.177954711,0.228352454,0.189053213
2014-11-13 21:00:00+00:00,0.144684189,0.131036085,0.064416139,0.171312966,0.224898579,0.2842094,0.163061326,0.204325376,0.186509047,0.083876911,0.10055,0.08845,0.1002,0.07137500000000001,0.176699542,0.234519861,0.191575864
2014-11-14 21:00:00+00:00,0.143520478,0.132171106,0.064877884,0.179186739,0.219652101,0.277031723,0.1633468,0.206593529,0.182365898,0.085136999,0.107225,0.089425,0.10475,0.0707,0.175565969,0.234073106,0.194540794
2014-11-17 21:00:00+00:00,0.143992237,0.130759199,0.064395766,0.178070875,0.223770804,0.288862846,0.16489415,0.202295294,0.1850624,0.0852464,0.1079,0.09029999999999999,0.10515000000000001,0.07165,0.173611896,0.238241324,0.192209867
2014-11-18 21:00:00+00:00,0.143340335,0.130449619,0.06389535,0.180002,0.223445485,0.28277019,0.163543985,0.203022682,0.180553003,0.082230577,0.1072,0.089775,0.10455,0.0713,0.172497738,0.237747928,0.190452626
2014-11-19 21:00:00+00:00,0.144019832,0.12860205,0.064030698,0.180821899,0.231806568,0.279708412,0.165492998,0.198947805,0.184067968,0.081978203,0.10880000000000001,0.09015000000000001,0.10679999999999999,0.07077499999999999,0.176031605,0.231100549,0.185743978
2014-11-20 21:00:00+00:00,0.143339528,0.130000714,0.064836571,0.173181371,0.218992184,0.283685219,0.164097339,0.198329152,0.1834382,0.082175,0.11505000000000001,0.09105,0.11375,0.0721,0.179667829,0.224997048,0.182374085
2014-11-21 21:00:00+00:00,0.142642164,0.130563968,0.06209858,0.171143882,0.21350922,0.288320285,0.16427888,0.1999889,0.175852428,0.080017936,0.10825,0.09292500000000001,0.10885,0.071575,0.173091862,0.22487359,0.178944655
2014-11-24 21:00:00+00:00,0.140559781,0.126119174,0.061756468,0.169192171,0.218749142,0.299070888,0.161212428,0.198699482,0.177426866,0.080540584,0.10685,0.091575,0.108475,0.07245,0.173861258,0.22487359,0.185175052
2014-11-25 21:00:00+00:00,0.141388354,0.12915638,0.063633638,0.168837117,0.22061238,0.304966866,0.161318073,0.196969138,0.178735904,0.081431866,0.10554999999999999,0.09105,0.10835,0.0716,0.174403768,0.221799187,0.182878466
2014-11-26 21:00:00+00:00,0.141187036,0.127440555,0.063078299,0.1689844,0.22456037,0.300563476,0.15925265,0.199242058,0.176964111,0.081719522,0.1023,0.090075,0.1067,0.071675,0.172621118,0.219324289,0.188069365
2014-11-28 18:00:00+00:00,0.146947872,0.12698098,0.06415572,0.181152957,0.238431397,0.301367746,0.162530196,0.201507205,0.180271428,0.082839607,0.102925,0.09405,0.1091,0.07894999999999999,0.172730772,0.221964788,0.197612666
2014-12-01 21:00:00+00:00,0.150204872,0.127756428,0.066384961,0.173012028,0.241214565,0.312320926,0.169333364,0.208894867,0.187498571,0.086366761,0.10464999999999999,0.09555,0.109275,0.0803,0.17643876,0.225294616,0.201613535
2014-12-02 21:00:00+00:00,0.145334975,0.130328222,0.070337857,0.170542017,0.24044475,0.311816019,0.167225537,0.212340779,0.189404107,0.085387003,0.10675000000000001,0.0968,0.11025,0.07875,0.176174281,0.224575034,0.207871662
2014-12-03 21:00:00+00:00,0.143579968,0.130464482,0.068253876,0.168429371,0.225888985,0.30724085,0.165675929,0.216044126,0.188037171,0.08357826,0.11445,0.09822499999999999,0.11525,0.079375,0.173819467,0.229316646,0.217819973
2014-12-04 21:00:00+00:00,0.143510163,0.130147428,0.0683715,0.168143628,0.234940446,0.307015066,0.165393861,0.234338552,0.187373799,0.0876768,0.112125,0.09685,0.1137,0.081075,0.173179593,0.232108892,0.23192816
2014-12-05 21:00:00+00:00,0.141931122,0.130337638,0.067773117,0.168057557,0.243262114,0.3061604,0.164562005,0.232320023,0.187949644,0.087215357,0.11595000000000001,0.095225,0.11414999999999999,0.0836,0.168872177,0.230528671,0.235792214
2014-12-08 21:00:00+00:00,0.149590113,0.128139366,0.067934044,0.166409,0.236711755,0.331253663,0.170281187,0.2341279,0.193687777,0.089681166,0.11789999999999999,0.095525,0.11630000000000001,0.086,0.171834171,0.228087882,0.23469497
2014-12-09 21:00:00+00:00,0.15078599,0.133317809,0.06819938,0.168599632,0.258554871,0.32714619,0.171024496,0.235452758,0.200858,0.090725714,0.1175,0.09512499999999999,0.11955,0.08755,0.188106208,0.228981882,0.234450023
2014-12-10 21:00:00+00:00,0.165587893,0.137943793,0.070101923,0.1678142,0.247644126,0.348512457,0.181755765,0.236804617,0.210239495,0.10006756,0.117925,0.09519999999999999,0.1199,0.08952500000000001,0.192167857,0.237116623,0.232594957
2014-12-11 21:00:00+00:00,0.173916181,0.139103844,0.072223619,0.167746785,0.278262282,0.351850653,0.186949394,0.237511647,0.215197984,0.101989785,0.115175,0.09515000000000001,0.11800000000000001,0.09045,0.192558092,0.233703941,0.231457831
2014-12-12 21:00:00+00:00,0.18483505,0.145728904,0.074201642,0.171746953,0.294391931,0.393343753,0.193958346,0.238114229,0.224725533,0.113197261,0.113125,0.095,0.11710000000000001,0.099625,0.213206488,0.232188008,0.226136183
2014-12-15 21:00:00+00:00,0.182250909,0.142809479,0.072387279,0.176682253,0.304584594,0.407039133,0.196646143,0.239880911,0.235447565,0.117124444,0.10707499999999999,0.09695000000000001,0.11155,0.105075,0.22487568,0.223844596,0.224318021
2014-12-16 21:00:00+00:00,0.192948018,0.147840126,0.076650614,0.181148875,0.302329644,0.407042396,0.20659766,0.239618894,0.238531892,0.125388392,0.1119,0.09845000000000001,0.1153,0.13955,0.212542048,0.225943889,0.22480994
2014-12-17 21:00:00+00:00,0.175086499,0.141637,0.073678,0.1809248,0.2960716,0.415325901,0.194454594,0.240579388,0.236157,0.120761589,0.10817500000000001,0.106725,0.11465,0.1355,0.215982507,0.222394738,0.232318346
2014-12-18 21:00:00+00:00,0.160906839,0.138210444,0.0709624,0.174540071,0.269465474,0.430097228,0.176524036,0.236323488,0.223797968,0.1133761,0.1081,0.10945,0.11157500000000001,0.122325,0.200268887,0.221272679,0.235332689
2014-12-19 21:00:00+00:00,0.160772614,0.140395896,0.071457,0.173536857,0.271631868,0.43764845,0.179744281,0.234624811,0.223538323,0.110258088,0.10772500000000002,0.107825,0.109725,0.11460000000000001,0.202608508,0.220303784,0.234393118
2014-12-22 21:00:00+00:00,0.155489057,0.141754495,0.0684296,0.178190214,0.265468,0.444768755,0.1790213,0.236686029,0.216765159,0.110957538,0.109125,0.1043,0.10800000000000001,0.11689999999999999,0.198395925,0.218771201,0.236583454
2014-12-23 21:00:00+00:00,0.154937957,0.137461371,0.0700055,0.175883371,0.247006071,0.4499912,0.178833488,0.236795411,0.210952241,0.106723991,0.110875,0.105025,0.10890000000000001,0.11695,0.195820578,0.218771201,0.235769737
2014-12-24 18:00:00+00:00,0.154948428,0.14215142,0.0706511,0.175376428,0.258709985,0.461039722,0.177809768,0.236806388,0.22817219,0.108372844,0.110375,0.1045,0.108575,0.11800000000000001,0.197114088,0.219196494,0.23482827
2014-12-26 21:00:00+00:00,0.152185731,0.139817195,0.07137,0.173337714,0.253466962,0.470825288,0.17601597,0.242176976,0.211243428,0.108370628,0.11047499999999999,0.104475,0.108575,0.11855,0.197114088,0.220613945,0.23482827
2014-12-29 21:00:00+00:00,0.1523475,0.140443577,0.0699952,0.1761912,0.253298,0.477825142,0.176233,0.240981314,0.209546244,0.107137188,0.112175,0.106025,0.1092,0.11994999999999999,0.20103942,0.22289878,0.239513636
2014-12-30 21:00:00+00:00,0.155522462,0.140911714,0.0731038,0.174406428,0.254091753,0.450044797,0.176832203,0.241313588,0.212130895,0.108009255,0.11255000000000001,0.1059,0.109,0.1166,0.208245432,0.225675707,0.238212248
2014-12-31 21:00:00+00:00,0.165263828,0.141601542,0.0701084,0.177150921,0.2557757,0.440622977,0.183061146,0.241002523,0.2143512,0.110254248,0.1124,0.105375,0.108225,0.1153,0.207712805,0.225675707,0.238137166
2015-01-02 21:00:00+00:00,0.159863403,0.142600057,0.0712762,0.177274435,0.258619713,0.447114528,0.181999639,0.241911,0.213586253,0.109775448,0.113325,0.105975,0.1093,0.10915,0.216227797,0.225675707,0.241982168
2015-01-05 21:00:00+00:00,0.174338678,0.147489352,0.0703628,0.180023714,0.272720987,0.47678275,0.189756771,0.24613432,0.225955714,0.115468625,0.11137499999999999,0.106925,0.109825,0.1063,0.228015923,0.22311103,0.242701936
2015-01-06 21:00:00+00:00,0.180395635,0.155561,0.0715478,0.178089135,0.283121534,0.466021777,0.19435188,0.246644447,0.229627485,0.118521184,0.11025,0.10585000000000001,0.10915,0.10805,0.226172911,0.224158275,0.244721118
2015-01-07 21:00:00+00:00,0.172499313,0.153901368,0.0755549,0.177885696,0.272885444,0.43041464,0.189638896,0.245361529,0.2224568,0.117075073,0.10885,0.1073,0.11047499999999999,0.111,0.221812411,0.222673013,0.244917626
2015-01-08 21:00:00+00:00,0.16091265,0.149375888,0.0750108,0.172606075,0.263707552,0.419943396,0.180381125,0.238241517,0.210740888,0.109741679,0.1073,0.106875,0.10744999999999999,0.11065,0.210816942,0.220993283,0.237842848
2015-01-09 21:00:00+00:00,0.166486517,0.151553433,0.074423999,0.171255,0.264765881,0.420732146,0.182567428,0.237803047,0.206265371,0.107969517,0.1032,0.10490000000000001,0.103675,0.1097,0.222164392,0.219175013,0.234983263
2015-01-12 21:00:00+00:00,0.172637528,0.155186831,0.0732513,0.166729535,0.275866347,0.431826166,0.189160157,0.242209647,0.212060555,0.108781997,0.10220000000000001,0.103025,0.10272500000000001,0.11265,0.221774857,0.219175013,0.233401766
2015-01-13 21:00:00+00:00,0.174947571,0.154396209,0.069998,0.1673772,0.286101101,0.432797758,0.191731585,0.239146617,0.210267215,0.10599162,0.1026,0.1007,0.104425,0.112025,0.215865091,0.219484228,0.229198074
2015-01-14 21:00:00+00:00,0.176811508,0.155733771,0.0704605,0.170027571,0.283359634,0.425278128,0.194059776,0.241299588,0.212778571,0.108567361,0.10325,0.10055,0.109925,0.1107,0.221518188,0.219691076,0.228284489
2015-01-15 21:00:00+00:00,0.181292035,0.162975103,0.0737168,0.181042,0.287014624,0.442695,0.200052514,0.243116114,0.214412276,0.110539969,0.11137499999999999,0.11074999999999999,0.11465,0.11395,0.218038607,0.216596075,0.228610603
2015-01-16 21:00:00+00:00,0.176711655,0.161212731,0.072922,0.188440471,0.272783791,0.442415203,0.194855867,0.244486352,0.209118571,0.106320982,0.11192500000000001,0.11205,0.11525,0.11925000000000001,0.220452743,0.218454775,0.231045566
2015-01-20 21:00:00+00:00,0.173930949,0.1632368,0.076735066,0.193492,0.27180012,0.457480537,0.1902039,0.245705811,0.205636933,0.107893466,0.10917500000000001,0.108425,0.11375,0.11324999999999999,0.208453349,0.213410489,0.236801625
2015-01-21 21:00:00+00:00,0.168084857,0.158828857,0.07211575,0.190312007,0.257730088,0.461822357,0.18790335,0.241020229,0.195965752,0.104806892,0.104525,0.10785,0.111525,0.11255000000000001,0.207186808,0.215107209,0.236299125
2015-01-22 21:00:00+00:00,0.157168857,0.157663911,0.069339738,0.186177457,0.249051814,0.451573606,0.175125271,0.241142476,0.189191638,0.103975453,0.104175,0.108375,0.11275,0.10845,0.198970196,0.215899692,0.236022137
2015-01-23 21:00:00+00:00,0.15991525,0.160479171,0.069010038,0.183265705,0.24618616,0.475044374,0.175292591,0.236875,0.189218809,0.100722147,0.10705,0.113075,0.118675,0.1092,0.200195894,0.210015042,0.235194516
2015-01-26 21:00:00+00:00,0.155816482,0.158236907,0.069512341,0.178614625,0.239688575,0.461556984,0.175204514,0.237309223,0.193160409,0.096691333,0.107225,0.1142,0.12075,0.10945,0.194388697,0.206814316,0.233244945
2015-01-27 21:00:00+00:00,0.162879641,0.157760101,0.069052657,0.179057464,0.238346061,0.443097007,0.184765946,0.240384417,0.1911122,0.096829682,0.10679999999999999,0.1124,0.11865,0.10880000000000001,0.20074964,0.20150062,0.22874444
2015-01-28 21:00:00+00:00,0.176969978,0.158927,0.067683842,0.175610371,0.256074785,0.43399725,0.192393257,0.23839855,0.199781785,0.095958285,0.106975,0.1119,0.11852499999999999,0.108125,0.200783594,0.199636957,0.228306912
2015-01-29 21:00:00+00:00,0.16810015,0.159523166,0.068309333,0.1795692,0.252923575,0.428260887,0.1861014,0.239309682,0.201562622,0.094624844,0.10855000000000001,0.11384999999999999,0.12915,0.10835,0.204527104,0.201529422,0.230377673
2015-01-30 21:00:00+00:00,0.179471607,0.161943555,0.068800153,0.177628124,0.25762475,0.428785775,0.192556042,0.245046723,0.21451393,0.095442555,0.112675,0.1149,0.137575,0.1101,0.209787965,0.201106094,0.225323892
2015-02-02 21:00:00+00:00,0.172154536,0.161667466,0.068198157,0.180889871,0.25114343,0.434783721,0.190214605,0.243801435,0.211318333,0.095074671,0.1117,0.11382500000000001,0.13705,0.1124,0.208043642,0.203900197,0.225566791
2015-02-03 21:00:00+00:00,0.163005471,0.162507757,0.071694242,0.181872214,0.242939368,0.429492887,0.184645428,0.240211973,0.201264733,0.090434857,0.10835,0.11175,0.1377,0.1144,0.202548746,0.205174073,0.227476058
2015-02-04 21:00:00+00:00,0.168151737,0.166003142,0.071568533,0.183231364,0.24917075,0.457585556,0.185000642,0.245309,0.20525805,0.090337142,0.10455,0.11289999999999999,0.13570000000000002,0.11245,0.200296174,0.202357553,0.230405301
2015-02-05 21:00:00+00:00,0.161844163,0.163685295,0.070911571,0.182699425,0.240926928,0.469024581,0.180356503,0.243686994,0.200479323,0.087109023,0.101625,0.1125,0.13335,0.11019999999999999,0.200182508,0.202874883,0.231245135
2015-02-06 21:00:00+00:00,0.167378999,0.162749828,0.072446877,0.185086364,0.243762992,0.476726145,0.182027735,0.243079788,0.202270095,0.087491098,0.10255,0.111875,0.12990000000000002,0.10725,0.197969467,0.20424672,0.22850295
2015-02-09 21:00:00+00:00,0.172719,0.162163055,0.073141666,0.1833388,0.245355379,0.45312555,0.186674599,0.241905105,0.206212844,0.089333777,0.105825,0.11410000000000001,0.12987500000000002,0.1091,0.210268398,0.203842222,0.224753856
2015-02-10 21:00:00+00:00,0.164824334,0.162141385,0.074939999,0.179999276,0.245088602,0.447526928,0.178430285,0.237209835,0.202260228,0.08704,0.10825,0.11335,0.130525,0.108475,0.20812739,0.204889133,0.221083276
2015-02-11 21:00:00+00:00,0.163812317,0.162618746,0.073907142,0.180439657,0.246924964,0.463526215,0.178279774,0.233804602,0.204928958,0.088018571,0.113275,0.114875,0.13244999999999998,0.10825,0.211769138,0.204889133,0.219679817
2015-02-12 21:00:00+00:00,0.156179476,0.162601574,0.072196087,0.17843465,0.23688625,0.457779456,0.173238602,0.229205305,0.193646474,0.086471536,0.110725,0.115175,0.13419999999999999,0.10682499999999999,0.203710575,0.204796529,0.216522963
2015-02-13 21:00:00+00:00,0.153741885,0.157013619,0.072660642,0.174625171,0.225470914,0.445916525,0.168136214,0.226886717,0.194531352,0.084813828,0.107325,0.1134,0.131625,0.10535,0.203398531,0.203675186,0.214169939
2015-02-17 21:00:00+00:00,0.154501661,0.157544463,0.07142409,0.175174764,0.233675482,0.43926814,0.170352333,0.221038635,0.192599476,0.084089174,0.104225,0.113125,0.12442500000000001,0.09895,0.202813364,0.205113362,0.208408278
2015-02-18 21:00:00+00:00,0.154766247,0.160820025,0.074081317,0.175514807,0.233795025,0.431106712,0.169615528,0.217342705,0.190441542,0.083413222,0.10352499999999999,0.1133,0.12140000000000001,0.098,0.196905146,0.202978478,0.20944663
2015-02-19 21:00:00+00:00,0.154598374,0.160704733,0.074895866,0.173004,0.231708212,0.442340828,0.167848124,0.217237929,0.190994,0.086338,0.10164999999999999,0.11324999999999999,0.1206,0.09789999999999999,0.197277092,0.205263192,0.20944663
2015-02-20 21:00:00+00:00,0.149684378,0.161606742,0.073423666,0.175733714,0.230305057,0.4338505,0.163744464,0.21471015,0.185101307,0.084317049,0.10300000000000001,0.112075,0.12185,0.098375,0.197694861,0.206488153,0.20944663
2015-02-23 21:00:00+00:00,0.147870972,0.164276844,0.073468811,0.175902721,0.226531992,0.445237457,0.163061042,0.2136314,0.187623368,0.08261353,0.10067500000000001,0.11167500000000001,0.118275,0.09787499999999999,0.18931697,0.20630285,0.212104476
2015-02-24 21:00:00+00:00,0.143735728,0.159829814,0.072957371,0.174522578,0.222898391,0.433639287,0.160434764,0.214721718,0.181202128,0.0808984,0.099825,0.1093,0.11615,0.09672499999999999,0.182065289,0.200885124,0.211324007
2015-02-25 21:00:00+00:00,0.143715956,0.160390595,0.071184433,0.168563785,0.216795414,0.429252992,0.160145303,0.213909187,0.181582499,0.07972903,0.090175,0.105725,0.10404999999999999,0.091075,0.17898318,0.194873906,0.210553909
2015-02-26 21:00:00+00:00,0.144195428,0.157928714,0.069112477,0.1652358,0.221301765,0.426227287,0.158240457,0.213559518,0.180642069,0.079185936,0.091275,0.101125,0.10585000000000001,0.0874,0.17527334,0.198746557,0.210120859
2015-02-27 21:00:00+00:00,0.14447416,0.157179214,0.07041638,0.161395742,0.220862401,0.421245906,0.160025721,0.21278975,0.177854495,0.080059542,0.09275,0.104425,0.1091,0.086175,0.173865514,0.201591022,0.208052058
2015-03-02 21:00:00+00:00,0.14002385,0.156946644,0.073076133,0.1606794,0.22261047,0.420641937,0.156218,0.210551031,0.176029644,0.083649488,0.09435,0.10439999999999999,0.1109,0.08592499999999999,0.175392376,0.200943538,0.205966665
2015-03-03 21:00:00+00:00,0.143259187,0.159122588,0.074756071,0.163125166,0.220633071,0.418111785,0.159337469,0.209113625,0.180592539,0.086374761,0.09207499999999999,0.10305,0.107,0.085825,0.179666412,0.198596474,0.20262248
2015-03-04 21:00:00+00:00,0.14185552,0.156427452,0.074868338,0.163164464,0.221390957,0.4119958,0.161850235,0.212636687,0.185536117,0.087281914,0.092225,0.103575,0.10460000000000001,0.08460000000000001,0.17587318,0.19946221,0.200186556
2015-03-05 21:00:00+00:00,0.142530892,0.15471962,0.074434855,0.1651225,0.22073607,0.399619651,0.161045978,0.213113749,0.188028688,0.083476031,0.09515000000000001,0.103325,0.1065,0.08072499999999999,0.17401561,0.1980552,0.199381036
2015-03-06 21:00:00+00:00,0.1508569,0.154175476,0.074971682,0.169747135,0.225812142,0.406853625,0.1674269,0.210491731,0.196184653,0.086800844,0.096175,0.10515000000000001,0.10475,0.08102499999999999,0.177944151,0.197932301,0.196124348
2015-03-09 20:00:00+00:00,0.149929246,0.154086171,0.073749514,0.167522069,0.230711506,0.410116562,0.167463542,0.211075875,0.196268571,0.087356971,0.0967,0.10490000000000001,0.10665,0.08295,0.178352411,0.196111628,0.195317643
2015-03-10 20:00:00+00:00,0.159362628,0.155665365,0.073648666,0.1752558,0.235088514,0.429702156,0.171139642,0.2129452,0.20300226,0.091279231,0.102675,0.11065,0.11230000000000001,0.0858,0.185874795,0.197478675,0.195046241
2015-03-11 20:00:00+00:00,0.162448999,0.159273333,0.072400733,0.185439375,0.234762649,0.426289671,0.178675585,0.213429312,0.202429644,0.090034111,0.1035,0.114175,0.118675,0.08735,0.182218555,0.195710828,0.195715514
2015-03-12 20:00:00+00:00,0.155042953,0.158370071,0.072023271,0.181400085,0.233056697,0.422507462,0.174284871,0.213308149,0.197756419,0.09028729,0.10189999999999999,0.111825,0.11449999999999999,0.087,0.181976212,0.196875654,0.199269704
2015-03-13 20:00:00+00:00,0.159820975,0.158210514,0.073136269,0.181766678,0.238517012,0.439619268,0.175616383,0.218226,0.206541968,0.091871682,0.100825,0.11474999999999999,0.11622500000000001,0.08735,0.182416246,0.199042112,0.203955754
2015-03-16 20:00:00+00:00,0.154460885,0.160329282,0.073317141,0.181833835,0.232526008,0.46266175,0.172042471,0.218274487,0.202227371,0.090476411,0.099225,0.113275,0.11365,0.09165,0.191106985,0.200848489,0.20614605
2015-03-17 20:00:00+00:00,0.155281792,0.160524285,0.072012933,0.185909785,0.232774485,0.466605768,0.170544814,0.2180842,0.200096923,0.091153104,0.0974,0.1134,0.11365,0.09315,0.191171474,0.199048405,0.207732501
2015-03-18 20:00:00+00:00,0.147070817,0.157078744,0.073258353,0.18072956,0.225445044,0.448391237,0.164816185,0.219527431,0.190967472,0.082077878,0.0956,0.110375,0.1104,0.09657500000000001,0.190452601,0.199787089,0.210927854
2015-03-19 20:00:00+00:00,0.151391657,0.158353314,0.073708571,0.174532457,0.228610679,0.449054156,0.165731678,0.217238875,0.199125873,0.091999888,0.09445,0.112525,0.11245,0.09230000000000001,0.190371369,0.197354288,0.210557764
2015-03-20 20:00:00+00:00,0.149757199,0.1553617,0.0727581,0.1761379,0.2256185,0.44895535,0.162157,0.212713756,0.19145,0.0871428,0.0929,0.112025,0.1076,0.092625,0.184701062,0.193576131,0.20659235
2015-03-23 20:00:00+00:00,0.150876375,0.154517164,0.0727876,0.175720875,0.22023658,0.434133759,0.163597675,0.213280874,0.188079618,0.087130615,0.0933,0.112225,0.10735,0.092475,0.187851139,0.193241752,0.207440765
2015-03-24 20:00:00+00:00,0.152588625,0.155287906,0.073017499,0.1739018,0.22182437,0.423246984,0.163519549,0.210582031,0.184506587,0.086823158,0.09332499999999999,0.10932499999999999,0.1073,0.09387499999999999,0.183794113,0.195715299,0.204739048
2015-03-25 20:00:00+00:00,0.1610455,0.15544164,0.0722085,0.171288737,0.22172347,0.418720768,0.1762129,0.21083785,0.192752525,0.089990559,0.09085000000000001,0.108225,0.10487500000000001,0.0931,0.188690284,0.194596844,0.203851138
2015-03-26 20:00:00+00:00,0.161071399,0.155314374,0.073358,0.168587,0.225622,0.411867675,0.176039,0.209666765,0.194831174,0.090127024,0.09244999999999999,0.11095000000000001,0.1076,0.09315,0.191507213,0.200938492,0.204753416
2015-03-27 20:00:00+00:00,0.159560125,0.158828081,0.0733476,0.168000975,0.2271395,0.419579475,0.17406205,0.2068205,0.191677662,0.089174245,0.0926,0.11137499999999999,0.10935,0.09445,0.192847533,0.206164211,0.202261967
2015-03-30 20:00:00+00:00,0.154136007,0.157201303,0.0723074,0.169843124,0.2202192,0.417410053,0.168569225,0.216910624,0.187288224,0.087942175,0.09465,0.11345000000000001,0.112775,0.095725,0.189028298,0.200764851,0.20831902
2015-03-31 20:00:00+00:00,0.160489862,0.158110012,0.0724969,0.16971845,0.222060172,0.428985937,0.174443125,0.215302375,0.189704781,0.089062876,0.09615,0.113375,0.1144,0.0986,0.193716404,0.203482043,0.21337449
2015-04-01 20:00:00+00:00,0.1602516,0.158431775,0.075719899,0.168432,0.221102839,0.41380895,0.1757425,0.219509531,0.188770275,0.093890768,0.096075,0.11405,0.11282500000000001,0.098675,0.194969839,0.206521932,0.216504177
2015-04-02 20:00:00+00:00,0.158094294,0.156889945,0.0729671,0.168901928,0.219762226,0.410724018,0.174529963,0.222011175,0.188422812,0.0911176,0.0955,0.11285,0.11505000000000001,0.098675,0.19307181,0.202833657,0.220500363
2015-04-06 20:00:00+00:00,0.155411233,0.156913437,0.072374,0.168690646,0.212569577,0.392388878,0.173098477,0.227858831,0.187095775,0.089660997,0.08805,0.108025,0.11067500000000001,0.09795,0.19307181,0.200905489,0.220500363
2015-04-07 20:00:00+00:00,0.155528466,0.155868518,0.0708239,0.166384592,0.212676898,0.380215646,0.172361049,0.228052193,0.188605843,0.0882729,0.09135,0.108925,0.107825,0.098625,0.188462401,0.199671143,0.220500363
2015-04-08 20:00:00+00:00,0.152256917,0.154002768,0.070684699,0.165422128,0.213982914,0.3938657,0.167152981,0.250416896,0.191316628,0.087986231,0.0885,0.10800000000000001,0.106875,0.09880000000000001,0.187979521,0.199078907,0.245905043
2015-04-09 20:00:00+00:00,0.147558921,0.150828329,0.0667533,0.165612658,0.210005533,0.382894979,0.165033032,0.2632432,0.190869825,0.086951039,0.08904999999999999,0.11115,0.10535,0.0987,0.184168066,0.200132853,0.254131422
2015-04-10 20:00:00+00:00,0.143747621,0.150365387,0.0658176,0.160699881,0.204719259,0.369796259,0.159213564,0.265307573,0.188550768,0.082729231,0.088675,0.111625,0.1051,0.09805,0.179604377,0.201522145,0.25976958
2015-04-13 20:00:00+00:00,0.149369561,0.150879375,0.066812,0.1617272,0.205322658,0.364277656,0.164044441,0.282901437,0.195195712,0.084274439,0.08994999999999999,0.112725,0.10827500000000001,0.09715,0.178558262,0.200662753,0.281457797
2015-04-14 20:00:00+00:00,0.146916501,0.1510638,0.0683452,0.164303028,0.199930666,0.364219987,0.163390702,0.272165193,0.190308,0.085613795,0.08814999999999999,0.111525,0.10717499999999999,0.0953,0.182924362,0.201789943,0.273802858
2015-04-15 20:00:00+00:00,0.144249057,0.149916925,0.0672492,0.163213982,0.195503089,0.366067745,0.159523437,0.2664049,0.187264484,0.081731951,0.08657500000000001,0.11137499999999999,0.1073,0.09405,0.181502784,0.200873884,0.267385764
2015-04-16 20:00:00+00:00,0.144132803,0.1514254,0.066161599,0.16332505,0.193708478,0.367883274,0.159787343,0.26307536,0.185316537,0.082576082,0.08602499999999999,0.110325,0.10679999999999999,0.09482499999999999,0.188232907,0.198457257,0.264140653
2015-04-17 20:00:00+00:00,0.151185636,0.153693578,0.065161799,0.162308035,0.197226656,0.367547812,0.167260806,0.272117703,0.192239124,0.087698506,0.08485,0.10915,0.10595,0.094,0.200655137,0.198963618,0.264065142
2015-04-20 20:00:00+00:00,0.146386442,0.152216362,0.067735162,0.164365057,0.193424857,0.3655526,0.159525293,0.27005804,0.1913509,0.083425093,0.08615,0.110525,0.1059,0.096175,0.193703064,0.199303801,0.267144991
2015-04-21 20:00:00+00:00,0.146203692,0.151118656,0.067427437,0.162779146,0.197083791,0.364266185,0.159274281,0.26764375,0.189675281,0.083262464,0.08664999999999999,0.11137499999999999,0.1079,0.096175,0.195234394,0.198539085,0.262642569
2015-04-22 20:00:00+00:00,0.143394814,0.151914487,0.065959275,0.16557615,0.194589524,0.355296438,0.157558175,0.271735154,0.187614637,0.08322075,0.087925,0.10952500000000001,0.1076,0.09484999999999999,0.194660427,0.203897181,0.269644354
2015-04-23 20:00:00+00:00,0.142988278,0.153503187,0.066291784,0.16779446,0.189454526,0.347682116,0.155101821,0.273511781,0.188375656,0.083052776,0.08869999999999999,0.108475,0.109275,0.09602499999999999,0.196506506,0.203444207,0.272313076
2015-04-24 20:00:00+00:00,0.143221084,0.151755874,0.065571999,0.170494142,0.191629044,0.338378503,0.154792257,0.279292306,0.187787936,0.08209125,0.08772500000000001,0.1074,0.10827500000000001,0.09494999999999999,0.195254609,0.202241551,0.275543777
2015-04-27 20:00:00+00:00,0.146669098,0.151906282,0.065692543,0.16850465,0.191778844,0.33275087,0.158623853,0.285373607,0.188106403,0.081872125,0.08835000000000001,0.106725,0.10797499999999999,0.095075,0.189417702,0.203297025,0.281354449
2015-04-28 20:00:00+00:00,0.143539507,0.1522335,0.068297762,0.167068417,0.188845162,0.332665548,0.160590718,0.280129965,0.185267512,0.084530718,0.0863,0.102425,0.1069,0.094075,0.193495087,0.199844725,0.276272682
2015-04-29 20:00:00+00:00,0.145903666,0.154048057,0.066862175,0.166207355,0.187689517,0.329225954,0.163752093,0.27797965,0.191009315,0.083636262,0.08650000000000001,0.101975,0.10832499999999999,0.09215,0.203593416,0.199844725,0.274976989
2015-04-30 20:00:00+00:00,0.151850185,0.156473937,0.066618487,0.168440607,0.189819085,0.332384038,0.174027377,0.275421148,0.193969899,0.086023912,0.0867,0.1023,0.1108,0.09154999999999999,0.204022049,0.200077419,0.271036362
2015-05-01 20:00:00+00:00,0.144332089,0.15816875,0.070358414,0.1725085,0.190360695,0.333370806,0.164107083,0.271207,0.191305681,0.085531432,0.090425,0.105475,0.112425,0.09147500000000001,0.204022049,0.196147085,0.271036362
2015-05-04 20:00:00+00:00,0.144231789,0.160754406,0.070551321,0.17327075,0.189448676,0.331112709,0.164326649,0.266310703,0.188031043,0.085050925,0.09052500000000001,0.10679999999999999,0.11295,0.09147500000000001,0.197939754,0.196147085,0.265407618
2015-05-05 20:00:00+00:00,0.152668366,0.161171587,0.071229909,0.172057728,0.194317726,0.325648348,0.172554134,0.269397774,0.194219334,0.086141296,0.089725,0.10675000000000001,0.1084,0.091875,0.206996472,0.196147085,0.264271986
2015-05-06 20:00:00+00:00,0.152651338,0.161085199,0.072281199,0.174646685,0.194252157,0.330973045,0.17673342,0.271850232,0.1983394,0.0895452,0.08807499999999999,0.107,0.10769999999999999,0.092225,0.206951674,0.196147085,0.267224567
2015-05-07 20:00:00+00:00,0.153011585,0.159028021,0.069722496,0.177381189,0.197004044,0.345716612,0.174714137,0.266354568,0.199488218,0.088858987,0.08855,0.10865,0.109625,0.0901,0.205875098,0.19663084,0.265847258
2015-05-08 20:00:00+00:00,0.144864078,0.156167015,0.068312343,0.168583282,0.189307451,0.336577567,0.165753963,0.265118137,0.189466429,0.085164178,0.08710000000000001,0.1067,0.10862500000000001,0.089425,0.193025568,0.193007502,0.268220808
2015-05-11 20:00:00+00:00,0.1487108,0.162225312,0.073601087,0.167504223,0.195932195,0.331721938,0.168407642,0.259676471,0.191551665,0.08906107,0.08555,0.10445,0.10647500000000001,0.08992499999999999,0.196256096,0.188063077,0.262462031
2015-05-12 20:00:00+00:00,0.149967501,0.1619825,0.071336149,0.16513,0.190302866,0.324464167,0.170347078,0.256903724,0.191547225,0.09025625,0.08585000000000001,0.102625,0.106425,0.08895,0.202015031,0.189235497,0.257559797
2015-05-13 20:00:00+00:00,0.148598164,0.162335781,0.071224181,0.165022732,0.189200457,0.330190279,0.168512321,0.251091399,0.189866812,0.091486795,0.08095000000000001,0.100575,0.10365,0.0874,0.201754767,0.187670048,0.246822251
2015-05-14 20:00:00+00:00,0.142738147,0.159929812,0.068117431,0.165420107,0.185885428,0.31875298,0.160507183,0.247432381,0.183744367,0.08993847,0.08065,0.09997500000000001,0.10435,0.08765,0.195626107,0.186164045,0.240248478
2015-05-15 20:00:00+00:00,0.141674996,0.159072771,0.066402578,0.16319106,0.184054973,0.312049458,0.160573822,0.243289562,0.178141081,0.091101539,0.08145,0.099375,0.10475,0.0866,0.196041228,0.184100251,0.245089162
2015-05-18 20:00:00+00:00,0.140000764,0.163419812,0.07085635,0.162661257,0.181726257,0.305233225,0.158557371,0.243436054,0.179747024,0.088490675,0.0803,0.10032500000000001,0.10505,0.08945,0.1915562,0.184005732,0.24253206
2015-05-19 20:00:00+00:00,0.139689736,0.165112121,0.07114536,0.16241576,0.181320834,0.325107932,0.158970455,0.250090893,0.180495034,0.089187787,0.086,0.104125,0.1075,0.088025,0.184918058,0.184983056,0.249128933
2015-05-20 20:00:00+00:00,0.139489859,0.165227418,0.071335687,0.160077414,0.183411992,0.323327019,0.157253135,0.249357343,0.178605421,0.089896775,0.08845,0.105475,0.10779999999999999,0.08705,0.184026151,0.185287761,0.249341177
2015-05-21 20:00:00+00:00,0.135928156,0.164547898,0.071439139,0.157391437,0.178659975,0.316456774,0.154867812,0.2472868,0.178345931,0.090405406,0.08602499999999999,0.102225,0.10577500000000001,0.0857,0.184638459,0.185729192,0.248552161
2015-05-22 20:00:00+00:00,0.136623505,0.162834624,0.071511818,0.154981714,0.180750428,0.315626129,0.154162492,0.254344821,0.17681385,0.088402906,0.08495,0.10432499999999999,0.10460000000000001,0.083825,0.186008188,0.18236903,0.25311658
2015-05-26 20:00:00+00:00,0.143362635,0.163868456,0.070646914,0.157560883,0.184519311,0.332542717,0.160257806,0.263148,0.185299696,0.091576718,0.09505000000000001,0.1091,0.107825,0.08615,0.194564907,0.180346206,0.262914139
2015-05-27 20:00:00+00:00,0.138778973,0.160683687,0.070708518,0.153894589,0.186830439,0.336559548,0.146772385,0.263512121,0.187429687,0.087369012,0.09942500000000001,0.106425,0.1074,0.086375,0.187688748,0.180152616,0.263744334
2015-05-28 20:00:00+00:00,0.138350921,0.1619755,0.071668709,0.152960875,0.184374087,0.335990348,0.153948626,0.265721081,0.190741431,0.089854859,0.09895,0.106425,0.1074,0.088275,0.191663204,0.183890672,0.263922732
2015-05-29 20:00:00+00:00,0.141922043,0.16032005,0.071086425,0.151611,0.184355197,0.330773445,0.157687428,0.263271881,0.192086875,0.090315775,0.09455,0.106075,0.10665,0.086875,0.199035372,0.185475536,0.260210024
2015-06-01 20:00:00+00:00,0.14163815,0.162320145,0.072069418,0.153098392,0.183833803,0.335156883,0.15783875,0.264785945,0.194995381,0.090989796,0.094675,0.10707499999999999,0.1065,0.089975,0.200722244,0.184098597,0.2629275
2015-06-02 20:00:00+00:00,0.143642684,0.16237705,0.073446649,0.15307225,0.184490345,0.333233754,0.16117032,0.262002148,0.191985225,0.091750771,0.09539999999999998,0.104375,0.10545,0.090375,0.201384843,0.181319789,0.26216173
2015-06-03 20:00:00+00:00,0.140957445,0.164123831,0.074743131,0.154214528,0.18557833,0.33792615,0.158883778,0.262172054,0.190631043,0.094816875,0.0947,0.103475,0.1059,0.09119999999999999,0.197965201,0.182517181,0.258967571
2015-06-04 20:00:00+00:00,0.148028095,0.165125187,0.076387393,0.159431485,0.190178875,0.345663703,0.165033511,0.26676874,0.199691475,0.096474381,0.0932,0.105025,0.10505,0.092775,0.200966345,0.180841886,0.262969267
2015-06-05 20:00:00+00:00,0.148331368,0.162658093,0.075836896,0.15768015,0.182308202,0.326595758,0.164581266,0.26662347,0.199275908,0.095986475,0.09244999999999999,0.10615000000000001,0.1063,0.09545,0.204262364,0.181195943,0.265497813
2015-06-08 20:00:00+00:00,0.153128333,0.164985078,0.077327393,0.156794292,0.187436078,0.329539538,0.171662688,0.266716221,0.202758381,0.0977364,0.092,0.10617499999999999,0.10535,0.095825,0.207363107,0.178286098,0.266093472
2015-06-09 20:00:00+00:00,0.151244885,0.1638173,0.07633919,0.153987971,0.188197737,0.324153924,0.169671609,0.267043232,0.204071275,0.099145729,0.09285,0.106675,0.1069,0.0986,0.205578225,0.182298633,0.267859789
2015-06-10 20:00:00+00:00,0.1439637,0.16638915,0.077626562,0.152725857,0.183111199,0.318887935,0.163386776,0.262814021,0.19499005,0.09639825,0.09125,0.106675,0.10797499999999999,0.097675,0.198250725,0.184001924,0.262088884
2015-06-11 20:00:00+00:00,0.141683459,0.163752804,0.075650718,0.15232545,0.183288981,0.322849017,0.162226329,0.258006086,0.192561618,0.095545628,0.08987500000000001,0.108125,0.105075,0.09775,0.195580426,0.180141537,0.257224583
2015-06-12 20:00:00+00:00,0.146429024,0.163358953,0.07822925,0.152145396,0.18665482,0.324374477,0.16597657,0.260197842,0.195715562,0.099699674,0.08875,0.10845,0.104825,0.0978,0.203047982,0.180112039,0.257627041
2015-06-15 20:00:00+00:00,0.151011563,0.16337304,0.077932998,0.153874746,0.186916326,0.327645637,0.168454672,0.258437884,0.199538574,0.101356881,0.08925000000000001,0.109075,0.10494999999999999,0.099675,0.210408753,0.181050917,0.256416641
2015-06-16 20:00:00+00:00,0.148930737,0.161762613,0.077758824,0.153375028,0.184094297,0.330285251,0.167444542,0.257750221,0.199372375,0.099565087,0.088175,0.108525,0.10460000000000001,0.09945,0.209874959,0.1820984,0.254181023
2015-06-17 20:00:00+00:00,0.148172924,0.158620039,0.076979109,0.1515675,0.183739091,0.33395584,0.166095817,0.255352673,0.197802987,0.098597431,0.08602499999999999,0.108525,0.10402499999999999,0.09897500000000001,0.212124622,0.182476966,0.255737532
2015-06-18 20:00:00+00:00,0.142088,0.157709437,0.078357187,0.150508257,0.183789028,0.334191058,0.158501146,0.253367663,0.19236755,0.095928174,0.085975,0.100075,0.10305,0.0973,0.211895975,0.180308413,0.25165702
2015-06-19 20:00:00+00:00,0.148753894,0.159973681,0.078156693,0.149350607,0.184212446,0.331130083,0.161752006,0.253490473,0.19150805,0.093773931,0.08650000000000001,0.101825,0.1048,0.09949999999999999,0.212964205,0.17674888,0.250145519
2015-06-22 20:00:00+00:00,0.1432968,0.159634,0.082158,0.1522512,0.1773674,0.321837251,0.156992,0.252592,0.18511,0.0935332,0.0837,0.09942500000000001,0.10414999999999999,0.100625,0.190827991,0.1747813,0.247931566
2015-06-23 20:00:00+00:00,0.140069,0.162580105,0.082144399,0.153397037,0.173247687,0.320219001,0.156430275,0.24846,0.177867088,0.091556622,0.084825,0.09942500000000001,0.10265,0.09849999999999999,0.189256569,0.174191047,0.248094674
2015-06-24 20:00:00+00:00,0.144171414,0.161965266,0.0824205,0.154359975,0.174258099,0.329230709,0.158284675,0.249022133,0.182538888,0.093494177,0.08539999999999999,0.10125,0.10247500000000001,0.09849999999999999,0.196123401,0.174606213,0.249258235
2015-06-25 20:00:00+00:00,0.145708742,0.162524126,0.0831964,0.15002385,0.180124791,0.328237225,0.16015125,0.249060066,0.185099691,0.09578625,0.08465,0.103025,0.09970000000000001,0.097925,0.198194196,0.17509596,0.24765266
2015-06-26 20:00:00+00:00,0.144187428,0.162679564,0.084234,0.1483986,0.181132986,0.326085574,0.161854057,0.251283555,0.189975977,0.095195255,0.08529999999999999,0.102675,0.101525,0.09725,0.200052578,0.177391533,0.249574801
2015-06-29 20:00:00+00:00,0.162809328,0.168747377,0.0858834,0.15222345,0.1908534,0.346868467,0.179888022,0.263232977,0.203236411,0.102423355,0.08645,0.10744999999999999,0.10644999999999999,0.101125,0.220130133,0.190271916,0.251969802
2015-06-30 20:00:00+00:00,0.159312357,0.166485933,0.084691599,0.1565511,0.18828775,0.340860361,0.178747389,0.261305333,0.198238666,0.101044666,0.08785,0.109025,0.10984999999999999,0.10145,0.229817906,0.187415495,0.252784174
2015-07-01 20:00:00+00:00,0.151257571,0.166242773,0.0844828,0.155364249,0.189212115,0.347788516,0.170134896,0.259853327,0.196831377,0.100984744,0.08539999999999999,0.10830000000000001,0.107225,0.100175,0.216249793,0.184857056,0.252784174
2015-07-02 20:00:00+00:00,0.1545554,0.16687996,0.083779,0.154636,0.18882847,0.344535825,0.1704472,0.258278988,0.1955296,0.100338333,0.0843,0.107625,0.10737500000000001,0.0993,0.220409436,0.181279016,0.250110798
2015-07-06 20:00:00+00:00,0.15747121,0.16562395,0.085163599,0.152737544,0.19333576,0.369434874,0.171872439,0.2567586,0.208181,0.1026621,0.08525,0.107625,0.1192,0.0993,0.222276767,0.185299931,0.249259014
2015-07-07 20:00:00+00:00,0.15368056,0.165740866,0.084135999,0.157157008,0.194186944,0.376374077,0.171148,0.267031491,0.211169388,0.096933611,0.0885,0.11495,0.1242,0.1048,0.224292114,0.179964203,0.246462122
2015-07-08 20:00:00+00:00,0.165019629,0.167676886,0.0836136,0.158771862,0.206426191,0.373629141,0.1808225,0.299841083,0.233087555,0.103004005,0.09369999999999999,0.11717499999999999,0.13305,0.10800000000000001,0.227715067,0.191178751,0.269016811
2015-07-09 20:00:00+00:00,0.16774708,0.16587856,0.0853655,0.159735808,0.208348415,0.368734877,0.18222064,0.287375,0.224341733,0.101666966,0.089775,0.115275,0.12975,0.1057,0.223038741,0.19353247,0.268553201
2015-07-10 20:00:00+00:00,0.15410405,0.165824444,0.08516,0.153632439,0.1989028,0.366295367,0.171174,0.275609288,0.209939972,0.096016555,0.08525,0.108525,0.1243,0.1018,0.212131975,0.196924877,0.268819973
2015-07-13 20:00:00+00:00,0.14281056,0.163905326,0.08439,0.153867316,0.185634864,0.355943193,0.159566561,0.261043055,0.203021444,0.092324933,0.08485,0.10817500000000001,0.11914999999999999,0.1013,0.197866823,0.186600838,0.255786222
2015-07-14 20:00:00+00:00,0.141114359,0.1603837,0.082594999,0.15310356,0.178137615,0.34357387,0.15649756,0.257903133,0.191622133,0.088619533,0.084925,0.10725,0.11435000000000001,0.10295,0.194497838,0.181643595,0.249723996
2015-07-15 20:00:00+00:00,0.1409085,0.160664797,0.07926,0.154336144,0.18747304,0.351187703,0.15420384,0.2586935,0.199156555,0.088415277,0.08310000000000001,0.106575,0.11085,0.10235,0.193859494,0.177673403,0.247084129
2015-07-16 20:00:00+00:00,0.136244299,0.156502953,0.0768994,0.155970591,0.18322481,0.35225608,0.14586572,0.256635388,0.192336277,0.086646855,0.08439999999999999,0.10647500000000001,0.1116,0.10189999999999999,0.187291452,0.173194719,0.241070437
2015-07-17 20:00:00+00:00,0.1345804,0.15219784,0.0756734,0.163587599,0.18747412,0.355614743,0.146127,0.2530992,0.19381045,0.0864652,0.081675,0.10647500000000001,0.1069,0.099625,0.18916891,0.172392095,0.240172189
2015-07-20 20:00:00+00:00,0.134863348,0.152089222,0.077197481,0.1729292,0.188964225,0.362290509,0.147149704,0.247100495,0.190314948,0.085566651,0.081075,0.10385,0.1067,0.097775,0.183879657,0.172392095,0.230203547
2015-07-21 20:00:00+00:00,0.136434418,0.153114087,0.075140132,0.173964482,0.189200011,0.359214987,0.149520483,0.245122282,0.190190205,0.087351097,0.080275,0.1041,0.104425,0.09755000000000001,0.186280707,0.171778764,0.226816496
2015-07-22 20:00:00+00:00,0.136214883,0.151287209,0.074461967,0.178302,0.195811093,0.373814458,0.151991916,0.246447486,0.194676511,0.08904036,0.08035,0.104125,0.1051,0.09824999999999999,0.186251665,0.175567936,0.229434406
2015-07-23 20:00:00+00:00,0.138953604,0.151701526,0.075455973,0.179736362,0.196482108,0.373340477,0.152703367,0.252053652,0.196200546,0.089897209,0.08245,0.1048,0.107225,0.09852499999999999,0.183903446,0.175513499,0.229039036
2015-07-24 20:00:00+00:00,0.144245741,0.153562728,0.076630177,0.17812822,0.21353772,0.375141874,0.160430593,0.257638325,0.206405014,0.09985593,0.0848,0.105175,0.1118,0.098675,0.187466532,0.178693482,0.230818038
2015-07-27 20:00:00+00:00,0.151716441,0.152404031,0.078079613,0.181748925,0.220955152,0.385690838,0.168244906,0.28053506,0.218036781,0.099045972,0.08535,0.10550000000000001,0.11315,0.09970000000000001,0.197266725,0.181960359,0.235664032
2015-07-28 20:00:00+00:00,0.142537425,0.152614469,0.076388406,0.175110645,0.209568472,0.38247725,0.162226009,0.269764047,0.205104139,0.096703139,0.08537499999999999,0.10467499999999999,0.113125,0.1005,0.191076635,0.182593635,0.238046996
2015-07-29 20:00:00+00:00,0.139352055,0.150573632,0.079013278,0.171402425,0.200256367,0.382579419,0.160160027,0.258551043,0.196450031,0.094439134,0.08380000000000001,0.102625,0.1117,0.1009,0.188942128,0.180455588,0.235306044
2015-07-30 20:00:00+00:00,0.138475672,0.149027518,0.078005081,0.169749653,0.196801304,0.372007935,0.158580576,0.259168391,0.201223604,0.092410204,0.086425,0.103325,0.1118,0.10005000000000001,0.189788798,0.178397707,0.234567633
2015-07-31 20:00:00+00:00,0.1394468,0.150492288,0.077292606,0.166140773,0.206690857,0.376036212,0.160008069,0.258381565,0.200264488,0.092703509,0.0858,0.10339999999999999,0.11175,0.1013,0.186461321,0.17629293,0.233457985
2015-08-03 20:00:00+00:00,0.14078593,0.152693632,0.078197986,0.168664381,0.2161482,0.385026274,0.16338245,0.263815608,0.207754753,0.09555579,0.08497500000000001,0.1043,0.11199999999999999,0.100475,0.182944386,0.175130299,0.234086994
2015-08-04 20:00:00+00:00,0.142815097,0.152333324,0.080346393,0.167643,0.214499239,0.373045283,0.165827623,0.258497982,0.203694381,0.096782772,0.084675,0.1043,0.1105,0.10045,0.182028733,0.175196946,0.234158933
2015-08-05 20:00:00+00:00,0.140656113,0.151319651,0.078701475,0.168981023,0.214899013,0.371139961,0.163479058,0.257455513,0.203828762,0.095012041,0.088175,0.105975,0.1107,0.1008,0.179593393,0.176636695,0.231881724
2015-08-06 20:00:00+00:00,0.145399011,0.152523629,0.078495414,0.166542252,0.22140472,0.383846116,0.172599609,0.262390569,0.208109179,0.100063516,0.088675,0.105975,0.1093,0.100825,0.181061932,0.180839206,0.231327609
2015-08-07 20:00:00+00:00,0.145909999,0.149270527,0.078594457,0.163818195,0.229104089,0.381364309,0.174058789,0.258677595,0.207521627,0.097796248,0.0864,0.1048,0.107,0.10015,0.184028527,0.181389282,0.234455207
2015-08-10 20:00:00+00:00,0.139969572,0.148417506,0.078133165,0.161868498,0.215634025,0.378374051,0.16785882,0.258903356,0.2038789,0.093623367,0.084825,0.10377499999999999,0.10619999999999999,0.099375,0.181088525,0.180163931,0.235245481
2015-08-11 20:00:00+00:00,0.147445093,0.151100779,0.079952818,0.161852661,0.219866548,0.383238916,0.175501813,0.266734539,0.217615218,0.0965232,0.08807499999999999,0.10505,0.1109,0.104425,0.187819693,0.181010079,0.241442566
2015-08-12 20:00:00+00:00,0.147126181,0.153236904,0.081251893,0.161312216,0.220126218,0.381878954,0.175106459,0.270935652,0.226612576,0.097753358,0.090675,0.10942500000000001,0.114475,0.1047,0.202431622,0.188565505,0.248910245
2015-08-13 20:00:00+00:00,0.146936925,0.154375919,0.080888422,0.159873415,0.221885026,0.384747419,0.173573667,0.266758908,0.224304334,0.096707246,0.086675,0.106075,0.111425,0.104225,0.196292462,0.184958942,0.244789316
2015-08-14 20:00:00+00:00,0.144574576,0.152899071,0.080843242,0.158589562,0.222261088,0.38135209,0.171757646,0.261583208,0.218717958,0.096457879,0.0863,0.1056,0.109075,0.10225,0.197365619,0.180000473,0.24050116
2015-08-17 20:00:00+00:00,0.141649983,0.153583432,0.080174247,0.157200925,0.217686117,0.369921675,0.167424848,0.26115493,0.221072595,0.095427832,0.086,0.1063,0.10807499999999999,0.102675,0.197497233,0.177490929,0.240925274
2015-08-18 20:00:00+00:00,0.144183218,0.152819091,0.080411877,0.157902205,0.218469014,0.353052322,0.169822427,0.264622395,0.2245697,0.095842253,0.0866,0.107,0.10885,0.102575,0.196971112,0.178632024,0.242734273
2015-08-19 20:00:00+00:00,0.148977162,0.15295068,0.080044067,0.156731046,0.226627172,0.372628637,0.171710346,0.268887999,0.231911386,0.096297569,0.087975,0.10677500000000001,0.11,0.104125,0.202214734,0.182077664,0.244423573
2015-08-20 20:00:00+00:00,0.165649644,0.158269589,0.082982442,0.157632504,0.247703792,0.378347409,0.192759986,0.281913906,0.24620092,0.100879932,0.0897,0.10792500000000001,0.11285,0.10557499999999999,0.209383048,0.187073517,0.248589922
2015-08-21 20:00:00+00:00,0.186865218,0.163074348,0.084441537,0.165588341,0.273308946,0.394210769,0.216300781,0.295824825,0.273592195,0.105752781,0.09547499999999999,0.11297499999999999,0.11765,0.104125,0.226753541,0.196069446,0.260603762
2015-08-24 20:00:00+00:00,0.222337656,0.173266578,0.092474788,0.17770582,0.35026005,0.427820683,0.269312558,0.358896403,0.302151916,0.120472437,0.1079,0.12125,0.1492,0.1082,0.257638893,0.219960263,0.297030597
2015-08-25 20:00:00+00:00,0.218853123,0.175773501,0.083476295,0.175214109,0.310103307,0.4223918,0.254834223,0.337070618,0.318240855,0.117769872,0.09910000000000001,0.12125,0.14725,0.10785,0.237945856,0.246683284,0.296715266
2015-08-26 20:00:00+00:00,0.199660558,0.178613744,0.087343213,0.177919302,0.290150697,0.419738212,0.229232001,0.318407392,0.255547079,0.116356465,0.098075,0.123375,0.15012499999999998,0.1092,0.245410456,0.239646411,0.294267336
2015-08-27 20:00:00+00:00,0.190816746,0.177856232,0.088076065,0.174086698,0.27422839,0.422273161,0.218628316,0.296879584,0.241378279,0.113647832,0.095025,0.123375,0.1446,0.1085,0.231496421,0.234901605,0.28471074
2015-08-28 20:00:00+00:00,0.194552325,0.178689367,0.092874581,0.173848767,0.267281078,0.432597058,0.228779004,0.313102375,0.263101906,0.116521376,0.09547499999999999,0.118875,0.1389,0.11057499999999999,0.23190721,0.22273014,0.290569471
2015-08-31 20:00:00+00:00,0.206572837,0.167299116,0.08761778,0.173712581,0.273928594,0.43616065,0.23893917,0.31608555,0.269857125,0.118977376,0.096525,0.12177500000000001,0.141,0.11074999999999999,0.236402924,0.226927617,0.296148046
2015-09-01 20:00:00+00:00,0.225690316,0.169237645,0.100065947,0.174930809,0.303800869,0.46565898,0.261512427,0.359566518,0.300111516,0.120591655,0.10365,0.12207499999999999,0.14905,0.11025,0.250570996,0.245720059,0.306191251
2015-09-02 20:00:00+00:00,0.209188232,0.167576432,0.093866065,0.173094613,0.299950665,0.447666503,0.22851183,0.347175499,0.282590037,0.119081525,0.10220000000000001,0.12242499999999999,0.14995,0.1114,0.252341893,0.251361637,0.325072384
2015-09-03 20:00:00+00:00,0.210355493,0.164422577,0.091046786,0.17168093,0.291992547,0.427716193,0.243237339,0.344637592,0.279784116,0.114894662,0.09912499999999999,0.12285,0.14730000000000001,0.10952500000000001,0.240762124,0.248389647,0.325072384
2015-09-04 20:00:00+00:00,0.220788762,0.164463434,0.098547308,0.171878923,0.296870547,0.430746645,0.249658883,0.381587237,0.299519981,0.118639469,0.1052,0.12325,0.1557,0.10994999999999999,0.26196265,0.261540131,0.342814141
2015-09-08 20:00:00+00:00,0.206150297,0.164910834,0.093874859,0.1735594,0.29056114,0.429505483,0.235907765,0.332579976,0.281089146,0.113212386,0.10305,0.12417500000000001,0.15575,0.108525,0.248323542,0.256830236,0.309086247
2015-09-09 20:00:00+00:00,0.209093316,0.164512762,0.094103744,0.17139644,0.288984874,0.422378662,0.240522902,0.319804046,0.280815288,0.112225358,0.10235,0.12285,0.15155,0.10605,0.237772392,0.244558266,0.291182163
2015-09-10 20:00:00+00:00,0.20622193,0.161708239,0.081468649,0.169908516,0.288443325,0.427963464,0.234934905,0.327536443,0.277101967,0.110158202,0.10425000000000001,0.122875,0.1523,0.104475,0.244152787,0.256254368,0.301966328
2015-09-11 20:00:00+00:00,0.201569062,0.161035841,0.088716422,0.171628559,0.284361216,0.426205887,0.229050941,0.322432474,0.275237525,0.109186511,0.10455,0.12315,0.15095,0.10515000000000001,0.24502791,0.247398244,0.294530251
2015-09-14 20:00:00+00:00,0.20451472,0.161238373,0.084093457,0.17240012,0.294533248,0.420508306,0.231151846,0.322777314,0.270576344,0.109099,0.105625,0.124075,0.15125,0.10467499999999999,0.24211983,0.248972169,0.29523199
2015-09-15 20:00:00+00:00,0.192275639,0.161843534,0.079184986,0.172504804,0.274337778,0.421761266,0.221825609,0.314818999,0.254894251,0.108776744,0.1035,0.12217499999999999,0.15025,0.104125,0.235698336,0.247363153,0.294778712
2015-09-16 20:00:00+00:00,0.181188018,0.162213255,0.082764885,0.171366636,0.267173823,0.425379819,0.210155702,0.301232853,0.248804697,0.106888683,0.0999,0.120325,0.14485,0.10295,0.22291784,0.242197098,0.290432776
2015-09-17 20:00:00+00:00,0.1845936,0.15893,0.10659,0.1677484,0.256779,0.410972808,0.210072199,0.297960237,0.2610796,0.102683499,0.0981,0.120325,0.13995,0.102925,0.221032678,0.231233226,0.276893916
2015-09-18 20:00:00+00:00,0.194160937,0.159720222,0.0865975,0.1696145,0.269842226,0.405574548,0.2150531,0.298746237,0.259097161,0.102913226,0.099475,0.12304999999999999,0.14135,0.10247500000000001,0.227975425,0.228667368,0.262226502
2015-09-21 20:00:00+00:00,0.185849549,0.156944296,0.0815332,0.172701425,0.26667639,0.403123709,0.2100452,0.289188434,0.250089549,0.102177834,0.09895,0.123525,0.141,0.1014,0.222370951,0.228667368,0.263405417
2015-09-22 20:00:00+00:00,0.196595425,0.158274333,0.0830644,0.174754312,0.272189067,0.41600987,0.2200688,0.297642651,0.262675047,0.103340099,0.1001,0.127075,0.144725,0.100175,0.238583892,0.228667368,0.263446882
2015-09-23 20:00:00+00:00,0.1936085,0.15864599,0.083117499,0.177485999,0.27305444,0.434274232,0.2187565,0.3019937,0.266642085,0.10268763,0.10060000000000001,0.130325,0.1476,0.09985,0.236681611,0.228667368,0.278853917
2015-09-24 20:00:00+00:00,0.1998644,0.160217301,0.0821542,0.191823587,0.2785762,0.422087151,0.221724725,0.30966494,0.273885415,0.102941132,0.104525,0.131025,0.15385,0.1041,0.247120565,0.23557633,0.280830459
2015-09-25 20:00:00+00:00,0.20098575,0.159185485,0.079222,0.186728175,0.277884212,0.412693325,0.224035875,0.310190806,0.271064533,0.111455382,0.10325,0.131025,0.15035,0.10397500000000001,0.237802199,0.234416141,0.273851297
2015-09-28 20:00:00+00:00,0.216156987,0.1625096,0.078477199,0.1879915,0.295600872,0.421326838,0.240317875,0.318864232,0.286926111,0.118481712,0.102925,0.1358,0.148625,0.1048,0.247134175,0.239690493,0.273851297
2015-09-29 20:00:00+00:00,0.212505099,0.164550477,0.0815178,0.1866064,0.29133054,0.41520182,0.241183839,0.318264093,0.281717504,0.128461239,0.1043,0.1366,0.15185,0.10439999999999999,0.252185552,0.257525109,0.29083548
2015-09-30 20:00:00+00:00,0.205461534,0.161654057,0.079807999,0.186393992,0.281665668,0.405329625,0.231593127,0.304184031,0.271096057,0.127953131,0.103925,0.139475,0.15005000000000002,0.1024,0.244979829,0.251456704,0.281115682
2015-10-01 20:00:00+00:00,0.199742752,0.161673906,0.0836261,0.183108703,0.280318766,0.398326909,0.226844465,0.301547406,0.266385193,0.140959335,0.10310000000000001,0.138675,0.14695,0.10189999999999999,0.250112606,0.253321171,0.281115682
2015-10-02 20:00:00+00:00,0.192576572,0.160725803,0.0772708,0.181874081,0.270989906,0.41085867,0.219709663,0.29080219,0.259246565,0.142282926,0.101975,0.13695000000000002,0.1452,0.09855,0.245934758,0.257064018,0.274193526
2015-10-05 20:00:00+00:00,0.182594289,0.160073985,0.0811831,0.175968119,0.257953874,0.391811935,0.212940454,0.2851341,0.249997123,0.133125343,0.101525,0.136525,0.14415,0.0984,0.231613934,0.2520339,0.262649206
2015-10-06 20:00:00+00:00,0.18481339,0.160277523,0.0773184,0.179702763,0.253521864,0.390827541,0.214013127,0.283148412,0.247177822,0.134300804,0.100525,0.133375,0.1405,0.0964,0.225911414,0.248128691,0.256499612
2015-10-07 20:00:00+00:00,0.179606378,0.158512222,0.07669,0.176512218,0.252926362,0.393610583,0.210016505,0.280797281,0.238394288,0.127254952,0.09570000000000001,0.132875,0.13685,0.09325,0.223661297,0.238785318,0.25683033
2015-10-08 20:00:00+00:00,0.172843063,0.157063714,0.0785126,0.17538516,0.244627112,0.38124827,0.204823572,0.273152256,0.246527864,0.122551358,0.095525,0.132825,0.13625,0.092425,0.220321127,0.233540036,0.258659445
2015-10-09 20:00:00+00:00,0.172551461,0.156045746,0.0768504,0.174994363,0.240531194,0.386711748,0.202009949,0.274278237,0.237178007,0.12342475,0.09362500000000001,0.1324,0.132875,0.0922,0.215823816,0.227329565,0.258168716
2015-10-12 20:00:00+00:00,0.167438807,0.156114087,0.07596,0.175513489,0.24295,0.383015632,0.199006523,0.269538642,0.234570476,0.120801827,0.09217499999999999,0.13075,0.132,0.0919,0.210250899,0.227329565,0.251245741
2015-10-13 20:00:00+00:00,0.17562779,0.155110828,0.075766999,0.178778436,0.245425863,0.381822612,0.201010909,0.270062312,0.245033857,0.124188136,0.0925,0.1301,0.1338,0.09234999999999999,0.21261031,0.225009049,0.245976726
2015-10-14 20:00:00+00:00,0.17836188,0.156219206,0.07441,0.1815312,0.244915321,0.379749,0.202533939,0.269778781,0.24527033,0.120082241,0.09415,0.1301,0.1349,0.09205,0.216724694,0.230233323,0.251972523
2015-10-15 20:00:00+00:00,0.167476323,0.155185492,0.0748855,0.179108421,0.240207737,0.383978301,0.191984698,0.26818875,0.238179511,0.115556858,0.095825,0.129025,0.136125,0.092625,0.21239672,0.228051089,0.253785726
2015-10-16 20:00:00+00:00,0.164324618,0.154047933,0.076032399,0.174666874,0.234802081,0.36920125,0.187663432,0.265894062,0.233463333,0.114547822,0.09359999999999999,0.129125,0.1358,0.091875,0.208041666,0.22672095,0.251885742
2015-10-19 20:00:00+00:00,0.159586087,0.154959076,0.076535336,0.173969287,0.237193303,0.371001923,0.183685152,0.265257818,0.233665434,0.111508679,0.0931,0.128,0.135975,0.09125,0.203545939,0.226399014,0.247090592
2015-10-20 20:00:00+00:00,0.163272481,0.15420233,0.074176514,0.169116845,0.237824636,0.374903393,0.187079127,0.262008595,0.228917231,0.106406238,0.09065,0.12717499999999998,0.13205,0.09185,0.201562595,0.219851124,0.245452725
2015-10-21 20:00:00+00:00,0.169308665,0.152644261,0.074131171,0.163272781,0.24031192,0.384211015,0.190035954,0.266623906,0.235686095,0.107280714,0.0902,0.127575,0.13155,0.09269999999999999,0.200522154,0.215147643,0.245452725
2015-10-22 20:00:00+00:00,0.156058163,0.150887771,0.073873961,0.161727107,0.233135267,0.370698571,0.172956389,0.258832296,0.225881323,0.109709279,0.090325,0.131775,0.13055,0.092575,0.193204326,0.216687447,0.244221927
2015-10-23 20:00:00+00:00,0.156489243,0.15188819,0.072404761,0.163414545,0.233157272,0.376598911,0.176142836,0.255715871,0.219910736,0.105879052,0.09182499999999999,0.13625,0.1323,0.09362500000000001,0.193494569,0.216780185,0.23888868
2015-10-26 20:00:00+00:00,0.16040437,0.152259,0.073034295,0.161819327,0.241188351,0.374214444,0.17850741,0.25837304,0.222425742,0.106404771,0.091925,0.13625,0.1316,0.093225,0.195811484,0.219453422,0.235790027
2015-10-27 20:00:00+00:00,0.159613963,0.152917955,0.073349333,0.160130036,0.245163889,0.389969885,0.179736181,0.25859335,0.232192777,0.106343244,0.09095,0.132075,0.1291,0.09667500000000001,0.199666318,0.224665552,0.235775217
2015-10-28 20:00:00+00:00,0.155220645,0.153354814,0.076847126,0.16165159,0.237885472,0.385848834,0.178419332,0.263236112,0.235279358,0.106538982,0.09179999999999999,0.133925,0.131,0.09645,0.19796482,0.219485331,0.240714468
2015-10-29 20:00:00+00:00,0.15613514,0.152166026,0.073655828,0.16090104,0.237389379,0.385792726,0.17915148,0.263839149,0.233184095,0.105728671,0.0919,0.13445000000000001,0.13015000000000002,0.097125,0.200082443,0.215403794,0.244371138
2015-10-30 20:00:00+00:00,0.157848956,0.151765834,0.07545105,0.158308999,0.236858309,0.391831342,0.179775172,0.258405046,0.224711885,0.104426388,0.08645,0.136,0.127575,0.0974,0.199599358,0.203968683,0.241678156
2015-11-02 21:00:00+00:00,0.151231503,0.150578706,0.078733903,0.151709532,0.231016097,0.380986269,0.176066338,0.251687418,0.22391546,0.104804609,0.085725,0.135075,0.12612500000000001,0.097725,0.198705193,0.202159155,0.236303486
2015-11-03 21:00:00+00:00,0.151728763,0.149991761,0.078117809,0.157443509,0.225970472,0.380545777,0.176075267,0.249933309,0.215772333,0.103500528,0.08625,0.13355,0.122925,0.09887499999999999,0.19642759,0.202159155,0.232833106
2015-11-04 21:00:00+00:00,0.156299127,0.150621804,0.078757855,0.160445003,0.231629077,0.377684857,0.1774557,0.248315375,0.21678058,0.104382507,0.089475,0.13735,0.12315,0.099225,0.199843367,0.198062917,0.231905214
2015-11-05 21:00:00+00:00,0.155153,0.149898155,0.074848888,0.161345546,0.233398118,0.384104279,0.179455272,0.252672443,0.217877955,0.101145055,0.08915,0.1363,0.12295,0.09875,0.201693845,0.198501806,0.230734548
2015-11-06 21:00:00+00:00,0.153635763,0.148802857,0.076845,0.160976109,0.232634325,0.374048257,0.177614397,0.253904062,0.2216302,0.099940714,0.09025,0.13775,0.12265000000000001,0.097775,0.201029083,0.197990805,0.231332605
2015-11-09 21:00:00+00:00,0.161556458,0.147494174,0.078484006,0.160285069,0.238986734,0.377152171,0.18445777,0.257885554,0.228257012,0.099724342,0.088225,0.13445000000000001,0.12125,0.09789999999999999,0.204664074,0.195921421,0.230831962
2015-11-10 21:00:00+00:00,0.1583784,0.148239739,0.078873674,0.16078769,0.238622688,0.373683466,0.183767402,0.257774143,0.231849688,0.098631746,0.089175,0.133725,0.11895,0.098425,0.20741956,0.197670815,0.236969614
2015-11-11 21:00:00+00:00,0.161965881,0.148950019,0.079189885,0.162533282,0.244659068,0.380146577,0.184888563,0.256236193,0.228421066,0.098455142,0.08810000000000001,0.13369999999999999,0.1175,0.097675,0.204172192,0.198754297,0.238307721
2015-11-12 21:00:00+00:00,0.172617894,0.148746666,0.077362126,0.164926738,0.269676792,0.401241333,0.191323454,0.253768868,0.233436883,0.099734838,0.0897,0.132325,0.1167,0.09960000000000001,0.211540118,0.197247766,0.238190902
2015-11-13 21:00:00+00:00,0.181563579,0.149509326,0.077291669,0.165909168,0.28134,0.397244552,0.203760159,0.257389168,0.244208165,0.100963015,0.0898,0.1286,0.11745,0.09955,0.217133452,0.199538419,0.242720579
2015-11-16 21:00:00+00:00,0.171515672,0.1509331,0.077668933,0.164158255,0.266670985,0.405692523,0.196074443,0.259314065,0.235437333,0.0980384,0.09,0.128225,0.11795,0.09865,0.217092159,0.205627627,0.250370799
2015-11-17 21:00:00+00:00,0.172808499,0.150188052,0.078727606,0.16905441,0.270351054,0.395057533,0.194975045,0.256254268,0.234576767,0.095389373,0.08990000000000001,0.128475,0.1177,0.09705,0.210885511,0.201559186,0.24811305
2015-11-18 21:00:00+00:00,0.164869672,0.148460911,0.076657098,0.165727222,0.262204073,0.38502338,0.187129018,0.254372,0.225391282,0.094752314,0.08994999999999999,0.12845,0.11695,0.09615,0.213554883,0.205314231,0.247741836
2015-11-19 21:00:00+00:00,0.168435061,0.1474608,0.0779535,0.160656401,0.267021359,0.393181993,0.188919772,0.255065219,0.224610571,0.0944008,0.08865,0.12845,0.1165,0.095825,0.210875811,0.20293931,0.244734344
2015-11-20 21:00:00+00:00,0.163912894,0.145916412,0.07640963,0.158049315,0.261450222,0.408463857,0.184292068,0.250879593,0.221375758,0.096098984,0.08725,0.12560000000000002,0.11539999999999999,0.094925,0.207568272,0.20123727,0.239902176
2015-11-23 21:00:00+00:00,0.16358243,0.145777215,0.076055598,0.160275586,0.260105054,0.3944172,0.186039745,0.249550761,0.229185434,0.096713298,0.08689999999999999,0.12560000000000002,0.11599999999999999,0.095375,0.208824712,0.20123727,0.235597112
2015-11-24 21:00:00+00:00,0.1636115,0.146188547,0.078455157,0.15722573,0.256884636,0.399480419,0.187485011,0.245821263,0.213203238,0.095194647,0.08795,0.125475,0.11755,0.09605000000000001,0.212276051,0.196827823,0.234282403
2015-11-25 21:00:00+00:00,0.162498472,0.144159955,0.0759634,0.155541852,0.248942916,0.383029447,0.186703454,0.242818568,0.216895644,0.095495933,0.08865,0.1259,0.11710000000000001,0.0984,0.209191126,0.197778715,0.232856469
2015-11-27 18:00:00+00:00,0.16277409,0.144004115,0.076668844,0.160102727,0.251687212,0.400776561,0.186209907,0.251228819,0.220202346,0.096479682,0.08845,0.125,0.1177,0.09875,0.207080328,0.198795345,0.243421075
2015-11-30 21:00:00+00:00,0.1632075,0.145643357,0.076425676,0.159431608,0.252922109,0.403904838,0.18859346,0.249123444,0.224922666,0.098338333,0.08855,0.125475,0.11689999999999999,0.09865,0.206593221,0.199829237,0.246206101
2015-12-01 21:00:00+00:00,0.157636973,0.147659873,0.076686031,0.158585552,0.251698,0.413914476,0.18327408,0.246963939,0.221652349,0.100793034,0.08852499999999999,0.12487500000000001,0.11755,0.09872500000000001,0.207608506,0.195772017,0.243068578
2015-12-02 21:00:00+00:00,0.162502136,0.147209023,0.076905398,0.161794787,0.26400949,0.428743371,0.186961763,0.248541228,0.224844526,0.099293588,0.08814999999999999,0.123175,0.11745,0.099525,0.204937101,0.195242866,0.238696374
2015-12-03 21:00:00+00:00,0.171183029,0.148277342,0.080623171,0.163132481,0.275311739,0.416650177,0.195760449,0.251559892,0.227445314,0.100396301,0.0873,0.12112500000000001,0.117325,0.098625,0.210104083,0.195132746,0.238681497
2015-12-04 21:00:00+00:00,0.160102345,0.144799184,0.080344325,0.156775117,0.257669727,0.400745714,0.184114325,0.245377853,0.220436422,0.099975288,0.08405,0.11837500000000001,0.11537499999999999,0.097925,0.211057358,0.200307966,0.241322312
2015-12-07 21:00:00+00:00,0.162903574,0.146326944,0.077845499,0.158004127,0.273853869,0.405862704,0.187101237,0.246567047,0.224584466,0.105188622,0.082025,0.120975,0.114375,0.10115,0.206435511,0.193391255,0.236951843
2015-12-08 21:00:00+00:00,0.171296112,0.14915428,0.081284619,0.157896855,0.288527054,0.414521409,0.191404863,0.251839326,0.234926952,0.109765666,0.083675,0.11837500000000001,0.11835000000000001,0.10890000000000001,0.215197722,0.1955484,0.240557162
2015-12-09 21:00:00+00:00,0.177819272,0.149744361,0.079381758,0.162948072,0.288570799,0.411104723,0.193509179,0.255068311,0.238402914,0.10873612,0.085975,0.119575,0.12295,0.1061,0.220018007,0.198459625,0.243310536
2015-12-10 21:00:00+00:00,0.176881054,0.148964831,0.078858888,0.160963121,0.290750755,0.431218355,0.197901981,0.260359009,0.237928742,0.113475025,0.08775000000000001,0.11962500000000001,0.12355000000000001,0.1067,0.22110229,0.201965819,0.248170222
2015-12-11 21:00:00+00:00,0.19386325,0.155289352,0.084656666,0.164482741,0.308631796,0.43533925,0.21369781,0.275617952,0.244956019,0.155054819,0.0909,0.12025000000000001,0.127775,0.10640000000000001,0.230695153,0.198665109,0.255605067
2015-12-14 21:00:00+00:00,0.18809793,0.157712857,0.0826755,0.170347064,0.303237357,0.4448696,0.212145469,0.272385663,0.245570476,0.166876469,0.09292500000000001,0.121575,0.134275,0.107225,0.240792355,0.204820099,0.25770573
2015-12-15 21:00:00+00:00,0.179207745,0.156820412,0.086405587,0.167625293,0.289544656,0.441086412,0.207194216,0.264875371,0.242465809,0.158498431,0.0902,0.12217499999999999,0.13192500000000001,0.1066,0.227537942,0.211836083,0.253287113
2015-12-16 21:00:00+00:00,0.168889999,0.151579599,0.066160799,0.16045,0.2864964,0.431980923,0.1947779,0.258863342,0.2349996,0.141307199,0.085475,0.11967499999999999,0.1285,0.1076,0.219567839,0.206998714,0.249140085
2015-12-17 21:00:00+00:00,0.178613866,0.149183595,0.0800053,0.164051111,0.284970266,0.423323942,0.204277066,0.254417431,0.232885796,0.145364822,0.085075,0.12095,0.125975,0.1054,0.213788404,0.197175295,0.236824655
2015-12-18 21:00:00+00:00,0.191034422,0.14930783,0.0825287,0.158766,0.297740053,0.417788901,0.211168088,0.250087227,0.239955952,0.145728526,0.086175,0.121575,0.12710000000000002,0.10557499999999999,0.222295872,0.199931415,0.233833019
2015-12-21 21:00:00+00:00,0.1833715,0.149488761,0.078403,0.157640666,0.295419133,0.431282495,0.20544726,0.253357336,0.237377171,0.140928198,0.0855,0.120425,0.128025,0.1059,0.224197505,0.199072791,0.233235038
2015-12-22 21:00:00+00:00,0.185265882,0.147185944,0.078015999,0.157298399,0.280038515,0.429880485,0.198622222,0.249363127,0.228682971,0.130101444,0.084625,0.120675,0.12685000000000002,0.106225,0.21768618,0.19319693,0.232000698
2015-12-23 21:00:00+00:00,0.170098888,0.146160741,0.07555,0.156579088,0.269041666,0.425227688,0.1944745,0.24412,0.22361539,0.127200083,0.08502499999999999,0.120675,0.12714999999999999,0.10615000000000001,0.207387248,0.19319693,0.230921877
2015-12-24 18:00:00+00:00,0.170553466,0.146429309,0.0765515,0.156415333,0.2651902,0.422794095,0.193680733,0.243144454,0.225787142,0.132560146,0.0861,0.12052500000000001,0.12725,0.1061,0.207745448,0.193191677,0.227733428
2015-12-28 21:00:00+00:00,0.169962999,0.147724777,0.0778263,0.157597466,0.273555323,0.427425552,0.195288666,0.248518847,0.229114444,0.136942252,0.08585000000000001,0.120725,0.126575,0.1059,0.213082959,0.191268548,0.231515849
2015-12-29 21:00:00+00:00,0.1642024,0.146382603,0.072589,0.157673777,0.268650977,0.417725028,0.186571788,0.244464799,0.223412631,0.127842942,0.08439999999999999,0.12,0.125575,0.1059,0.208861324,0.188903339,0.229731405
2015-12-30 21:00:00+00:00,0.169178199,0.146932114,0.0757244,0.1581376,0.2705,0.415668295,0.191795,0.248647309,0.224753885,0.130473123,0.083925,0.119175,0.12465,0.10710000000000001,0.213455358,0.188438749,0.23203539
2015-12-31 21:00:00+00:00,0.171677645,0.148448133,0.080355786,0.157705385,0.263877734,0.443874285,0.198289475,0.249486904,0.223265768,0.129052452,0.08435000000000001,0.119175,0.1242,0.1067,0.216051353,0.188438749,0.232132201
2016-01-04 21:00:00+00:00,0.183530859,0.149569333,0.080635586,0.161166544,0.274101812,0.438786609,0.20900844,0.264408,0.231998152,0.130585201,0.0888,0.1198,0.13025,0.108675,0.230345127,0.200908293,0.244391346
2016-01-05 21:00:00+00:00,0.18166687,0.149207314,0.078741031,0.158221533,0.267854925,0.426257288,0.208922133,0.263684145,0.241419655,0.130689932,0.08885,0.11814999999999999,0.133525,0.1076,0.228901901,0.206230696,0.252675018
2016-01-06 21:00:00+00:00,0.186161148,0.150433815,0.076257647,0.160995229,0.285418932,0.447487466,0.212892622,0.27400444,0.246738207,0.129501778,0.08994999999999999,0.11814999999999999,0.13785,0.10800000000000001,0.233743267,0.21514227,0.257653456
2016-01-07 21:00:00+00:00,0.203015111,0.152211033,0.081555047,0.166115629,0.299159137,0.484682666,0.232192999,0.309951719,0.272662533,0.133447091,0.09609999999999999,0.121625,0.1462,0.11175,0.246816578,0.226606109,0.288723193
2016-01-08 21:00:00+00:00,0.209801622,0.15185798,0.079740176,0.170783511,0.298668228,0.46799547,0.234685022,0.308251159,0.242758666,0.135125242,0.09542500000000001,0.1293,0.14755000000000001,0.11025,0.249158424,0.228719991,0.286172174
2016-01-11 21:00:00+00:00,0.201861903,0.149661703,0.080649189,0.168673633,0.303835502,0.504214523,0.2296811,0.311676,0.269297762,0.134567758,0.09715,0.129125,0.1515,0.11095000000000001,0.24975833,0.228719991,0.299046322
2016-01-12 21:00:00+00:00,0.195805792,0.151479301,0.081186331,0.169005892,0.311889969,0.498921068,0.220866018,0.304739439,0.264241437,0.130345004,0.0949,0.13317500000000002,0.1502,0.11085,0.242318178,0.237557381,0.300588858
2016-01-13 21:00:00+00:00,0.210215,0.155855871,0.080441398,0.171482666,0.317448621,0.491937142,0.234702916,0.311530072,0.274564833,0.132919677,0.091875,0.1293,0.146425,0.11065,0.240768566,0.229341445,0.299110351
2016-01-14 21:00:00+00:00,0.200955925,0.150740326,0.088546047,0.168836251,0.311093,0.4887652,0.230793962,0.30322768,0.265552925,0.127084902,0.0944,0.129625,0.15225,0.11345000000000001,0.248526201,0.243088915,0.294831397
2016-01-15 21:00:00+00:00,0.214477833,0.153793403,0.086816891,0.175526133,0.321524953,0.519407681,0.244580962,0.329406481,0.289848646,0.135410906,0.10064999999999999,0.13515,0.15839999999999999,0.11775000000000001,0.263850911,0.247734667,0.304001303
2016-01-19 21:00:00+00:00,0.212145511,0.1509104,0.0927464,0.167639955,0.327112302,0.55345691,0.245520823,0.315298522,0.277802499,0.1335564,0.0967,0.132425,0.15785,0.11560000000000001,0.25110848,0.244432425,0.297748048
2016-01-20 21:00:00+00:00,0.217944101,0.15134292,0.084177365,0.16914804,0.342849338,0.539952747,0.247266148,0.335497199,0.289411455,0.146153257,0.10074999999999999,0.13675,0.1659,0.11664999999999999,0.268921206,0.262883638,0.31756814
2016-01-21 21:00:00+00:00,0.217468162,0.149530234,0.085878984,0.168247344,0.334667096,0.550168202,0.247677925,0.339872327,0.291894555,0.138357771,0.1014,0.13675,0.16215,0.1183,0.259414035,0.287214563,0.346479819
2016-01-22 21:00:00+00:00,0.201927061,0.146532019,0.085210419,0.166406666,0.309458784,0.518969336,0.229196044,0.319715018,0.273953955,0.127725085,0.0986,0.13485,0.1551,0.11335,0.248102882,0.272407329,0.33165607
2016-01-25 21:00:00+00:00,0.209715022,0.147202765,0.081239501,0.171156681,0.331464293,0.512599304,0.238318896,0.326065305,0.278918666,0.134988492,0.09532500000000001,0.133825,0.153025,0.11265,0.248064226,0.256987907,0.313780537
2016-01-26 21:00:00+00:00,0.202757292,0.146365657,0.085603898,0.175192281,0.322877466,0.531430249,0.233297066,0.324258545,0.267002888,0.129295992,0.09759999999999999,0.1333,0.15445,0.11295,0.246754996,0.263840157,0.32835105
2016-01-27 21:00:00+00:00,0.207209466,0.144958857,0.099075771,0.174193933,0.3209956,0.516629553,0.240046666,0.3247938,0.271935266,0.135820628,0.09609999999999999,0.13324999999999998,0.1505,0.11265,0.243177455,0.262179714,0.325208778
2016-01-28 21:00:00+00:00,0.203430648,0.144561388,0.081040177,0.170853874,0.313731481,0.520309652,0.237934111,0.320565563,0.26817982,0.134301666,0.098625,0.135825,0.1514,0.11185,0.250719197,0.263150406,0.31833526
2016-01-29 21:00:00+00:00,0.191154611,0.145300269,0.08238992,0.172234761,0.305869376,0.504245753,0.221994666,0.297647333,0.254352099,0.134164319,0.095875,0.138575,0.14835,0.11067500000000001,0.239130791,0.242618745,0.298770368
2016-02-01 21:00:00+00:00,0.191369738,0.1446368,0.077467452,0.176251888,0.310111106,0.495490881,0.218761266,0.304041836,0.260981666,0.136535428,0.091875,0.137075,0.14545,0.11019999999999999,0.239253381,0.233583847,0.283495119
2016-02-02 21:00:00+00:00,0.201485029,0.149337511,0.077732857,0.173015374,0.322317782,0.512510721,0.230610925,0.3164725,0.272150281,0.139964946,0.09567500000000001,0.13727499999999998,0.1472,0.109825,0.248065424,0.234086502,0.280000464
2016-02-03 21:00:00+00:00,0.200093307,0.150634436,0.084376834,0.180335879,0.31820939,0.535735849,0.231717451,0.310646272,0.27054724,0.135011587,0.10064999999999999,0.1419,0.15225,0.110325,0.256258602,0.255184622,0.295528219
2016-02-04 21:00:00+00:00,0.203519422,0.150322885,0.08230369,0.178089633,0.321905611,0.523236997,0.231611088,0.314235,0.270619111,0.139211904,0.101975,0.1376,0.1501,0.1105,0.252219041,0.261754889,0.294647896
2016-02-05 21:00:00+00:00,0.212409407,0.152475307,0.081963534,0.182689681,0.327735358,0.522937391,0.246234385,0.317615304,0.277806488,0.142481076,0.10217499999999999,0.138225,0.1522,0.10949999999999999,0.254839865,0.268396021,0.299430077
2016-02-08 21:00:00+00:00,0.22397987,0.160909955,0.084012222,0.180092762,0.336158666,0.530023669,0.256818474,0.331707727,0.294013162,0.148641111,0.11574999999999999,0.14279999999999998,0.16329999999999997,0.108975,0.269512252,0.261214176,0.299430077
2016-02-09 21:00:00+00:00,0.225775302,0.162325414,0.087544957,0.1870617,0.34065908,0.557963878,0.262502399,0.341937481,0.302014799,0.150340057,0.11885,0.143625,0.170775,0.11065,0.278429732,0.294111194,0.299430077
2016-02-10 21:00:00+00:00,0.226106136,0.161969298,0.086843015,0.186447296,0.344851008,0.577445721,0.261614862,0.336191729,0.295970325,0.148806269,0.12225,0.143875,0.17102499999999998,0.1105,0.271379813,0.305665656,0.299430077
2016-02-11 21:00:00+00:00,0.235184743,0.174296596,0.087825423,0.219645176,0.360861651,0.601542254,0.264228311,0.34805849,0.311568444,0.156115977,0.12869999999999998,0.1479,0.18285,0.113375,0.294043075,0.305665656,0.328569645
2016-02-12 21:00:00+00:00,0.227220181,0.167546904,0.09710409,0.202747733,0.353626035,0.591948443,0.259894955,0.344379022,0.300259822,0.152064342,0.1211,0.16125,0.176525,0.11289999999999999,0.282731152,0.33269868,0.348803741
2016-02-16 21:00:00+00:00,0.217220011,0.158997866,0.092801865,0.201596566,0.344963375,0.572224686,0.249192437,0.323970172,0.290171733,0.149242438,0.11635,0.15385,0.167675,0.1106,0.27036138,0.286750635,0.314517076
2016-02-17 21:00:00+00:00,0.206493799,0.154891777,0.095401517,0.202359392,0.326375979,0.563701681,0.238901496,0.31529199,0.273216962,0.141334517,0.1155,0.155425,0.1693,0.110525,0.257628125,0.292547346,0.322858055
2016-02-18 21:00:00+00:00,0.203774481,0.155707999,0.084357333,0.209307711,0.325248888,0.5351316,0.239124255,0.316092022,0.275939416,0.1403193,0.11622500000000001,0.1507,0.16802499999999998,0.11005000000000001,0.258734752,0.282798165,0.306359057
2016-02-19 21:00:00+00:00,0.2009476,0.15595731,0.086961187,0.209370229,0.320007407,0.538362826,0.23397817,0.313807577,0.273688755,0.134102584,0.12119999999999999,0.1507,0.17325,0.11015000000000001,0.261824489,0.288762683,0.306533763
2016-02-22 21:00:00+00:00,0.191778404,0.154003561,0.084608546,0.201919868,0.3023944,0.528076052,0.226103807,0.2968268,0.258684525,0.12788746,0.11779999999999999,0.14895,0.169925,0.1096,0.251249121,0.274311768,0.293106538
2016-02-23 21:00:00+00:00,0.199083036,0.155623928,0.079615257,0.204490733,0.310914986,0.549486771,0.231454666,0.307160928,0.267332333,0.126967285,0.1209,0.148625,0.171525,0.10855000000000001,0.255753841,0.275657167,0.293412059
2016-02-24 21:00:00+00:00,0.196320443,0.153887425,0.077293979,0.209003607,0.317255665,0.531569434,0.226033009,0.314237718,0.266723812,0.126102317,0.12435,0.151675,0.174,0.1085,0.268184403,0.28366481,0.302500404
2016-02-25 21:00:00+00:00,0.188289199,0.152994177,0.075990139,0.207005837,0.311134417,0.53355626,0.219514251,0.320723898,0.262773137,0.122215301,0.11985,0.1497,0.16845,0.10845,0.262647109,0.277268259,0.31522768
2016-02-26 21:00:00+00:00,0.191320454,0.15088959,0.070721247,0.197110738,0.305924088,0.527365785,0.21836925,0.31568355,0.271224066,0.122012433,0.11725,0.146975,0.1659,0.1072,0.254181235,0.276274587,0.309134955
2016-02-29 21:00:00+00:00,0.194071999,0.151211977,0.073229888,0.200560577,0.314663448,0.518160869,0.223143881,0.317332625,0.265493066,0.120330977,0.11795,0.148775,0.167925,0.10800000000000001,0.252026046,0.273827732,0.311091876
2016-03-01 21:00:00+00:00,0.178371613,0.147372406,0.075451404,0.196519642,0.295776322,0.493580028,0.207197342,0.301223291,0.250974464,0.11660132,0.11220000000000001,0.14575,0.1618,0.10765000000000001,0.244677649,0.2725627,0.301263272
2016-03-02 21:00:00+00:00,0.178014754,0.15001979,0.07660278,0.196295288,0.2860868,0.486207681,0.205592888,0.290106343,0.246080488,0.113973138,0.1096,0.14429999999999998,0.15810000000000002,0.10485,0.239805631,0.256977946,0.285920816
2016-03-03 21:00:00+00:00,0.173201,0.146332319,0.074529066,0.20160132,0.279339205,0.471511304,0.204090062,0.2886928,0.239674837,0.115208596,0.108125,0.14400000000000002,0.154975,0.10439999999999999,0.234693071,0.251618657,0.283707042
2016-03-04 21:00:00+00:00,0.173578018,0.145424571,0.071982285,0.198732414,0.280180629,0.461650144,0.204144637,0.284760721,0.238003274,0.119376669,0.106,0.1435,0.150725,0.10385,0.227374354,0.246062102,0.274829793
2016-03-07 21:00:00+00:00,0.173308841,0.147208342,0.073474299,0.195156066,0.27636515,0.438884104,0.208246833,0.283158006,0.24160115,0.118693714,0.1076,0.143275,0.1523,0.10210000000000001,0.230978593,0.24026938,0.270888851
2016-03-08 21:00:00+00:00,0.181342727,0.148888047,0.07448939,0.198429851,0.293572634,0.442238695,0.214621925,0.289200187,0.246094296,0.119549238,0.11220000000000001,0.140825,0.1564,0.10445,0.238316328,0.244792332,0.273320796
2016-03-09 21:00:00+00:00,0.180010509,0.149313988,0.072922544,0.191445625,0.287954638,0.443327507,0.211762518,0.287221858,0.245175814,0.121701111,0.112425,0.140825,0.1557,0.10375,0.238561478,0.254310317,0.277761091
2016-03-10 21:00:00+00:00,0.179330818,0.14803158,0.071333152,0.194986666,0.288867466,0.449266249,0.211325444,0.28355529,0.242466222,0.121008628,0.113075,0.139675,0.1558,0.10455,0.245637453,0.252974944,0.27695444
2016-03-11 21:00:00+00:00,0.17127364,0.145481422,0.070844241,0.188838688,0.274772981,0.44235266,0.202032251,0.273080725,0.231573177,0.119391882,0.10817500000000001,0.1364,0.151075,0.1048,0.229995817,0.24709505,0.270933782
2016-03-14 20:00:00+00:00,0.169783236,0.144420273,0.070307193,0.186412955,0.272804059,0.452712336,0.201540474,0.271738375,0.237688888,0.118243158,0.10400000000000001,0.13265000000000002,0.1479,0.10464999999999999,0.223901904,0.235867103,0.263523517
2016-03-15 20:00:00+00:00,0.170460009,0.143743466,0.071644438,0.179360511,0.283492716,0.452535594,0.201370666,0.273122999,0.240491288,0.119616642,0.10462500000000001,0.133275,0.1499,0.10640000000000001,0.227463957,0.226347343,0.263258872
2016-03-16 20:00:00+00:00,0.164056199,0.142459038,0.068512273,0.1801469,0.275326296,0.438326017,0.195300444,0.268177193,0.235671451,0.119305863,0.10475,0.13305,0.148225,0.10565,0.227365069,0.224086656,0.264149026
2016-03-17 20:00:00+00:00,0.160007854,0.141340733,0.069292209,0.177221357,0.252200474,0.43166542,0.192812592,0.263955628,0.224899866,0.122014639,0.1052,0.13305,0.1464,0.1039,0.224481177,0.219844453,0.256494442
2016-03-18 20:00:00+00:00,0.1622239,0.1396916,0.0667592,0.174552,0.25403896,0.426342162,0.1921125,0.258982712,0.225758,0.123993999,0.1016,0.126925,0.14395,0.10285,0.216597698,0.223878806,0.250806762
2016-03-21 20:00:00+00:00,0.16003512,0.139964831,0.068458971,0.16912428,0.24697608,0.412810939,0.189052615,0.260215224,0.22625851,0.121221154,0.09692500000000001,0.12612500000000001,0.13775,0.10385,0.216417882,0.223878806,0.248672576
2016-03-22 20:00:00+00:00,0.15981932,0.140783225,0.068773921,0.16998752,0.243033999,0.41423,0.186378639,0.262273624,0.224261157,0.121739351,0.09765,0.12645,0.13772500000000001,0.10342499999999999,0.216791266,0.213241811,0.248897257
2016-03-23 20:00:00+00:00,0.16424564,0.143684692,0.065692687,0.168887528,0.2494283,0.411593307,0.18939752,0.262282243,0.2277855,0.12347823,0.100725,0.131025,0.1401,0.1052,0.219321913,0.208015316,0.248649989
2016-03-24 20:00:00+00:00,0.1646721,0.143780662,0.067160718,0.170193176,0.2562975,0.426393895,0.1901543,0.266964975,0.230526719,0.12309093,0.10385,0.13225,0.14425000000000002,0.1058,0.229853272,0.213885934,0.254325862
2016-03-28 20:00:00+00:00,0.1647543,0.14297356,0.067152125,0.168075199,0.255626199,0.426057472,0.191480999,0.263571899,0.2298623,0.121003386,0.10425000000000001,0.133975,0.1437,0.10710000000000001,0.229853272,0.215781738,0.254325862
2016-03-29 20:00:00+00:00,0.157438559,0.14414409,0.067927268,0.174487504,0.25042528,0.429499768,0.18440056,0.260967024,0.22531172,0.119937095,0.10435,0.133975,0.1427,0.1072,0.225842715,0.219592208,0.255276873
2016-03-30 20:00:00+00:00,0.15427534,0.141624921,0.068731445,0.173517419,0.2420155,0.428798817,0.178483974,0.255944587,0.217928375,0.116461344,0.10035,0.12994999999999998,0.13835,0.106,0.217664056,0.218437214,0.247801308
2016-03-31 20:00:00+00:00,0.1553366,0.14031355,0.06810205,0.172983488,0.23940604,0.423151043,0.180025712,0.254167201,0.21752548,0.116806855,0.09815,0.1318,0.13565,0.104575,0.221254297,0.21545819,0.24733532
2016-04-01 20:00:00+00:00,0.15212912,0.139737937,0.070584435,0.171344432,0.24196344,0.446082396,0.174037104,0.256850725,0.2196436,0.117882613,0.09762499999999999,0.1325,0.13390000000000002,0.10335000000000001,0.227585888,0.234778757,0.25580928
2016-04-04 20:00:00+00:00,0.156717599,0.139332825,0.067792237,0.1692991,0.24317086,0.455773321,0.17757246,0.25853125,0.2239008,0.116638695,0.09985,0.1325,0.136625,0.10355,0.223112076,0.2323699,0.25580928
2016-04-05 20:00:00+00:00,0.163791437,0.142202603,0.067054556,0.171315054,0.251221663,0.450422663,0.183727407,0.26636727,0.227867648,0.121209039,0.109125,0.13269999999999998,0.14765,0.1042,0.235722054,0.246799175,0.26395044
2016-04-06 20:00:00+00:00,0.156886225,0.140087181,0.065723075,0.170883269,0.242419498,0.437098898,0.176502645,0.260267834,0.223211551,0.119368813,0.108975,0.134125,0.1465,0.1039,0.22997246,0.249273437,0.263376104
2016-04-07 20:00:00+00:00,0.168214888,0.142205093,0.068385462,0.17914446,0.25086159,0.435954365,0.186949768,0.268767333,0.233564271,0.119798813,0.11675,0.1351,0.15425,0.10369999999999999,0.235026223,0.247120091,0.264352992
2016-04-08 20:00:00+00:00,0.164777962,0.140328828,0.067915259,0.177014355,0.241100892,0.438054202,0.187881859,0.261690331,0.230426377,0.118325618,0.11085,0.134525,0.1487,0.10300000000000001,0.230415908,0.246167183,0.263345775
2016-04-11 20:00:00+00:00,0.16821006,0.140573712,0.06927975,0.180680305,0.234259584,0.439353466,0.190300931,0.258242081,0.226611588,0.11682535,0.111125,0.13442500000000002,0.15015,0.1024,0.231099972,0.244423975,0.258428213
2016-04-12 20:00:00+00:00,0.1616608,0.14115895,0.069321024,0.179614688,0.24194339,0.438177165,0.186046704,0.254332425,0.224428666,0.117738934,0.106,0.133075,0.14734999999999998,0.10115,0.2305152,0.239868322,0.252998618
2016-04-13 20:00:00+00:00,0.156094137,0.13866741,0.069597081,0.177533131,0.232613111,0.432090205,0.178158461,0.254878612,0.222876462,0.111433116,0.1048,0.1319,0.1464,0.10095000000000001,0.219485442,0.234720678,0.24894545
2016-04-14 20:00:00+00:00,0.155697533,0.138366762,0.06931435,0.175792366,0.226499206,0.444304069,0.177874405,0.253855375,0.224663055,0.108019637,0.106425,0.1322,0.1472,0.10045,0.217063201,0.233126855,0.249060233
2016-04-15 20:00:00+00:00,0.154862,0.1375957,0.065795412,0.173359666,0.232811442,0.444154999,0.17687145,0.255781475,0.224969083,0.107461208,0.10869999999999999,0.129575,0.14935,0.09865,0.217231794,0.231844044,0.246849647
2016-04-18 20:00:00+00:00,0.14974074,0.137047918,0.067451081,0.172001865,0.229882488,0.440659618,0.172963374,0.253137562,0.221047888,0.1059193,0.108575,0.128075,0.151025,0.09865,0.217059827,0.247887869,0.24898191
2016-04-19 20:00:00+00:00,0.149078472,0.138203375,0.066675073,0.171792862,0.226017499,0.427567127,0.17288186,0.2506325,0.218454253,0.102638232,0.105375,0.1268,0.1474,0.09865,0.209771595,0.236997291,0.245930607
2016-04-20 20:00:00+00:00,0.149443455,0.139121618,0.067825912,0.173033771,0.229122744,0.412216272,0.173844888,0.2547806,0.219329666,0.098205728,0.10492499999999999,0.1278,0.1463,0.09805,0.206444138,0.241523517,0.249470899
2016-04-21 20:00:00+00:00,0.154671914,0.139639237,0.06910484,0.177267838,0.228622794,0.412565709,0.179991028,0.258689437,0.222735825,0.100167768,0.10644999999999999,0.12710000000000002,0.148525,0.0973,0.208176128,0.242560147,0.248265965
2016-04-22 20:00:00+00:00,0.152610678,0.1387648,0.07197915,0.175231833,0.238547155,0.405329109,0.179698862,0.257416093,0.223763518,0.105322249,0.10865,0.12875,0.148775,0.09675,0.210226997,0.236253694,0.250928788
2016-04-25 20:00:00+00:00,0.154795991,0.139917207,0.072182465,0.17461937,0.245829761,0.394003,0.180455689,0.260841675,0.225407799,0.105298543,0.10815,0.12890000000000001,0.1499,0.09625,0.213907098,0.236543969,0.252840017
2016-04-26 20:00:00+00:00,0.152628444,0.138669062,0.073707415,0.17393157,0.239021985,0.40316583,0.180986885,0.257802975,0.222547129,0.104852387,0.10984999999999999,0.1273,0.14832499999999998,0.0944,0.212265423,0.237613339,0.253756464
2016-04-27 20:00:00+00:00,0.15180537,0.138935043,0.070826967,0.170791514,0.239003514,0.40242424,0.182347876,0.255528693,0.219122777,0.103682351,0.10865,0.127875,0.151275,0.09515000000000001,0.210158272,0.234604144,0.254063879
2016-04-28 20:00:00+00:00,0.157680866,0.138954093,0.072768874,0.177971773,0.2437544,0.40092872,0.184151666,0.258680275,0.222969066,0.105736412,0.10935,0.125675,0.151475,0.094,0.209872734,0.23175997,0.251682931
2016-04-29 20:00:00+00:00,0.161741559,0.139940343,0.072555884,0.192451277,0.2439775,0.40207,0.19135077,0.264404949,0.222293966,0.109595,0.11414999999999999,0.127475,0.15380000000000002,0.09369999999999999,0.224680485,0.23175997,0.252559329
2016-05-02 20:00:00+00:00,0.156930996,0.140430418,0.074162359,0.187523223,0.244528074,0.41216525,0.186139444,0.264440368,0.225972196,0.108676406,0.1152,0.12655,0.15455,0.0947,0.225180374,0.248123442,0.252559329
2016-05-03 20:00:00+00:00,0.163187694,0.140764293,0.073831053,0.184970315,0.253230822,0.42541852,0.191420777,0.267239934,0.235235044,0.108900493,0.11585000000000001,0.125975,0.158225,0.09519999999999999,0.233685347,0.248123442,0.259985358
2016-05-04 20:00:00+00:00,0.166190518,0.1409952,0.0745822,0.186022468,0.264331807,0.42097967,0.194466725,0.272882213,0.24105374,0.110796499,0.11485,0.127475,0.15955,0.09555,0.238299412,0.248123442,0.26263
2016-05-05 20:00:00+00:00,0.167570907,0.14042167,0.072790421,0.182628642,0.257771774,0.4225416,0.194934721,0.270250375,0.239218459,0.111279746,0.11539999999999999,0.129725,0.15914999999999999,0.09515000000000001,0.235694166,0.248123442,0.263072444
2016-05-06 20:00:00+00:00,0.163284333,0.141049125,0.072779112,0.184035488,0.254060533,0.41544216,0.190970688,0.270972631,0.240691177,0.111731318,0.11220000000000001,0.131075,0.1604,0.09465,0.234475546,0.244505473,0.267539312
2016-05-09 20:00:00+00:00,0.161932681,0.141745065,0.072009918,0.18191115,0.252449738,0.4158862,0.189600604,0.274219154,0.242542881,0.110870996,0.10705,0.130525,0.155475,0.09519999999999999,0.229204397,0.231248308,0.262820357
2016-05-10 20:00:00+00:00,0.15569834,0.140721656,0.071545774,0.17809861,0.241606425,0.408898659,0.181760957,0.264600718,0.232500918,0.10728515,0.1085,0.130575,0.155475,0.0951,0.222725846,0.229313114,0.25482364
2016-05-11 20:00:00+00:00,0.1614124,0.141245607,0.07164732,0.1816024,0.243449,0.41286328,0.1870932,0.265597857,0.231962,0.105285571,0.111,0.12965,0.15695,0.09445,0.223909643,0.231883845,0.251341761
2016-05-12 20:00:00+00:00,0.159847088,0.14100775,0.0714485,0.178840278,0.242023044,0.39828535,0.187610625,0.266198888,0.232057888,0.107771328,0.111,0.129625,0.1595,0.09405,0.226650574,0.22984784,0.252822999
2016-05-13 20:00:00+00:00,0.163963388,0.142425593,0.071247896,0.181153881,0.248979285,0.4024705,0.189661444,0.272656266,0.241803525,0.109577315,0.11324999999999999,0.13035,0.1641,0.093825,0.225045632,0.235540757,0.259116891
2016-05-16 20:00:00+00:00,0.159564888,0.142813975,0.072470399,0.182502622,0.240871533,0.4013983,0.184274393,0.266966055,0.236636533,0.1082798,0.1128,0.129475,0.166125,0.09425,0.225005146,0.239266402,0.260391635
2016-05-17 20:00:00+00:00,0.164728785,0.141861887,0.072876278,0.178912931,0.243031807,0.39916992,0.190719339,0.269095737,0.237005222,0.107735762,0.11175,0.130625,0.162125,0.09415,0.225396816,0.236204922,0.254469946
2016-05-18 20:00:00+00:00,0.16571077,0.142589643,0.073235712,0.177880874,0.247612666,0.404696099,0.189163917,0.27186584,0.242054007,0.108243662,0.1108,0.13192500000000001,0.1597,0.09390000000000001,0.222991778,0.235118385,0.260875747
2016-05-19 20:00:00+00:00,0.167283622,0.144065093,0.073950287,0.176037134,0.250362772,0.40469856,0.191700017,0.272969226,0.245831244,0.109661234,0.1104,0.1326,0.16107500000000002,0.09422499999999999,0.228363454,0.232349497,0.262113812
2016-05-20 20:00:00+00:00,0.163909037,0.142754968,0.073051375,0.173029737,0.242488385,0.411323999,0.186397777,0.270497653,0.236836296,0.107589762,0.10765000000000001,0.13225,0.1565,0.094,0.222253788,0.230255107,0.259420812
2016-05-23 20:00:00+00:00,0.164521805,0.142539918,0.073093225,0.17072316,0.238424598,0.415794799,0.18700283,0.270783799,0.231389103,0.109303543,0.106725,0.131225,0.15515,0.0946,0.223400242,0.227793241,0.254114108
2016-05-24 20:00:00+00:00,0.154923733,0.142389587,0.072355074,0.169996466,0.230070933,0.409952331,0.176009826,0.26105518,0.2245704,0.106615131,0.10679999999999999,0.13085000000000002,0.1553,0.09465,0.213536717,0.224636482,0.248201668
2016-05-25 20:00:00+00:00,0.152125277,0.139734115,0.07163929,0.165656382,0.222785459,0.39041776,0.173455961,0.255144614,0.216228985,0.104010912,0.10435,0.130075,0.149625,0.09345,0.206268809,0.223934798,0.240780827
2016-05-26 20:00:00+00:00,0.151144377,0.1393386,0.068237125,0.16262537,0.220826244,0.394807195,0.171374071,0.253754365,0.206518592,0.0999205,0.1038,0.12737500000000002,0.14705000000000001,0.0907,0.205760683,0.223827509,0.241232803
2016-05-27 20:00:00+00:00,0.149002156,0.137960593,0.068201362,0.162179011,0.218283777,0.387235414,0.171915352,0.252736497,0.212805838,0.100090343,0.102825,0.12765,0.145,0.09045,0.203815589,0.221336204,0.240803307
2016-05-31 20:00:00+00:00,0.151320588,0.1385379,0.066880837,0.159968874,0.22258064,0.39248357,0.17148873,0.250661426,0.216409848,0.100029034,0.106025,0.127325,0.14702500000000002,0.09025,0.209373709,0.216798091,0.242585048
2016-06-01 20:00:00+00:00,0.150528337,0.138999465,0.069518356,0.162494821,0.223254251,0.388548458,0.173574911,0.254147578,0.213283731,0.103386412,0.108225,0.1275,0.149175,0.0902,0.215663824,0.222013276,0.243831035
2016-06-02 20:00:00+00:00,0.149270311,0.139619175,0.071007925,0.161909044,0.221841333,0.37844139,0.172058,0.252352134,0.215126555,0.102593225,0.109075,0.124675,0.15039999999999998,0.090125,0.2148645,0.230115318,0.240441272
2016-06-03 20:00:00+00:00,0.149591718,0.13984515,0.0691154,0.167755605,0.220542148,0.368343775,0.173233831,0.247158887,0.204756323,0.100394081,0.10949999999999999,0.123575,0.1497,0.08975,0.215923976,0.227125105,0.238868461
2016-06-06 20:00:00+00:00,0.148543937,0.138268725,0.071428859,0.17035997,0.21375454,0.371560029,0.171871607,0.243400487,0.203067537,0.098365525,0.10845,0.123875,0.149675,0.09050000000000001,0.21582351,0.226991142,0.232757754
2016-06-07 20:00:00+00:00,0.149453516,0.136996393,0.070292968,0.169779913,0.206325516,0.369703229,0.172088066,0.24170277,0.201646333,0.09818871,0.10665,0.12380000000000001,0.14529999999999998,0.09054999999999999,0.211564247,0.224269028,0.228734355
2016-06-08 20:00:00+00:00,0.149228503,0.137981112,0.069634387,0.175571152,0.216919548,0.369512539,0.173276951,0.239076619,0.200660533,0.098913575,0.10755,0.12022500000000001,0.145375,0.09,0.214756945,0.222791172,0.226415323
2016-06-09 20:00:00+00:00,0.153218655,0.139868612,0.070028718,0.186052407,0.225383845,0.363935609,0.175728988,0.241915073,0.208355581,0.099856375,0.11185,0.12240000000000001,0.1494,0.08994999999999999,0.218275773,0.225097128,0.226415323
2016-06-10 20:00:00+00:00,0.163496555,0.143316818,0.073272612,0.190353862,0.238210707,0.38693809,0.184805773,0.254839387,0.229349822,0.10330834,0.1165,0.12867499999999998,0.156475,0.09025,0.227815707,0.226019495,0.231609045
2016-06-13 20:00:00+00:00,0.1789587,0.147696509,0.075064843,0.190365977,0.251392111,0.394573843,0.196189061,0.267666682,0.239044503,0.106572973,0.118475,0.131525,0.161475,0.092275,0.248679088,0.246633657,0.252843392
2016-06-14 20:00:00+00:00,0.178129162,0.15114215,0.076624725,0.187448809,0.259425037,0.3991867,0.197446735,0.268910092,0.236896296,0.116241199,0.1209,0.13525,0.16465,0.095975,0.260531266,0.250965391,0.257048923
2016-06-15 20:00:00+00:00,0.174862094,0.151171562,0.077650531,0.183766226,0.249877198,0.414636126,0.196426919,0.266447258,0.233502166,0.114573926,0.11699999999999999,0.12994999999999998,0.15535,0.09512499999999999,0.257954348,0.252441273,0.253846731
2016-06-16 20:00:00+00:00,0.170721803,0.157148337,0.078928999,0.182433287,0.251564088,0.415836892,0.19573957,0.266372382,0.230316607,0.117605054,0.12,0.13085000000000002,0.16210000000000002,0.09765,0.26566212,0.263310244,0.262292305
2016-06-17 20:00:00+00:00,0.17627594,0.153967878,0.079155818,0.184219453,0.247907101,0.40404118,0.200050507,0.267690351,0.2316057,0.115547767,0.11695,0.1316,0.1589,0.09720000000000001,0.254187033,0.257199802,0.254141226
2016-06-20 20:00:00+00:00,0.1665794,0.1493424,0.0772117,0.1775651,0.233324,0.389727331,0.1936751,0.260452595,0.222015799,0.111951599,0.11685000000000001,0.12635,0.156825,0.0943,0.233698162,0.242478554,0.242911779
2016-06-21 20:00:00+00:00,0.166108833,0.146112263,0.07576,0.174240355,0.222226177,0.394857873,0.188637466,0.256240195,0.220064222,0.111514045,0.117225,0.1263,0.157575,0.09332499999999999,0.23335319,0.236277122,0.241527257
2016-06-22 20:00:00+00:00,0.169831777,0.148463018,0.0753388,0.177972333,0.228176577,0.403144512,0.191658888,0.25905678,0.232557311,0.111999454,0.12085000000000001,0.12695,0.1623,0.09275,0.237683873,0.240377203,0.242704816
2016-06-23 20:00:00+00:00,0.1539583,0.144321418,0.07537,0.173178966,0.216413333,0.383820692,0.179392533,0.247041258,0.194515733,0.105968436,0.1144,0.12487500000000001,0.1553,0.09147500000000001,0.222068539,0.238655148,0.240521712
2016-06-24 20:00:00+00:00,0.189282544,0.153500563,0.079994699,0.18856,0.261508411,0.401433609,0.207222666,0.272394758,0.248072444,0.11130159,0.12655,0.137675,0.1702,0.09685,0.256051517,0.277433903,0.254402743
2016-06-27 20:00:00+00:00,0.193510977,0.160939768,0.082947199,0.189839155,0.272444722,0.400915126,0.215691966,0.278172302,0.262407011,0.122150227,0.1305,0.14,0.170125,0.0975,0.266121424,0.264612272,0.245073445
2016-06-28 20:00:00+00:00,0.172829733,0.157924109,0.080918,0.179352133,0.2427123,0.388481914,0.19719598,0.264841443,0.239143999,0.123919236,0.11935000000000001,0.133225,0.1606,0.09425,0.247753253,0.254347547,0.244674824
2016-06-29 20:00:00+00:00,0.162525822,0.15463077,0.078388499,0.177904222,0.229843644,0.370377043,0.1874817,0.254231492,0.232842155,0.11867999,0.11904999999999999,0.12619999999999998,0.15975,0.09269999999999999,0.235540268,0.239397738,0.236916682
2016-06-30 20:00:00+00:00,0.158107733,0.155873345,0.0783297,0.176279188,0.226269311,0.370844224,0.181889955,0.24934779,0.236551911,0.116155727,0.119375,0.12685000000000002,0.15869999999999998,0.09165,0.230325429,0.237881088,0.231310425
2016-07-01 20:00:00+00:00,0.1565011,0.157177238,0.0799095,0.1787322,0.219961917,0.366137814,0.178474,0.244478321,0.2308572,0.114149486,0.11785,0.1229,0.15814999999999999,0.09115000000000001,0.23076893,0.233082371,0.231310425
2016-07-05 20:00:00+00:00,0.15934423,0.161189554,0.0810146,0.182458758,0.231100704,0.380790365,0.182677046,0.25492317,0.24140263,0.115301045,0.12325,0.12215,0.163225,0.0911,0.240425721,0.230458203,0.230167773
2016-07-06 20:00:00+00:00,0.157961723,0.16274216,0.081474999,0.185939647,0.2302151,0.380698599,0.179984492,0.255342595,0.236205515,0.1116226,0.12535,0.1241,0.166925,0.09182499999999999,0.248009601,0.240362523,0.237793805
2016-07-07 20:00:00+00:00,0.155850615,0.161417054,0.0832848,0.182350913,0.242054461,0.389827721,0.179168338,0.253850356,0.238493707,0.110612081,0.1229,0.123125,0.16475,0.088175,0.241766807,0.240750001,0.234140527
2016-07-08 20:00:00+00:00,0.146547576,0.155516672,0.080787999,0.172910732,0.222791984,0.381904395,0.170751884,0.246476478,0.22622003,0.103572595,0.125275,0.1225,0.16449999999999998,0.08779999999999999,0.232979075,0.244591845,0.236153024
2016-07-11 20:00:00+00:00,0.14488363,0.150895003,0.0772056,0.171275753,0.221008499,0.383540939,0.168896092,0.245501121,0.223046123,0.103767272,0.124725,0.1219,0.16269999999999998,0.08755,0.222135966,0.23547052,0.232183155
2016-07-12 20:00:00+00:00,0.141063276,0.149998636,0.0770798,0.164989253,0.217982653,0.375040375,0.165092346,0.240283043,0.221038769,0.1015464,0.125525,0.12035,0.162575,0.087,0.213876682,0.237566428,0.229952814
2016-07-13 20:00:00+00:00,0.139714215,0.1515327,0.0758242,0.164701593,0.217771861,0.389746097,0.165553138,0.240738985,0.221405269,0.10062609,0.12244999999999999,0.11955,0.16057500000000002,0.0857,0.21772921,0.23694812,0.227080609
2016-07-14 20:00:00+00:00,0.140199461,0.15283106,0.0781,0.162842059,0.215352676,0.378195643,0.162644569,0.238237073,0.219347969,0.100427727,0.1244,0.117775,0.1617,0.08512499999999999,0.213391535,0.232001587,0.224537331
2016-07-15 20:00:00+00:00,0.141239569,0.150857158,0.077578299,0.160124092,0.213992177,0.372658609,0.161890076,0.236635053,0.219556538,0.099895763,0.1259,0.119725,0.16292500000000001,0.08425,0.212832608,0.234691971,0.224740999
2016-07-18 20:00:00+00:00,0.139677269,0.14777574,0.078227106,0.160715384,0.213521384,0.378066312,0.160096284,0.23825817,0.219333061,0.10078049,0.1252,0.11935000000000001,0.162675,0.0851,0.213119706,0.234691971,0.222773284
2016-07-19 20:00:00+00:00,0.139424415,0.148988909,0.074462952,0.159251707,0.216389076,0.368139121,0.161632153,0.240963239,0.219361076,0.099827409,0.1261,0.12182499999999999,0.1632,0.08515,0.214673315,0.232668535,0.223824946
2016-07-20 20:00:00+00:00,0.138861653,0.14765769,0.074730795,0.15882052,0.214000769,0.365620736,0.159186953,0.236895609,0.213033538,0.098991272,0.1284,0.122975,0.1649,0.0849,0.209104518,0.232795809,0.222083088
2016-07-21 20:00:00+00:00,0.14332,0.14709744,0.074505581,0.1643074,0.2163741,0.3735296,0.16152,0.237706,0.2163381,0.100006499,0.126525,0.12275,0.1634,0.0848,0.207229481,0.238060361,0.222279126
2016-07-22 20:00:00+00:00,0.141933446,0.145619302,0.075594609,0.164402192,0.212626743,0.380930107,0.161194256,0.23601384,0.215289635,0.09697692,0.124775,0.12285,0.16335,0.08495,0.204084377,0.237961749,0.221800909
2016-07-25 20:00:00+00:00,0.144781935,0.144890317,0.075063022,0.162968371,0.225027466,0.401953149,0.164762671,0.2394947,0.221116576,0.100159948,0.12195,0.12285,0.1594,0.085475,0.203118702,0.233661268,0.219499846
2016-07-26 20:00:00+00:00,0.144947284,0.146238418,0.074385885,0.160425999,0.223127735,0.403517695,0.167391938,0.2402159,0.219759753,0.103055184,0.12045,0.12285,0.15785,0.0855,0.204076017,0.234256154,0.218110517
2016-07-27 20:00:00+00:00,0.145137476,0.146188743,0.073892344,0.162604853,0.226489411,0.411629285,0.166376605,0.2399952,0.217675009,0.102461187,0.1173,0.12285,0.15525,0.0851,0.204201656,0.230404996,0.218343931
2016-07-28 20:00:00+00:00,0.145170384,0.144760037,0.074030777,0.160250441,0.223986666,0.415282774,0.164241184,0.2357693,0.211708266,0.104592223,0.1185,0.12285,0.15405,0.084825,0.20932014,0.230060196,0.218404864
2016-07-29 20:00:00+00:00,0.14073103,0.143740283,0.071111306,0.161380452,0.219823538,0.410819409,0.164385515,0.23589913,0.209749746,0.101460453,0.11355,0.12285,0.145425,0.08445,0.20447964,0.222002834,0.218894196
2016-08-01 20:00:00+00:00,0.141890799,0.143345175,0.07463745,0.163875555,0.235221604,0.422235644,0.163660248,0.236001035,0.209665979,0.103510961,0.1124,0.12285,0.14455,0.08477499999999999,0.205534472,0.218661602,0.215379775
2016-08-02 20:00:00+00:00,0.147071269,0.14306206,0.074240563,0.163546085,0.234897117,0.429056187,0.169458274,0.2388832,0.215453733,0.105466776,0.122,0.12285,0.1479,0.084825,0.215864113,0.216728264,0.215379775
2016-08-03 20:00:00+00:00,0.1449388,0.142381453,0.073074786,0.162476923,0.22866,0.424581285,0.168798415,0.238538019,0.2125205,0.102765461,0.1202,0.12285,0.14795,0.084625,0.215293888,0.221388298,0.219017226
2016-08-04 20:00:00+00:00,0.141990902,0.14137483,0.069722472,0.164128324,0.224263941,0.4226024,0.165423666,0.234069,0.205523351,0.10114232,0.1189,0.11522500000000001,0.14730000000000001,0.084275,0.208967943,0.217422281,0.21751225
2016-08-05 20:00:00+00:00,0.137276015,0.14065523,0.070637308,0.163413961,0.220296692,0.421840647,0.161846757,0.23210487,0.195487728,0.097801933,0.1134,0.113425,0.145,0.083675,0.200650531,0.212846754,0.214809689
2016-08-08 20:00:00+00:00,0.136422346,0.141026329,0.069255167,0.161353273,0.216742523,0.408760714,0.160956251,0.23248496,0.199023415,0.094509038,0.11135,0.11220000000000001,0.1416,0.08395,0.196365762,0.202404014,0.210561393
2016-08-09 20:00:00+00:00,0.135263666,0.13947976,0.065299662,0.159599546,0.214160466,0.399776895,0.162999733,0.22654064,0.199069666,0.095409833,0.1106,0.111625,0.139575,0.08335000000000001,0.190314338,0.201354242,0.206035916
2016-08-10 20:00:00+00:00,0.136801256,0.139162246,0.065433378,0.16055642,0.221277815,0.405605211,0.165918861,0.22682206,0.201797282,0.096470953,0.1119,0.111475,0.14205,0.08349999999999999,0.193948722,0.201076873,0.204918349
2016-08-11 20:00:00+00:00,0.136522615,0.141712175,0.067444491,0.161103489,0.219057261,0.401610419,0.164874455,0.2261753,0.195310307,0.094983169,0.11215,0.11195000000000001,0.1414,0.083,0.19105147,0.201076873,0.204741069
2016-08-12 20:00:00+00:00,0.136760656,0.140427216,0.066509908,0.161213015,0.224970848,0.391510793,0.16415285,0.2234116,0.19849732,0.094809812,0.11352499999999999,0.11175,0.14045,0.08375,0.192543064,0.199300835,0.205822545
2016-08-15 20:00:00+00:00,0.136843138,0.141388235,0.068430681,0.161181897,0.21940482,0.391172266,0.163156689,0.227547475,0.195388953,0.093476765,0.11535000000000001,0.11077500000000001,0.14150000000000001,0.08460000000000001,0.193661011,0.197752796,0.206658362
2016-08-16 20:00:00+00:00,0.141347053,0.14259721,0.06865518,0.165180198,0.221392392,0.386405028,0.164944577,0.22875747,0.200366692,0.093910053,0.118925,0.109775,0.14415,0.0849,0.201893376,0.202424175,0.209645334
2016-08-17 20:00:00+00:00,0.139752051,0.143735528,0.06693459,0.167265128,0.220535876,0.379304457,0.166759284,0.234199775,0.203603548,0.092183217,0.12025000000000001,0.1124,0.14550000000000002,0.085275,0.207345272,0.202076841,0.210136622
2016-08-18 20:00:00+00:00,0.138593502,0.142442607,0.067687213,0.166003641,0.217617692,0.375444444,0.165818818,0.2285222,0.199123097,0.093052564,0.1204,0.110375,0.14554999999999998,0.08515,0.203063911,0.209073054,0.210640654
2016-08-19 20:00:00+00:00,0.1381478,0.141213592,0.068072518,0.16789205,0.2160813,0.366441066,0.160906789,0.22934538,0.199612584,0.091350461,0.1216,0.111425,0.14859999999999998,0.08539999999999999,0.207125992,0.210481297,0.210690465
2016-08-22 20:00:00+00:00,0.139363412,0.141221296,0.066864081,0.168019586,0.218268728,0.379294841,0.159521433,0.236506706,0.204267051,0.092964615,0.12225,0.113625,0.1503,0.085625,0.207258877,0.208766168,0.210507971
2016-08-23 20:00:00+00:00,0.138895897,0.139462208,0.067885101,0.16687088,0.213689066,0.384561508,0.159623538,0.225341142,0.204479435,0.092251507,0.1229,0.114525,0.1485,0.08612500000000001,0.202918598,0.211768662,0.21134278
2016-08-24 20:00:00+00:00,0.142528353,0.139821461,0.066439008,0.1672276,0.213643975,0.383982285,0.16542963,0.229244419,0.210612092,0.091507307,0.123525,0.114675,0.14815,0.08615,0.20231637,0.212257469,0.213429927
2016-08-25 20:00:00+00:00,0.143084361,0.141711716,0.066905654,0.167147821,0.217777302,0.387519079,0.165444194,0.23502666,0.208686466,0.091419697,0.122475,0.115825,0.14654999999999999,0.08650000000000001,0.205510054,0.2142622,0.213658357
2016-08-26 20:00:00+00:00,0.143146433,0.143560666,0.068256655,0.163782733,0.217919866,0.371166714,0.165284,0.228153728,0.210514133,0.094297466,0.1222,0.116125,0.14665,0.08645,0.203930709,0.219283547,0.212706798
2016-08-29 20:00:00+00:00,0.140816861,0.141258929,0.06847136,0.163125507,0.215855015,0.384675,0.1633218,0.226552133,0.208812076,0.091925169,0.123025,0.11717499999999999,0.1476,0.08705,0.204627743,0.213856089,0.210067999
2016-08-30 20:00:00+00:00,0.142026666,0.142293547,0.067981104,0.160928736,0.218736705,0.3762166,0.164314223,0.22641038,0.210210548,0.092278071,0.1232,0.11735,0.1462,0.08625,0.201746295,0.212633244,0.207733398
2016-08-31 20:00:00+00:00,0.144416979,0.144965541,0.068736577,0.160073066,0.224215129,0.386974387,0.166156948,0.230181285,0.210836153,0.092321179,0.11875,0.116175,0.143875,0.08585000000000001,0.204404194,0.211357865,0.210179497
2016-09-01 20:00:00+00:00,0.145821346,0.14550348,0.070299022,0.161103709,0.22455525,0.394963295,0.166793876,0.231047182,0.209311769,0.095827307,0.11862500000000001,0.11605,0.14005,0.085475,0.207465298,0.213180427,0.210410881
2016-09-02 20:00:00+00:00,0.141889651,0.143073841,0.069456,0.15699139,0.220636153,0.391092419,0.163625025,0.22651306,0.203450415,0.094080333,0.11737500000000001,0.11532500000000001,0.1375,0.085,0.20085089,0.214643277,0.212839758
2016-09-06 20:00:00+00:00,0.139629423,0.142746904,0.070310724,0.159628458,0.214620348,0.381863996,0.162220851,0.228418352,0.199397692,0.093092307,0.11465,0.112075,0.134,0.08317500000000001,0.201086093,0.212016435,0.211840842
2016-09-07 20:00:00+00:00,0.138771492,0.142025286,0.068974514,0.15751416,0.216096123,0.377941333,0.159555869,0.225553206,0.199740815,0.091388276,0.11595000000000001,0.1115,0.13555,0.082225,0.19861579,0.211407985,0.213762043
2016-09-08 20:00:00+00:00,0.141470189,0.143725979,0.06936118,0.157466064,0.212811835,0.376116501,0.16310882,0.228234022,0.203561233,0.093024564,0.11502499999999999,0.11135,0.13449999999999998,0.082975,0.197502138,0.210198898,0.215183786
2016-09-09 20:00:00+00:00,0.162171979,0.146954713,0.072419026,0.157216692,0.22733123,0.371891488,0.177236215,0.241668285,0.221988128,0.09895511,0.11900000000000001,0.11295,0.13785,0.0832,0.203663297,0.206985183,0.219299409
2016-09-12 20:00:00+00:00,0.151519807,0.145821667,0.069951165,0.155967407,0.220921753,0.384365714,0.167355707,0.244973726,0.216383046,0.100403776,0.119425,0.11525,0.14404999999999998,0.08317500000000001,0.211602767,0.21554121,0.229938456
2016-09-13 20:00:00+00:00,0.162286787,0.148647974,0.075731244,0.158349115,0.239564148,0.39448726,0.176790558,0.251200647,0.228957702,0.106047171,0.12112500000000001,0.11795,0.14785,0.08262499999999999,0.216747788,0.210324715,0.229016037
2016-09-14 20:00:00+00:00,0.166357758,0.149228589,0.072587922,0.157310363,0.243362433,0.397265098,0.178202405,0.248527342,0.227979923,0.106232517,0.12195,0.1204,0.15130000000000002,0.08257500000000001,0.216881136,0.213109593,0.229186386
2016-09-15 20:00:00+00:00,0.158044299,0.1467025,0.0723875,0.1569703,0.22889,0.396525009,0.1705234,0.245912555,0.2253404,0.1057121,0.11902499999999999,0.1207,0.14875,0.0821,0.214052903,0.220451663,0.228939547
2016-09-16 20:00:00+00:00,0.159253959,0.145584166,0.073235299,0.1580183,0.2328875,0.400948095,0.16926188,0.246461729,0.230020959,0.108059522,0.11789999999999999,0.12057499999999999,0.14685,0.08192500000000001,0.218024649,0.217100086,0.228939547
2016-09-19 20:00:00+00:00,0.15835528,0.145599414,0.0742515,0.158961599,0.232239319,0.414709314,0.17264528,0.243040733,0.2218701,0.108031735,0.1176,0.119475,0.1449,0.0823,0.211663853,0.217100086,0.226980012
2016-09-20 20:00:00+00:00,0.160622609,0.148250971,0.073201,0.15915664,0.23465905,0.398440333,0.174278769,0.241124474,0.220397289,0.106856188,0.11645,0.11789999999999999,0.14475,0.081775,0.21187334,0.212865795,0.226510765
2016-09-21 20:00:00+00:00,0.151601279,0.145698844,0.0749332,0.15706472,0.236714251,0.389971809,0.16680532,0.241516399,0.207940959,0.105041528,0.111625,0.117075,0.14029999999999998,0.08155,0.209246348,0.202380653,0.224434931
2016-09-22 20:00:00+00:00,0.14618425,0.140329746,0.0665032,0.153895799,0.22246594,0.391982552,0.1622059,0.233996245,0.203473185,0.098972604,0.11125,0.11465,0.1408,0.080275,0.197136574,0.202380653,0.221630065
2016-09-23 20:00:00+00:00,0.1470691,0.140153057,0.0686584,0.155694,0.226550639,0.398963371,0.16529094,0.236286444,0.21329814,0.098502173,0.11035,0.11449999999999999,0.141775,0.07957499999999999,0.197998499,0.193729349,0.21743645
2016-09-26 20:00:00+00:00,0.15474768,0.141897677,0.0680921,0.1606928,0.23416588,0.412835711,0.1719882,0.240140673,0.22224115,0.101487255,0.1142,0.11560000000000001,0.14595,0.0795,0.207305179,0.195975194,0.219031514
2016-09-27 20:00:00+00:00,0.14931712,0.139945269,0.0684915,0.1570844,0.2315356,0.405095155,0.16685628,0.238348571,0.21341832,0.100490556,0.11502499999999999,0.1161,0.146375,0.0796,0.208830939,0.193890194,0.21657078
2016-09-28 20:00:00+00:00,0.146116799,0.140542857,0.067922,0.1543659,0.22395911,0.398060523,0.166026719,0.234068177,0.20954294,0.101494269,0.1149,0.11605,0.145725,0.07955,0.203369339,0.196692193,0.215555391
2016-09-29 20:00:00+00:00,0.151552999,0.14254615,0.067158,0.1513997,0.229781899,0.385328888,0.1694891,0.236484819,0.2209155,0.103320807,0.116075,0.11785,0.147125,0.08025,0.2038905,0.194129713,0.213285607
2016-09-30 20:00:00+00:00,0.148249547,0.14235798,0.069457399,0.150312103,0.220729024,0.372464177,0.166140932,0.234940009,0.215879622,0.101802751,0.1153,0.11800000000000001,0.147275,0.08134999999999999,0.20388686,0.200283432,0.222785653
2016-10-03 20:00:00+00:00,0.14806486,0.142656185,0.0711411,0.150038981,0.22177499,0.36017219,0.166098943,0.235588746,0.217096995,0.101513867,0.1139,0.11835000000000001,0.1465,0.08197499999999999,0.20316054,0.193736916,0.218082791
2016-10-04 20:00:00+00:00,0.149824611,0.14254758,0.0712618,0.15472199,0.224313523,0.360737609,0.167271349,0.235272146,0.221533126,0.100062888,0.115,0.118225,0.1471,0.08215,0.19968953,0.191005651,0.214973312
2016-10-05 20:00:00+00:00,0.148108018,0.142737511,0.0688668,0.151193837,0.217300213,0.349303777,0.165888822,0.232133733,0.214044984,0.097256688,0.11345000000000001,0.12005,0.14685,0.08414999999999999,0.200625681,0.193318883,0.214774355
2016-10-06 20:00:00+00:00,0.146624339,0.143524466,0.0693362,0.153026079,0.223153846,0.345936685,0.167270645,0.231856539,0.213689992,0.09806245,0.11234999999999999,0.120725,0.14245,0.08380000000000001,0.202265244,0.195067032,0.214412163
2016-10-07 20:00:00+00:00,0.149511773,0.142958926,0.068716,0.153894633,0.224433403,0.347000806,0.16750129,0.233725511,0.21549505,0.097702783,0.11195000000000001,0.122975,0.1435,0.0836,0.205827121,0.196509617,0.2151698
2016-10-10 20:00:00+00:00,0.145859467,0.143307863,0.0699959,0.152390015,0.216933822,0.3384112,0.163162767,0.229758514,0.210490943,0.096205999,0.1103,0.11975,0.1399,0.08365,0.200545701,0.196509617,0.2151698
2016-10-11 20:00:00+00:00,0.154330994,0.142104271,0.069059399,0.154223773,0.22618365,0.350250038,0.171199122,0.238225453,0.218989618,0.097450652,0.1118,0.12335000000000002,0.1408,0.08255000000000001,0.201742952,0.191959777,0.217400745
2016-10-12 20:00:00+00:00,0.155386215,0.142435815,0.0689473,0.153916577,0.229756288,0.358241003,0.173020792,0.234154231,0.217541999,0.099180035,0.112875,0.12432499999999999,0.1407,0.08455,0.204693445,0.195074639,0.21854094
2016-10-13 20:00:00+00:00,0.159333375,0.139453469,0.0656902,0.1535128,0.231321909,0.358683647,0.17757784,0.240916342,0.224975754,0.099591335,0.11384999999999999,0.12564999999999998,0.14245,0.084875,0.209968215,0.198213428,0.222427261
2016-10-14 20:00:00+00:00,0.158222358,0.140359233,0.065340799,0.151975313,0.231056603,0.353197371,0.174170254,0.233865693,0.216679735,0.097163092,0.11234999999999999,0.12332499999999999,0.13974999999999999,0.08220000000000001,0.203892608,0.195195863,0.219659264
2016-10-17 20:00:00+00:00,0.159218805,0.14043375,0.0631538,0.153148792,0.233908895,0.351443958,0.175208843,0.235086984,0.217313283,0.100200252,0.112325,0.1233,0.1398,0.08245,0.206405616,0.19233924,0.219109949
2016-10-18 20:00:00+00:00,0.155635396,0.139875596,0.0622672,0.151655271,0.231277063,0.351251238,0.173417603,0.233420666,0.210821373,0.099190217,0.109725,0.1217,0.13535,0.08425,0.202218875,0.190992493,0.215397957
2016-10-19 20:00:00+00:00,0.152053583,0.13810818,0.062559599,0.151165071,0.225427182,0.336842,0.171452369,0.22906673,0.209496486,0.097697218,0.107675,0.11835000000000001,0.133025,0.083325,0.199490097,0.190062692,0.214923658
2016-10-20 20:00:00+00:00,0.150890667,0.13433429,0.0608932,0.152239173,0.22254548,0.337526117,0.169290405,0.227095626,0.204904694,0.095802294,0.10619999999999999,0.1167,0.131825,0.083,0.196235412,0.186263431,0.212075388
2016-10-21 20:00:00+00:00,0.149656369,0.132494803,0.059167899,0.152224128,0.224519974,0.330580215,0.167703179,0.226147685,0.206522188,0.090523222,0.10432499999999999,0.1176,0.13035,0.0842,0.194463397,0.187817511,0.212075388
2016-10-24 20:00:00+00:00,0.146627169,0.133084471,0.060502685,0.15218015,0.223121883,0.327647114,0.163234992,0.22310352,0.208604467,0.089821514,0.101875,0.11755,0.127825,0.0833,0.192015778,0.187395433,0.207960233
2016-10-25 20:00:00+00:00,0.147514226,0.132952533,0.061393366,0.14901525,0.222805396,0.332124736,0.165034432,0.222648625,0.202756867,0.088553711,0.10247500000000001,0.11710000000000001,0.1259,0.081125,0.191465616,0.18640023,0.206611198
2016-10-26 20:00:00+00:00,0.15042255,0.133749158,0.062510006,0.148651564,0.224250943,0.340107631,0.167781807,0.227121176,0.216077773,0.088651076,0.10475,0.11615,0.1234,0.07965,0.194084559,0.186804866,0.209603375
2016-10-27 20:00:00+00:00,0.154626792,0.135765495,0.066026123,0.148689979,0.228396009,0.343389152,0.172685067,0.2296576,0.212990811,0.088607476,0.1075,0.1167,0.12775,0.07905000000000001,0.194589878,0.189219542,0.211576271
2016-10-28 20:00:00+00:00,0.155747815,0.137724952,0.065733452,0.156339003,0.22886769,0.353431822,0.174374613,0.233381166,0.21639566,0.091260101,0.108125,0.11715,0.129375,0.079275,0.196751532,0.187911666,0.214195303
2016-10-31 20:00:00+00:00,0.15782495,0.13910746,0.065123501,0.157650101,0.230881511,0.347959206,0.176796264,0.236180342,0.216063595,0.095356387,0.1081,0.11695,0.1303,0.0795,0.201820584,0.190530547,0.212776198
2016-11-01 20:00:00+00:00,0.164116239,0.141003257,0.069204052,0.162874564,0.237417113,0.360330114,0.182393018,0.23914738,0.223838452,0.102228952,0.11044999999999999,0.1168,0.1328,0.07945,0.209921065,0.191523722,0.212418005
2016-11-02 20:00:00+00:00,0.166014594,0.141286879,0.067549446,0.165748913,0.240014041,0.370532393,0.185691811,0.236021066,0.227557169,0.105168895,0.1144,0.11845,0.135925,0.08282500000000001,0.212905181,0.200764427,0.220458457
2016-11-03 20:00:00+00:00,0.170002037,0.141482533,0.068829666,0.164149396,0.243706679,0.382189212,0.184554405,0.239724971,0.237832867,0.106620977,0.114175,0.1192,0.134975,0.08164999999999999,0.21444682,0.200764427,0.222790341
2016-11-04 20:00:00+00:00,0.17200798,0.1418258,0.067918771,0.162898056,0.244687077,0.396064819,0.192033705,0.246652101,0.237639641,0.106606914,0.11455,0.12015,0.13505,0.08234999999999999,0.214736094,0.209754313,0.22555428
2016-11-07 21:00:00+00:00,0.152894594,0.140821701,0.067879899,0.157433726,0.230383196,0.391031993,0.174348033,0.235537022,0.221158584,0.099978842,0.10869999999999999,0.11865,0.1304,0.08372500000000001,0.205418362,0.200288828,0.218275102
2016-11-08 21:00:00+00:00,0.153737909,0.137751279,0.068338466,0.153972611,0.223266822,0.392529111,0.174760154,0.235553495,0.235592956,0.099445028,0.10635,0.11627499999999999,0.1291,0.08349999999999999,0.204443658,0.196234752,0.215570864
2016-11-09 21:00:00+00:00,0.142789369,0.149919919,0.071977976,0.149867818,0.217826396,0.393012609,0.168645932,0.238129803,0.218865215,0.099515923,0.10935,0.12085000000000001,0.132225,0.083,0.198345353,0.215171214,0.224067703
2016-11-10 21:00:00+00:00,0.147661103,0.155686971,0.071407279,0.156709858,0.21650066,0.375225695,0.17440483,0.242169761,0.232492845,0.102929057,0.117925,0.12,0.1388,0.082175,0.199479953,0.195607454,0.21073143
2016-11-11 21:00:00+00:00,0.148376501,0.15963332,0.07335386,0.177881811,0.231800018,0.40427713,0.174983886,0.24356378,0.232127373,0.10692466,0.12005,0.1253,0.14395,0.08295,0.203860685,0.200883722,0.213988591
2016-11-14 21:00:00+00:00,0.15088772,0.161357066,0.077108266,0.16903395,0.228181081,0.4203092,0.179489837,0.244098285,0.240516247,0.106609633,0.1216,0.130175,0.14554999999999998,0.084325,0.204597603,0.200906489,0.217028729
2016-11-15 21:00:00+00:00,0.148990015,0.155318903,0.075475415,0.153745426,0.22361795,0.410562653,0.172280216,0.234989965,0.226936415,0.103068126,0.11807499999999999,0.128025,0.13942500000000002,0.0855,0.201685998,0.200766307,0.213675273
2016-11-16 21:00:00+00:00,0.146957711,0.155137225,0.076073174,0.155088801,0.22864773,0.416543149,0.1727506,0.2340812,0.228211803,0.103927231,0.1185,0.12725,0.1406,0.08502499999999999,0.20417377,0.202291145,0.211358569
2016-11-17 21:00:00+00:00,0.145153273,0.158874285,0.076541428,0.162404898,0.226733809,0.407894,0.169685607,0.23096431,0.219461455,0.101680414,0.12117499999999999,0.12987500000000002,0.1429,0.08522500000000001,0.200778453,0.203162504,0.209186723
2016-11-18 21:00:00+00:00,0.145981716,0.158568738,0.077428693,0.160886603,0.226297054,0.404758546,0.170246037,0.224613557,0.218497967,0.101299163,0.124375,0.13175,0.14635,0.084925,0.205187124,0.203909405,0.208077353
2016-11-21 21:00:00+00:00,0.144508377,0.156649587,0.076525215,0.158977807,0.221615305,0.394884844,0.165470828,0.222143368,0.212282362,0.096585338,0.12345,0.13192500000000001,0.14305,0.084625,0.20257531,0.202625753,0.205845933
2016-11-22 21:00:00+00:00,0.144218558,0.152035695,0.07668308,0.157354864,0.224344732,0.384871514,0.165078641,0.218750336,0.209165826,0.097332809,0.121375,0.1295,0.13849999999999998,0.08455,0.201202558,0.202477536,0.203630656
2016-11-23 21:00:00+00:00,0.14505163,0.154280533,0.078711688,0.166644622,0.221071744,0.374942955,0.16586216,0.218323357,0.214082883,0.097353822,0.12405,0.12539999999999998,0.1373,0.084625,0.201469618,0.202477536,0.204964553
2016-11-25 18:00:00+00:00,0.14401449,0.158072355,0.077161026,0.168747477,0.227411021,0.401662609,0.165902905,0.220462694,0.212504764,0.096194603,0.1264,0.12987500000000002,0.14015,0.08460000000000001,0.204372633,0.205436031,0.207328579
2016-11-28 21:00:00+00:00,0.147064092,0.154562633,0.077368819,0.162320943,0.233852958,0.403232628,0.168108641,0.225042326,0.21460746,0.097330704,0.124775,0.1263,0.14029999999999998,0.084475,0.2096813,0.203045469,0.208443239
2016-11-29 21:00:00+00:00,0.14650892,0.151712253,0.076804666,0.162056333,0.236144485,0.406739333,0.167657694,0.224680778,0.21361915,0.099088855,0.125175,0.1251,0.14025,0.08442500000000001,0.205645059,0.201719191,0.20923429
2016-11-30 21:00:00+00:00,0.147596724,0.153494698,0.078488793,0.17028599,0.22078523,0.360717196,0.169380377,0.224412815,0.21286172,0.097403484,0.1265,0.12625,0.1401,0.082425,0.203348236,0.200760173,0.208001707
2016-12-01 21:00:00+00:00,0.151274777,0.160380085,0.082569714,0.174827524,0.226063317,0.345604514,0.178699421,0.225185463,0.220516279,0.101911385,0.127075,0.12605,0.14095000000000002,0.082725,0.207711839,0.20179254,0.207934669
2016-12-02 21:00:00+00:00,0.151772809,0.157278539,0.079873841,0.171945098,0.221137853,0.334247339,0.178119849,0.226363121,0.219291388,0.102061244,0.12605,0.126375,0.139925,0.08317500000000001,0.207437601,0.203841882,0.210323078
2016-12-05 21:00:00+00:00,0.146457295,0.156156577,0.077427722,0.169248686,0.216853147,0.334143539,0.17511432,0.225402589,0.214496373,0.098669777,0.12480000000000001,0.12515,0.1374,0.084875,0.197512998,0.202417218,0.206313484
2016-12-06 21:00:00+00:00,0.144455286,0.153400076,0.076907961,0.165097994,0.217900335,0.336258057,0.174245162,0.214287294,0.21159892,0.0979379,0.123875,0.1245,0.136,0.082925,0.191999874,0.199177611,0.201996839
2016-12-07 21:00:00+00:00,0.143651396,0.15172838,0.075168207,0.164627839,0.217962839,0.32604745,0.171974256,0.217497452,0.207793015,0.094249171,0.1223,0.121075,0.13605,0.08505000000000001,0.189272783,0.196587019,0.198393647
2016-12-08 21:00:00+00:00,0.146914962,0.151407609,0.075687365,0.162739973,0.221312849,0.318086866,0.170429798,0.221567489,0.209335516,0.092809222,0.12095,0.121425,0.13565,0.08305,0.187565063,0.196221445,0.200283033
2016-12-09 21:00:00+00:00,0.143470322,0.153262619,0.077808095,0.167837132,0.214002641,0.327615028,0.169000256,0.221195126,0.209119562,0.095731138,0.12362500000000001,0.122625,0.13605,0.08295,0.190145189,0.201895876,0.200280899
2016-12-12 21:00:00+00:00,0.146070954,0.153805231,0.078466804,0.167600264,0.210781113,0.319531498,0.171231816,0.223573752,0.213143237,0.094418858,0.12279999999999999,0.12295,0.1351,0.08347500000000001,0.189943498,0.202215973,0.201979537
2016-12-13 21:00:00+00:00,0.145436283,0.154307025,0.077368873,0.164979075,0.210093183,0.312263053,0.170593939,0.226063863,0.21154712,0.094810819,0.11865,0.1211,0.1331,0.08405,0.188869049,0.197873132,0.201153427
2016-12-14 21:00:00+00:00,0.1440188,0.155596,0.0789192,0.165981699,0.2143384,0.31305038,0.17060575,0.224921999,0.220250199,0.098560299,0.118325,0.1215,0.13305,0.08324999999999999,0.192932386,0.197213178,0.201121195
2016-12-15 21:00:00+00:00,0.142316289,0.154307171,0.078238604,0.16866754,0.210797289,0.335170406,0.170099099,0.228153345,0.22203762,0.09714063,0.127025,0.123675,0.138375,0.08275,0.189463023,0.197178097,0.207454115
2016-12-16 21:00:00+00:00,0.14302508,0.151332409,0.076623758,0.167034,0.2064277,0.321834984,0.166691039,0.229039318,0.216448529,0.096350473,0.12645,0.12242499999999999,0.139275,0.083,0.187390893,0.198136419,0.206723261
2016-12-19 21:00:00+00:00,0.141906649,0.149794761,0.074998915,0.16490112,0.20554628,0.30939,0.16563464,0.224932927,0.217941199,0.09182442,0.1264,0.121725,0.14075,0.082675,0.185303877,0.196967405,0.207901588
2016-12-20 21:00:00+00:00,0.141743679,0.150499673,0.072671091,0.16643344,0.20848344,0.297316114,0.16541034,0.22630169,0.2155474,0.092171528,0.126025,0.12140000000000001,0.1411,0.08305,0.183292236,0.19433219,0.20867757
2016-12-21 21:00:00+00:00,0.142113,0.150271528,0.071962661,0.163804749,0.209802611,0.310813796,0.1667714,0.2213619,0.222690199,0.089888063,0.12505,0.120625,0.14005,0.08324999999999999,0.183779164,0.197074035,0.206593169
2016-12-22 21:00:00+00:00,0.143123599,0.150801861,0.074634392,0.16151914,0.209128999,0.301725999,0.16820928,0.237726409,0.22523104,0.092370067,0.12385,0.12015,0.13974999999999999,0.08405,0.184479866,0.197351885,0.210815107
2016-12-23 21:00:00+00:00,0.14262288,0.150653388,0.073099612,0.16487277,0.208140279,0.306411028,0.167492,0.2373775,0.22286275,0.090298523,0.1246,0.11814999999999999,0.14245,0.08435000000000001,0.186144407,0.197351885,0.214066653
2016-12-27 21:00:00+00:00,0.14215514,0.150171388,0.073141436,0.16298968,0.207666325,0.30477085,0.16762516,0.237004318,0.2227622,0.090117089,0.12585000000000002,0.11814999999999999,0.1427,0.083625,0.188468422,0.19685405,0.214066653
2016-12-28 21:00:00+00:00,0.14584675,0.149267328,0.071862013,0.162439559,0.2107193,0.295358095,0.17230804,0.236469972,0.2163176,0.089740805,0.126675,0.118675,0.1429,0.084175,0.18918277,0.198377958,0.212295637
2016-12-29 21:00:00+00:00,0.147875999,0.151249238,0.073390671,0.1572872,0.207301899,0.294948666,0.1735566,0.235748322,0.221877,0.091336617,0.127025,0.118825,0.14355,0.08397500000000001,0.191634769,0.203654462,0.213124204
2016-12-30 21:00:00+00:00,0.151579811,0.151639474,0.073571099,0.15756646,0.208290412,0.302156311,0.178540584,0.237717125,0.228025486,0.08949964,0.127,0.117975,0.14315,0.084325,0.191110181,0.205944008,0.211713009
2017-01-03 21:00:00+00:00,0.144036001,0.150718057,0.075584612,0.15712642,0.212217477,0.315802361,0.175194452,0.23170109,0.220827315,0.093165922,0.1274,0.11645,0.1448,0.08435000000000001,0.188924899,0.205944008,0.211393513
2017-01-04 21:00:00+00:00,0.138965741,0.149677904,0.072289723,0.154813984,0.211811652,0.306235009,0.171693426,0.227419822,0.21533615,0.09077686,0.12365,0.11465,0.14005,0.08375,0.182901432,0.203676206,0.20861543
2017-01-05 21:00:00+00:00,0.138046649,0.150488466,0.068348402,0.153865332,0.210285428,0.304119746,0.168038528,0.222958118,0.21129332,0.090367516,0.1243,0.11375,0.13849999999999998,0.082325,0.180248411,0.20144721,0.204629392
2017-01-06 21:00:00+00:00,0.136919471,0.147510228,0.070860865,0.152613962,0.211862446,0.301893085,0.165663226,0.220495568,0.211913849,0.092089279,0.12359999999999999,0.11234999999999999,0.13505,0.081875,0.177329619,0.20181737,0.203929403
2017-01-09 21:00:00+00:00,0.137532235,0.148359874,0.071473991,0.152712998,0.214468057,0.316977438,0.165718392,0.220656,0.210399445,0.091274159,0.12555,0.11220000000000001,0.133875,0.081475,0.176333526,0.20181737,0.205006797
2017-01-10 21:00:00+00:00,0.137967966,0.146310753,0.071701479,0.151480566,0.215341111,0.311784155,0.165690747,0.2214373,0.212045184,0.089269124,0.1264,0.11230000000000001,0.1331,0.078225,0.176494199,0.2027791,0.201212229
2017-01-11 21:00:00+00:00,0.137023303,0.145812685,0.071123918,0.15467132,0.210999365,0.321644028,0.165260392,0.219755931,0.21010049,0.085370241,0.1291,0.11285,0.13465,0.0788,0.17825871,0.201333348,0.200816379
2017-01-12 21:00:00+00:00,0.138212864,0.144275203,0.071790628,0.155295809,0.209961599,0.306713009,0.164543474,0.219817402,0.212347396,0.086191228,0.1281,0.11282500000000001,0.1331,0.07865,0.182573601,0.200961805,0.201030202
2017-01-13 21:00:00+00:00,0.136595762,0.143942228,0.069971575,0.155482566,0.201634365,0.309956704,0.164126509,0.218023563,0.207821833,0.08442662,0.1259,0.1117,0.13185,0.077975,0.176987818,0.193460347,0.197370939
2017-01-17 21:00:00+00:00,0.137758652,0.143776266,0.071019884,0.15849999,0.200964654,0.308320828,0.165616867,0.217185227,0.206491124,0.081068133,0.1246,0.1137,0.13144999999999998,0.07564999999000001,0.180725543,0.20081412,0.200608444
2017-01-18 21:00:00+00:00,0.13675903,0.144312387,0.072136066,0.156608266,0.198804147,0.307704336,0.163486144,0.2145144,0.208240113,0.082353867,0.12275,0.112875,0.1293,0.075925,0.178596093,0.199355311,0.200035474
2017-01-19 21:00:00+00:00,0.136945437,0.144906622,0.073081712,0.157008016,0.200506339,0.310609765,0.164751407,0.215252745,0.210147777,0.08487564,0.1258,0.11205,0.13119999999999998,0.07564999999000001,0.17740801,0.200016405,0.199529841
2017-01-20 21:00:00+00:00,0.134282173,0.143972552,0.071633986,0.151946877,0.194413422,0.3015722,0.160613962,0.21093979,0.199006973,0.082745704,0.1233,0.11109999999999999,0.12994999999999998,0.075,0.174792507,0.19998338,0.199088028
2017-01-23 21:00:00+00:00,0.134502173,0.144369831,0.070609428,0.152918626,0.196177924,0.300845043,0.159978979,0.209619997,0.198344294,0.080217174,0.12369999999999999,0.11025,0.12955,0.07515,0.179216746,0.201621162,0.193769258
2017-01-24 21:00:00+00:00,0.12937886,0.145129963,0.071470012,0.147891218,0.189372349,0.301531706,0.154055764,0.207780145,0.196179169,0.085352647,0.1225,0.107825,0.12895,0.07339999999999999,0.177771358,0.202640081,0.192350107
2017-01-25 21:00:00+00:00,0.12749249,0.145036857,0.071160342,0.1467624,0.183190792,0.307179471,0.151629381,0.201230504,0.192478188,0.085613414,0.12115000000000001,0.106575,0.1286,0.0724,0.173576833,0.197654522,0.190084385
2017-01-26 21:00:00+00:00,0.128163969,0.140886222,0.070313333,0.146154547,0.177440207,0.306912912,0.152091018,0.197081999,0.193062716,0.081933688,0.12087500000000001,0.107825,0.12885,0.0727,0.173573569,0.196196503,0.187591967
2017-01-27 21:00:00+00:00,0.129589679,0.139962474,0.068252628,0.146384756,0.179562924,0.297096468,0.150555509,0.195687231,0.189782988,0.082751739,0.12175000000000001,0.109875,0.13115,0.07275000000000001,0.176044457,0.194356847,0.185727468
2017-01-30 21:00:00+00:00,0.133420052,0.139882514,0.06901058,0.14941302,0.192703388,0.311409675,0.155390784,0.200900581,0.196714592,0.084084261,0.12279999999999999,0.110725,0.13215,0.072825,0.179840627,0.194720018,0.185727468
2017-01-31 21:00:00+00:00,0.13399239,0.140206396,0.069168166,0.149221905,0.195561464,0.314449275,0.156727705,0.20311884,0.19709615,0.084482682,0.12242499999999999,0.110225,0.13425,0.07275000000000001,0.183259888,0.198912667,0.185727468
2017-02-01 21:00:00+00:00,0.133005207,0.137194047,0.070166355,0.146826452,0.194227071,0.305656599,0.152242481,0.199642881,0.196868321,0.08514212,0.121975,0.11057499999999999,0.1348,0.072925,0.179345773,0.197888193,0.18616348
2017-02-02 21:00:00+00:00,0.133633301,0.136124761,0.068682971,0.148682528,0.194593916,0.300630337,0.155541992,0.2015786,0.192688686,0.085482109,0.12165,0.1105,0.13435,0.072375,0.179687436,0.202796345,0.18589549
2017-02-03 21:00:00+00:00,0.1298492,0.135612698,0.067476142,0.148936118,0.186215726,0.30054015,0.150726664,0.19956599,0.190147781,0.085200514,0.1192,0.111425,0.1334,0.07255,0.175286245,0.204225948,0.18738595
2017-02-06 21:00:00+00:00,0.131321532,0.136505688,0.065065044,0.15123166,0.191310104,0.297138093,0.150669645,0.199245134,0.188968362,0.085097755,0.1168,0.11164999999999999,0.13324999999999998,0.073475,0.179373204,0.201549897,0.189263953
2017-02-07 21:00:00+00:00,0.131934698,0.136240285,0.065603314,0.15130569,0.19360632,0.311573837,0.152015275,0.198267763,0.191691701,0.085787028,0.11755,0.1119,0.1346,0.073225,0.18061984,0.199192908,0.190412547
2017-02-08 21:00:00+00:00,0.133224769,0.137091098,0.066139938,0.151980937,0.195412288,0.31522415,0.15172209,0.200277554,0.192144875,0.086227825,0.1174,0.11085,0.13425,0.07345,0.183008449,0.196046557,0.193691957
2017-02-09 21:00:00+00:00,0.132283571,0.136441782,0.067286996,0.152176481,0.191334094,0.303632843,0.149962747,0.199535313,0.193724086,0.085092066,0.11805,0.1104,0.13355,0.07425,0.1792056,0.195774234,0.194806164
2017-02-10 21:00:00+00:00,0.130514622,0.13718859,0.065245152,0.155426301,0.187568301,0.297496093,0.149007967,0.199781297,0.189862407,0.084998452,0.11810000000000001,0.1106,0.13255,0.0742,0.179895138,0.196178737,0.195004441
2017-02-13 21:00:00+00:00,0.128294822,0.13651112,0.065649307,0.154368981,0.185980754,0.2952749,0.147331633,0.202502954,0.189523267,0.083834396,0.11725,0.11109999999999999,0.13119999999999998,0.0755,0.176660274,0.195629752,0.19461591
2017-02-14 21:00:00+00:00,0.12457416,0.135737838,0.065755682,0.155121554,0.184377456,0.3023102,0.145544837,0.201073145,0.187749539,0.083262012,0.114575,0.1099,0.1278,0.07505,0.176296608,0.197997938,0.19463646
2017-02-15 21:00:00+00:00,0.12415026,0.134195866,0.063625233,0.15103416,0.185000958,0.303609987,0.143349622,0.203732972,0.18317669,0.082792499,0.11055,0.10935,0.12359999999999999,0.07519999999999999,0.17876542,0.190689871,0.196922163
2017-02-16 21:00:00+00:00,0.125817649,0.133490409,0.062923276,0.150184852,0.191327025,0.302800037,0.145945641,0.206573504,0.184822075,0.080187504,0.1097,0.10845,0.12275,0.07515,0.182598408,0.190393733,0.198066654
2017-02-17 21:00:00+00:00,0.127020613,0.13478113,0.061506015,0.149861833,0.19053725,0.29042385,0.145043515,0.2068352,0.183850816,0.078983395,0.11019999999999999,0.10647500000000001,0.12560000000000002,0.07400000000000001,0.183409421,0.19112552,0.197388718
2017-02-21 21:00:00+00:00,0.128166396,0.134938457,0.0622459,0.14944316,0.186470226,0.291130656,0.145467792,0.201499125,0.185856988,0.080021885,0.11135,0.106275,0.12695,0.0741,0.179008133,0.18758196,0.196348433
2017-02-22 21:00:00+00:00,0.13060723,0.13602316,0.062336761,0.149269469,0.192665513,0.289474337,0.148303554,0.202040237,0.189911235,0.082522126,0.11289999999999999,0.106525,0.12795,0.07440000000000001,0.181764923,0.187308647,0.196134388
2017-02-23 21:00:00+00:00,0.133158981,0.136494247,0.061730634,0.149470456,0.196167256,0.279916115,0.154757954,0.200912981,0.191914,0.082143501,0.11199999999999999,0.10577500000000001,0.1276,0.0754,0.189669491,0.189221733,0.194768637
2017-02-24 21:00:00+00:00,0.13416046,0.137535809,0.067030847,0.147918773,0.200448105,0.284634499,0.156156701,0.20249605,0.198031008,0.084233333,0.10949999999999999,0.103325,0.12539999999999998,0.074675,0.193695338,0.196314232,0.197423044
2017-02-27 21:00:00+00:00,0.13451095,0.136224022,0.064842222,0.148142233,0.19938132,0.282560871,0.155213115,0.204849968,0.196426392,0.084897422,0.10885,0.102925,0.12525,0.07525,0.190423873,0.196753928,0.198037232
2017-02-28 21:00:00+00:00,0.13774366,0.135693311,0.063253241,0.146992413,0.200388226,0.2835815,0.154890415,0.207774812,0.201116452,0.084629052,0.10755,0.1014,0.12327500000000001,0.07519999999999999,0.190805359,0.195902764,0.199249651
2017-03-01 21:00:00+00:00,0.134924226,0.134247128,0.064237866,0.147632135,0.192063645,0.269448937,0.150679279,0.204691281,0.195536037,0.084466138,0.109,0.10247500000000001,0.123475,0.07485,0.185334106,0.192926628,0.195646317
2017-03-02 21:00:00+00:00,0.135715254,0.133688958,0.061394428,0.146601592,0.192267228,0.273636575,0.152195109,0.206917874,0.197799773,0.081427349,0.10869999999999999,0.10227499999999999,0.121875,0.07440000000000001,0.186224503,0.189739815,0.196695883
2017-03-03 21:00:00+00:00,0.133263033,0.131925833,0.061358492,0.146074577,0.19450786,0.277335787,0.149685201,0.203826296,0.191654811,0.081124455,0.10550000000000001,0.104825,0.12057499999999999,0.0725,0.184781568,0.192880385,0.196362231
2017-03-06 21:00:00+00:00,0.133848633,0.132407228,0.061386228,0.144353162,0.194777886,0.271460187,0.149138301,0.200777837,0.188006286,0.083879014,0.10115,0.105125,0.1182,0.07400000000000001,0.184812758,0.189773347,0.189624535
2017-03-07 21:00:00+00:00,0.133917086,0.132383895,0.061223387,0.144258003,0.197167999,0.279376587,0.149896216,0.196447981,0.184980966,0.084052123,0.10045,0.103475,0.114875,0.070325,0.184006646,0.185575445,0.186437187
2017-03-08 21:00:00+00:00,0.133522816,0.133675622,0.062656277,0.143897577,0.207436509,0.301045,0.147975498,0.194069725,0.188319977,0.085226888,0.10252499999999999,0.103475,0.116125,0.06985000000000001,0.181299596,0.189384458,0.184835954
2017-03-09 21:00:00+00:00,0.135235075,0.134097714,0.065764114,0.145731858,0.211170113,0.304427909,0.14898823,0.199336606,0.194597207,0.08786909,0.10305,0.105725,0.1195,0.070075,0.181933025,0.18759064,0.188257977
2017-03-10 21:00:00+00:00,0.131763998,0.132382579,0.064013914,0.143165433,0.206094884,0.3183842,0.145985162,0.196083031,0.186613343,0.086141952,0.10305,0.105425,0.11814999999999999,0.07205,0.184218958,0.187358557,0.189027685
2017-03-13 20:00:00+00:00,0.131910324,0.133043249,0.065393387,0.142113901,0.203288626,0.325728125,0.14589122,0.195663487,0.193493575,0.084928503,0.10092499999999999,0.10460000000000001,0.11532500000000001,0.0739,0.185527877,0.186468553,0.189127912
2017-03-14 20:00:00+00:00,0.134063018,0.134588433,0.065467428,0.140079539,0.208995245,0.331217887,0.146255056,0.1958387,0.194404886,0.089241614,0.100525,0.104075,0.115725,0.07427500000000001,0.188445904,0.185528272,0.18942354
2017-03-15 20:00:00+00:00,0.130554566,0.130803095,0.062193104,0.138709056,0.19981983,0.318014306,0.144257267,0.193816796,0.18886332,0.085404793,0.098375,0.102225,0.11387499999999999,0.07425,0.186443072,0.185263104,0.190928954
2017-03-16 20:00:00+00:00,0.127452328,0.129850158,0.062021412,0.135908292,0.197430843,0.31397355,0.142153569,0.19335465,0.191142732,0.083614912,0.09185,0.09887499999999999,0.107625,0.07214999999999999,0.183440623,0.179783563,0.189371258
2017-03-17 20:00:00+00:00,0.130086999,0.1287856,0.0617786,0.135567499,0.198133316,0.308415643,0.1426008,0.190019975,0.1818672,0.0821668,0.0933,0.09637499999999999,0.10635,0.0728,0.180328494,0.176398992,0.189101524
2017-03-20 20:00:00+00:00,0.129729095,0.128216414,0.061202076,0.13465596,0.196172579,0.30560095,0.14133918,0.192475624,0.18412556,0.080840582,0.09335,0.09795,0.10800000000000001,0.073175,0.179703946,0.176398992,0.188249816
2017-03-21 20:00:00+00:00,0.13511818,0.127250087,0.061438269,0.13581864,0.20094824,0.315841584,0.147641799,0.20127934,0.192537599,0.087219332,0.095875,0.098425,0.108425,0.07285,0.17980469,0.175401302,0.190870349
2017-03-22 20:00:00+00:00,0.134804744,0.129005931,0.060908148,0.13722586,0.198147,0.307858437,0.145688481,0.199065681,0.188410799,0.085176802,0.09824999999999999,0.10175000000000001,0.118675,0.072725,0.183617101,0.187627695,0.197437412
2017-03-23 20:00:00+00:00,0.135372668,0.129304562,0.061202418,0.13649508,0.19713696,0.31085175,0.1481857,0.2015066,0.2089454,0.087214206,0.099475,0.101425,0.11904999999999999,0.073475,0.183974005,0.17995168,0.196504993
2017-03-24 20:00:00+00:00,0.133831149,0.129049881,0.060047934,0.1365014,0.199366269,0.316129137,0.147401999,0.199110624,0.188045399,0.087309943,0.097675,0.10227499999999999,0.11872500000000001,0.073,0.184284757,0.176462916,0.195865566
2017-03-27 20:00:00+00:00,0.13120242,0.128623884,0.06088676,0.13491256,0.2011744,0.326741412,0.145533519,0.204726743,0.189900499,0.084925413,0.099625,0.101775,0.119175,0.07315,0.18437328,0.187332955,0.198516767
2017-03-28 20:00:00+00:00,0.127644999,0.128031593,0.060975055,0.13278268,0.18940688,0.312386218,0.141673479,0.198775012,0.186812451,0.081664109,0.09755000000000001,0.10074999999999999,0.115075,0.0727,0.178354881,0.173813168,0.196542182
2017-03-29 20:00:00+00:00,0.12525714,0.1269718,0.060232488,0.13132222,0.18009496,0.298886318,0.139459359,0.195600459,0.179976719,0.079280744,0.095525,0.100425,0.11317500000000001,0.072925,0.177068439,0.172034856,0.192115828
2017-03-30 20:00:00+00:00,0.123832722,0.126626931,0.060991186,0.13110665,0.180299799,0.297028399,0.138274999,0.192365375,0.1779171,0.077982132,0.094775,0.1035,0.109825,0.07264999999999999,0.175469567,0.178317363,0.187734255
2017-03-31 20:00:00+00:00,0.1255428,0.126191887,0.061829148,0.1324516,0.178095,0.287888712,0.137597,0.189974331,0.1778217,0.079436251,0.09535,0.103575,0.110175,0.072675,0.170495644,0.181831329,0.186082312
2017-04-03 20:00:00+00:00,0.125256616,0.12930151,0.063576488,0.132039527,0.17701738,0.285464218,0.136774198,0.186862562,0.175853746,0.0808094,0.0934,0.102625,0.108975,0.07255,0.171617178,0.170082291,0.180618118
2017-04-04 20:00:00+00:00,0.123305264,0.128583675,0.063882276,0.1324298,0.180643936,0.289502925,0.136401574,0.191007512,0.175305718,0.080978367,0.0944,0.10355,0.11352499999999999,0.0726,0.170924861,0.179037566,0.180618118
2017-04-05 20:00:00+00:00,0.12753484,0.128611556,0.064260855,0.134413511,0.178181809,0.2892586,0.139194361,0.190364,0.176633861,0.081268376,0.09305,0.104525,0.113025,0.07275000000000001,0.17174596,0.172816413,0.178399216
2017-04-06 20:00:00+00:00,0.124158188,0.128597437,0.063903111,0.132512088,0.178180536,0.2876881,0.138165322,0.190044931,0.178251259,0.079213734,0.0951,0.1084,0.11752499999999999,0.07264999999999999,0.171174135,0.18981692,0.181652469
2017-04-07 20:00:00+00:00,0.126149809,0.12896266,0.063983304,0.132676996,0.180542768,0.29016235,0.138928888,0.189634525,0.178388081,0.080125936,0.09565,0.11220000000000001,0.12052500000000001,0.07305,0.173208871,0.183620414,0.18477866
2017-04-10 20:00:00+00:00,0.129019555,0.128811175,0.064829767,0.133350266,0.180791638,0.288644525,0.140576744,0.192757731,0.178990222,0.080030134,0.095875,0.11227499999999999,0.120325,0.07385,0.179921617,0.177422822,0.184337468
2017-04-11 20:00:00+00:00,0.130461393,0.130780199,0.064527697,0.138188866,0.189437066,0.291668275,0.143634312,0.19381635,0.180980711,0.081760946,0.09775,0.11442500000000001,0.121675,0.07385,0.184767924,0.186245797,0.188931355
2017-04-12 20:00:00+00:00,0.131979088,0.131515287,0.065826651,0.142024251,0.188221755,0.287791762,0.146073599,0.191919037,0.177825555,0.081261953,0.09910000000000001,0.11365,0.12237500000000001,0.0747,0.182849918,0.191453732,0.184603458
2017-04-13 20:00:00+00:00,0.134583333,0.130673068,0.065275872,0.144162,0.184500228,0.283348368,0.147613533,0.190593475,0.180011583,0.08444983,0.09815,0.11335,0.12315,0.07505,0.18355211,0.187415995,0.182328587
2017-04-17 20:00:00+00:00,0.129307745,0.129497568,0.064861309,0.143726399,0.18508006,0.282079362,0.14344714,0.1887047,0.175703792,0.080764576,0.10025,0.11630000000000001,0.1241,0.075125,0.18355211,0.182806314,0.182328587
2017-04-18 20:00:00+00:00,0.129813703,0.129590281,0.065034904,0.142999503,0.185661376,0.28288615,0.143301996,0.19000025,0.178255056,0.080483553,0.097725,0.119925,0.1222,0.07115,0.188176073,0.179339587,0.184112059
2017-04-19 20:00:00+00:00,0.131812742,0.126501068,0.064846279,0.1376955,0.188852538,0.288662875,0.142662777,0.189817312,0.180152011,0.081194772,0.09545,0.117425,0.11685000000000001,0.07135,0.184110887,0.178085353,0.182036546
2017-04-20 20:00:00+00:00,0.126549578,0.127064278,0.064956432,0.13550434,0.188031019,0.292664575,0.139757611,0.185561212,0.176168356,0.079387174,0.09570000000000001,0.112925,0.1173,0.0711,0.187019612,0.182412594,0.180160836
2017-04-21 20:00:00+00:00,0.127937437,0.129362275,0.065007097,0.137442737,0.184947566,0.299886993,0.140141611,0.185163225,0.172655333,0.078472744,0.0965,0.10975,0.11675,0.0701,0.186610506,0.176301464,0.182210124
2017-04-24 20:00:00+00:00,0.117249577,0.122559785,0.058264025,0.128971733,0.177236533,0.30044,0.131673666,0.177349999,0.165703522,0.075206917,0.09054999999999999,0.10677500000000001,0.10625,0.068725,0.157759441,0.161008913,0.173745954
2017-04-25 20:00:00+00:00,0.116408744,0.120391984,0.056761437,0.128262592,0.17460917,0.301948937,0.129870418,0.170685337,0.162762148,0.074459443,0.09365,0.106925,0.10859999999999999,0.071,0.155420159,0.161981881,0.171566086
2017-04-26 20:00:00+00:00,0.117826229,0.121055218,0.056874962,0.123685274,0.173498822,0.301050478,0.130961479,0.172318999,0.163993944,0.07413254,0.095225,0.10679999999999999,0.1092,0.070325,0.152517039,0.161683848,0.173243929
2017-04-27 20:00:00+00:00,0.118105253,0.12020535,0.055942531,0.1231815,0.1745412,0.301338793,0.128617346,0.171690543,0.1651,0.073801843,0.093475,0.103875,0.10965,0.0698,0.155117536,0.162226355,0.171753301
2017-04-28 20:00:00+00:00,0.1183828,0.120772125,0.054875151,0.124828327,0.171158101,0.294406045,0.128792185,0.171976349,0.163702037,0.074935699,0.09315,0.104275,0.10915,0.06945,0.157397455,0.165791483,0.170370942
2017-05-01 20:00:00+00:00,0.116491549,0.1198186,0.056292718,0.126937918,0.170617814,0.295540491,0.130409988,0.169571312,0.162054029,0.072944815,0.0933,0.104375,0.10905,0.07035,0.157397455,0.164866923,0.170370942
2017-05-02 20:00:00+00:00,0.117642037,0.120389875,0.05535239,0.127482027,0.175107066,0.308483108,0.132665453,0.171629856,0.161502755,0.07234699,0.09355000000000001,0.102975,0.1093,0.070075,0.15737795,0.166542775,0.170843634
2017-05-03 20:00:00+00:00,0.119398413,0.1193279,0.056589049,0.130296933,0.178101214,0.318523806,0.135408207,0.174350831,0.163360044,0.073365999,0.09244999999999999,0.1017,0.10865,0.0697,0.15614241,0.166542775,0.170843634
2017-05-04 20:00:00+00:00,0.118355897,0.119674128,0.057101006,0.130366162,0.188626599,0.319002065,0.134878354,0.178943125,0.172113751,0.075302954,0.0917,0.100975,0.1091,0.0704,0.152763694,0.166542775,0.172650471
2017-05-05 20:00:00+00:00,0.117694877,0.119395118,0.056539187,0.127267355,0.183318711,0.314266642,0.135175666,0.179138753,0.169126555,0.074641843,0.091225,0.10342499999999999,0.11065,0.0719,0.152157874,0.166542775,0.176655379
2017-05-08 20:00:00+00:00,0.116860243,0.118837537,0.054389345,0.128264861,0.176993118,0.313844727,0.134893439,0.176492156,0.168474381,0.074301562,0.086625,0.10092499999999999,0.107675,0.0729,0.14825637,0.162760337,0.173379909
2017-05-09 20:00:00+00:00,0.117621778,0.117624062,0.054055231,0.127002351,0.184507896,0.312964408,0.13709725,0.172456406,0.165628444,0.074753499,0.08955,0.101175,0.10817500000000001,0.0729,0.149102246,0.16381989,0.170987793
2017-05-10 20:00:00+00:00,0.119293,0.115973775,0.053875818,0.1220562,0.18167,0.311714996,0.13647812,0.1754239,0.165819,0.074464843,0.0902,0.09977499999999999,0.10817500000000001,0.0728,0.1513356,0.163291385,0.172177025
2017-05-11 20:00:00+00:00,0.12094317,0.117253649,0.054176071,0.124489259,0.18378357,0.311426511,0.138723685,0.177366765,0.167199251,0.076084556,0.08975,0.097725,0.1075,0.07339999999999999,0.152888572,0.157488822,0.172422711
2017-05-12 20:00:00+00:00,0.121502388,0.117886628,0.054279329,0.125369664,0.183206388,0.311414098,0.138747492,0.177493612,0.167087959,0.076776465,0.089575,0.0941,0.10717499999999999,0.0732,0.151945442,0.160201314,0.170864302
2017-05-15 20:00:00+00:00,0.119724693,0.117521075,0.054506525,0.124649355,0.179015777,0.304564286,0.139177703,0.178852159,0.165652933,0.075965674,0.0895,0.093825,0.106625,0.07365000000000001,0.152309414,0.157501543,0.171927726
2017-05-16 20:00:00+00:00,0.120238518,0.116508171,0.053325801,0.125759666,0.181749037,0.305759868,0.13767446,0.1796011,0.166896074,0.074522323,0.08902499999999999,0.093375,0.105625,0.0747,0.150850633,0.161345506,0.175049955
2017-05-17 20:00:00+00:00,0.135791422,0.1220948,0.054802712,0.135092344,0.1886439,0.305499016,0.155971805,0.186847099,0.178210399,0.07688386,0.09465,0.094475,0.111625,0.0754,0.158238174,0.165659004,0.174905173
2017-05-18 20:00:00+00:00,0.133105583,0.119403109,0.055800437,0.135920938,0.185195269,0.306460504,0.152904997,0.185800537,0.182033627,0.0764515,0.09725,0.09787499999999999,0.11535000000000001,0.07525,0.161523361,0.170218936,0.18021379
2017-05-19 20:00:00+00:00,0.12576274,0.118944506,0.056706374,0.133439037,0.183108,0.299135442,0.150061592,0.18265735,0.173633629,0.075071069,0.09365,0.0977,0.112025,0.0751,0.157235222,0.16389138,0.178476951
2017-05-22 20:00:00+00:00,0.122027781,0.114740776,0.055976215,0.134713351,0.177052696,0.292293822,0.146691635,0.1773754,0.174719142,0.070149499,0.09112500000000001,0.09609999999999999,0.10932499999999999,0.07515,0.15369522,0.161827628,0.174814382
2017-05-23 20:00:00+00:00,0.121171679,0.114279925,0.055334999,0.131023066,0.175617375,0.285955934,0.146865499,0.175927473,0.170315999,0.070162042,0.09154999999999999,0.096475,0.109,0.07325,0.150295124,0.165640874,0.171600356
2017-05-24 20:00:00+00:00,0.119046459,0.112949353,0.055636592,0.128980544,0.1776036,0.285976426,0.144816614,0.173525926,0.170684511,0.069322636,0.09117499999999999,0.097325,0.10827500000000001,0.07205,0.151427746,0.164505532,0.169866758
2017-05-25 20:00:00+00:00,0.117321069,0.112575425,0.05388685,0.126300829,0.1803098,0.289519403,0.146069597,0.174894497,0.168698785,0.067020526,0.08895,0.09667500000000001,0.105675,0.071725,0.151800683,0.163209368,0.171070874
2017-05-26 20:00:00+00:00,0.118003243,0.110824862,0.053548867,0.128067544,0.174542505,0.288670459,0.145835244,0.177177439,0.175299555,0.066717263,0.090125,0.09595000000000001,0.1066,0.070975,0.151066317,0.163176352,0.170304719
2017-05-30 20:00:00+00:00,0.119641377,0.112009318,0.05428199,0.127066207,0.178385666,0.284723324,0.148589957,0.177659292,0.178894874,0.068058831,0.09237500000000001,0.097225,0.108425,0.0721,0.155371948,0.160905373,0.169528751
2017-05-31 20:00:00+00:00,0.11924198,0.113593093,0.054034101,0.128121177,0.181589592,0.292886334,0.148967493,0.17634796,0.181660148,0.067689921,0.09255000000000001,0.097325,0.10779999999999999,0.07195,0.15622942,0.158544127,0.171389299
2017-06-01 20:00:00+00:00,0.11747996,0.112750843,0.054566424,0.127758177,0.176804755,0.294901965,0.147961262,0.173268292,0.178002555,0.069746657,0.0922,0.095825,0.107825,0.07145,0.153481363,0.157909406,0.170619526
2017-06-02 20:00:00+00:00,0.116956717,0.112499715,0.052390968,0.129234696,0.180199059,0.298729311,0.145005237,0.172321219,0.175873348,0.069144715,0.092475,0.094925,0.107775,0.071775,0.152239031,0.161778658,0.174012281
2017-06-05 20:00:00+00:00,0.1187145,0.110990125,0.053075256,0.130560451,0.178019274,0.305779278,0.146683548,0.170914315,0.1761338,0.068856315,0.091775,0.094275,0.10772500000000002,0.07200000000000001,0.153518102,0.163338934,0.172839487
2017-06-06 20:00:00+00:00,0.1207342,0.112644906,0.053839785,0.132457,0.1805732,0.304652878,0.149643933,0.171578526,0.1761466,0.069842905,0.093675,0.09267500000000001,0.108825,0.07145,0.157277321,0.164587564,0.1728265
2017-06-07 20:00:00+00:00,0.120679629,0.1127077,0.053465825,0.133073555,0.183563392,0.320600006,0.149076657,0.17093341,0.177179344,0.072971631,0.093975,0.09362500000000001,0.108975,0.0721,0.157525308,0.166571957,0.173705893
2017-06-08 20:00:00+00:00,0.119311354,0.111675568,0.053057075,0.13276899,0.184367407,0.320533586,0.148957605,0.169119368,0.175092025,0.070580921,0.09095,0.09315,0.1076,0.07214999999999999,0.153461827,0.168781257,0.173187978
2017-06-09 20:00:00+00:00,0.119527282,0.110084187,0.053479468,0.130302244,0.181482222,0.312444734,0.163682444,0.180581389,0.177755222,0.069379031,0.0886,0.09057499999999999,0.105875,0.0697,0.15122306,0.166122119,0.172416812
2017-06-12 20:00:00+00:00,0.120577402,0.109866562,0.053209625,0.129931066,0.182344387,0.310534544,0.165436318,0.180918399,0.179660881,0.066356384,0.08839999999999999,0.08952500000000001,0.104175,0.06875,0.154294521,0.164229211,0.173438277
2017-06-13 20:00:00+00:00,0.117836411,0.109738225,0.052632993,0.128958948,0.172285125,0.307964,0.155269792,0.1793942,0.174455792,0.064321431,0.0864,0.08985,0.102575,0.06735000000000001,0.149959034,0.163863039,0.173017402
2017-06-14 20:00:00+00:00,0.118504444,0.110614062,0.052297437,0.127352811,0.182191405,0.315284606,0.158487635,0.177917536,0.173546833,0.065146084,0.08865,0.08900000000000001,0.102675,0.0668,0.15113964,0.163892989,0.171102311
2017-06-15 20:00:00+00:00,0.119179108,0.111496,0.051934293,0.125035466,0.192251885,0.31195678,0.160083422,0.182789231,0.174852074,0.06634721,0.08744999999999999,0.08967499999999999,0.102225,0.0673,0.155988669,0.162237908,0.172198859
2017-06-16 20:00:00+00:00,0.120661776,0.109842874,0.052123375,0.123535722,0.18373487,0.302092524,0.160355768,0.18000101,0.174152412,0.066684315,0.08710000000000001,0.090675,0.10225,0.067,0.151560127,0.161402951,0.170328913
2017-06-19 20:00:00+00:00,0.1173676,0.1087392,0.0519356,0.1243256,0.185922,0.301476924,0.1547396,0.176142,0.169691999,0.064209999,0.0863,0.08869999999999999,0.101975,0.0674,0.143593476,0.158521709,0.171122154
2017-06-20 20:00:00+00:00,0.119199322,0.109554772,0.052048872,0.124465066,0.190451622,0.315460114,0.159072522,0.177776181,0.174114311,0.06754565,0.08532500000000001,0.08877499999999999,0.1007,0.06765,0.147227917,0.158724321,0.169690607
2017-06-21 20:00:00+00:00,0.119790911,0.110675854,0.052095345,0.126704222,0.196628511,0.317787483,0.154612666,0.174785672,0.173064133,0.069428727,0.088025,0.090125,0.10425000000000001,0.0678,0.148935752,0.158954728,0.170080256
2017-06-22 20:00:00+00:00,0.119003946,0.110534381,0.052048981,0.126965333,0.1944201,0.31297356,0.155406033,0.174846263,0.172767999,0.069151981,0.0883,0.08967499999999999,0.10425000000000001,0.06684999999999999,0.148177833,0.159488344,0.172147863
2017-06-23 20:00:00+00:00,0.117639533,0.109340563,0.052176309,0.125651233,0.187797422,0.310840698,0.1524329,0.174664709,0.170440266,0.069695818,0.08622500000000001,0.08837500000000001,0.10115,0.06665,0.148551754,0.15725513,0.172182693
2017-06-26 20:00:00+00:00,0.116490879,0.110495127,0.051878727,0.124314666,0.187075255,0.314757518,0.155375511,0.173548677,0.169810311,0.068196618,0.085,0.087025,0.09977499999999999,0.067,0.146016609,0.154761961,0.172883388
2017-06-27 20:00:00+00:00,0.121085326,0.1107922,0.052921772,0.1264108,0.186366199,0.315402262,0.163810066,0.176456427,0.1755794,0.07398269,0.08564999999999999,0.087625,0.0998,0.0673,0.148994151,0.153757363,0.172423374
2017-06-28 20:00:00+00:00,0.117572116,0.111172186,0.053117509,0.126490555,0.185328444,0.310044065,0.159483388,0.17662515,0.173407133,0.070411272,0.085825,0.09029999999999999,0.09977499999999999,0.0702,0.148784621,0.154979447,0.174965044
2017-06-29 20:00:00+00:00,0.122392577,0.112509754,0.053723936,0.125361066,0.185237422,0.325563693,0.169551277,0.182225381,0.178942155,0.072191018,0.0902,0.092275,0.101775,0.0699,0.156357596,0.153480681,0.174121718
2017-06-30 20:00:00+00:00,0.1223335,0.113015,0.053897595,0.1222764,0.198049999,0.313172131,0.1662948,0.180801618,0.1780648,0.071574245,0.08779999999999999,0.091425,0.102675,0.06985000000000001,0.158229086,0.156419734,0.175480504
2017-07-03 17:00:00+00:00,0.123293849,0.11436029,0.056526599,0.124984721,0.178634892,0.312882813,0.171576692,0.180647018,0.176638984,0.075726327,0.08715,0.091775,0.102,0.06995,0.150076179,0.155010332,0.172778988
2017-07-05 20:00:00+00:00,0.12184383,0.11212435,0.055134,0.12462743,0.192315461,0.325953442,0.163539284,0.1829812,0.1780575,0.076346499,0.08955,0.09417500000000001,0.10435,0.0693,0.15413853,0.157313941,0.169813126
2017-07-06 20:00:00+00:00,0.126319747,0.1128766,0.055278963,0.1245866,0.201395415,0.323037204,0.167897384,0.183341818,0.184725753,0.077148618,0.08925000000000001,0.09535,0.1042,0.06905,0.157438012,0.159144256,0.170267218
2017-07-07 20:00:00+00:00,0.125171753,0.112876018,0.054594472,0.126588923,0.194227153,0.329626622,0.162016061,0.185305345,0.182803192,0.076712454,0.0894,0.095575,0.106,0.0693,0.158133048,0.160382745,0.17386177
2017-07-10 20:00:00+00:00,0.120715076,0.110701818,0.053967054,0.125552938,0.188647615,0.322696093,0.15978803,0.182928045,0.176099046,0.07460309,0.08725,0.09297499999999999,0.10395,0.06924999999999999,0.153102463,0.156159854,0.17237136
2017-07-11 20:00:00+00:00,0.119476621,0.110992918,0.054250513,0.124890969,0.184351076,0.324347019,0.157921199,0.180489227,0.175123038,0.075829654,0.0876,0.091675,0.10310000000000001,0.0695,0.153533329,0.15343827,0.171697518
2017-07-12 20:00:00+00:00,0.116641109,0.109177163,0.051817272,0.120426701,0.183040123,0.320941547,0.152483461,0.18130109,0.171018261,0.071502027,0.08869999999999999,0.0908,0.10432499999999999,0.0688,0.149735051,0.151551436,0.174577821
2017-07-13 20:00:00+00:00,0.115476446,0.10764839,0.051899945,0.120025738,0.180101092,0.317682036,0.149727143,0.18201,0.166619307,0.069906854,0.087,0.089725,0.10339999999999999,0.06849999999999999,0.149426486,0.150517956,0.173892877
2017-07-14 20:00:00+00:00,0.112957249,0.10565519,0.051401972,0.118700719,0.178088846,0.307432845,0.145771538,0.182314672,0.167354792,0.070613163,0.08635,0.09005,0.10255,0.06835,0.148128202,0.146701625,0.170903132
2017-07-17 20:00:00+00:00,0.112959353,0.104714413,0.051647799,0.118978992,0.176625546,0.304240836,0.146331538,0.184062054,0.167058984,0.069634127,0.0862,0.08932499999999999,0.1017,0.06865,0.146485143,0.146701625,0.174235951
2017-07-18 20:00:00+00:00,0.112548436,0.103613409,0.050990181,0.119149534,0.181206953,0.307710747,0.14316643,0.184821781,0.170585092,0.069462909,0.0888,0.0928,0.1033,0.0693,0.150073926,0.147078219,0.170543013
2017-07-19 20:00:00+00:00,0.110749473,0.102035181,0.050603745,0.11906323,0.1763221,0.320889986,0.14247923,0.187596204,0.168232584,0.067248409,0.08869999999999999,0.092325,0.1036,0.06985000000000001,0.146287725,0.142953903,0.170986325
2017-07-20 20:00:00+00:00,0.11036,0.1010048,0.0499292,0.119460799,0.174797999,0.3158855,0.1450887,0.1872788,0.168741,0.06734,0.08842499999999999,0.091975,0.1026,0.06985000000000001,0.146409973,0.140508912,0.170217917
2017-07-21 20:00:00+00:00,0.110120588,0.101538589,0.049245707,0.121684715,0.17617627,0.316644126,0.148625384,0.18448534,0.165420738,0.066280854,0.08955,0.090475,0.1023,0.07014999999999999,0.150656734,0.138895001,0.169152617
2017-07-24 20:00:00+00:00,0.10954586,0.102707794,0.050316558,0.123498746,0.176177023,0.312629206,0.147922969,0.1839588,0.166904871,0.0663022,0.0907,0.08994999999999999,0.10235,0.0705,0.146647365,0.14097662,0.167570512
2017-07-25 20:00:00+00:00,0.10825755,0.105762515,0.051679307,0.124762984,0.1750634,0.314353828,0.146556123,0.18375295,0.168155446,0.065495659,0.08945,0.090275,0.101525,0.0705,0.141797631,0.13871656,0.16613519
2017-07-26 20:00:00+00:00,0.107895448,0.105729797,0.051878287,0.122232233,0.175819015,0.306939371,0.146420158,0.180198159,0.163636663,0.06723422,0.0895,0.090375,0.09865,0.0711,0.138389501,0.13559257,0.163360622
2017-07-27 20:00:00+00:00,0.107641864,0.105864984,0.052390297,0.121182932,0.170428769,0.302763869,0.151457917,0.182221375,0.162076399,0.066364999,0.08945,0.09092499999999999,0.09955,0.07055,0.13618364,0.135136511,0.160513184
2017-07-28 20:00:00+00:00,0.10903411,0.106118769,0.052019284,0.120768541,0.17275268,0.29640199,0.153382546,0.18132196,0.163874038,0.06523507,0.091,0.091875,0.10145,0.0706,0.140344365,0.137943526,0.163775506
2017-07-31 20:00:00+00:00,0.10853221,0.107146482,0.052668092,0.120707102,0.16785123,0.297480355,0.155652399,0.17776183,0.16250123,0.062217165,0.091775,0.092525,0.1024,0.07095,0.140406953,0.137182195,0.160826646
2017-08-01 20:00:00+00:00,0.106334808,0.107444994,0.052988979,0.119599066,0.169926512,0.299114215,0.155251061,0.17838566,0.159557702,0.06728666,0.09179999999999999,0.09387499999999999,0.10220000000000001,0.071,0.139294811,0.134051809,0.164468648
2017-08-02 20:00:00+00:00,0.10789883,0.10714493,0.053682707,0.120983846,0.171549907,0.298185657,0.154949538,0.18458446,0.162054338,0.066052224,0.09210000000000002,0.095175,0.10185000000000001,0.071275,0.140421978,0.132720749,0.167393227
2017-08-03 20:00:00+00:00,0.110510905,0.106528717,0.053372017,0.121534098,0.175368474,0.298993619,0.156532923,0.18294675,0.163311556,0.067981199,0.09234999999999999,0.09847500000000001,0.10335000000000001,0.07065,0.140508644,0.132866041,0.168129335
2017-08-04 20:00:00+00:00,0.111383106,0.105895725,0.052555538,0.120879307,0.173760235,0.292166926,0.15401148,0.18221722,0.163868507,0.06798275,0.09050000000000001,0.09759999999999999,0.1016,0.07045,0.138414496,0.131684407,0.169433243
2017-08-07 20:00:00+00:00,0.11023407,0.106363576,0.052369069,0.119269001,0.177142892,0.287735428,0.150819784,0.182716,0.16119403,0.06778232,0.08885,0.09672499999999999,0.09914999999999999,0.07045,0.138780825,0.132421426,0.169050763
2017-08-08 20:00:00+00:00,0.113885939,0.107145266,0.054055266,0.120293766,0.176993533,0.294381174,0.153808966,0.187473145,0.165457466,0.07214696,0.08869999999999999,0.096425,0.09785,0.0701,0.138238396,0.131355839,0.171080946
2017-08-09 20:00:00+00:00,0.116331302,0.108705358,0.055044541,0.12478813,0.180477369,0.289848888,0.153803097,0.19398797,0.170402846,0.07307936,0.09300000000000001,0.1017,0.1047,0.0696,0.146223619,0.135773509,0.177270559
2017-08-10 20:00:00+00:00,0.133342523,0.111869515,0.05596883,0.1273764,0.18943123,0.302995495,0.171296015,0.2040862,0.188024553,0.077207249,0.0959,0.104075,0.1079,0.0687,0.156315431,0.141279772,0.183278357
2017-08-11 20:00:00+00:00,0.133135091,0.11408012,0.054221974,0.128866857,0.188437533,0.303480285,0.169358771,0.20470886,0.188764911,0.08035734,0.09705,0.106675,0.10965,0.068975,0.158663378,0.141279772,0.193379791
2017-08-14 20:00:00+00:00,0.118878175,0.113157594,0.054470548,0.123590574,0.184639948,0.304248546,0.161121025,0.19893163,0.175096605,0.071486429,0.09234999999999999,0.104425,0.1048,0.069,0.148098626,0.146527848,0.184647078
2017-08-15 20:00:00+00:00,0.117058775,0.111028076,0.055017661,0.122996184,0.183667715,0.310248571,0.159678738,0.19629476,0.171680866,0.07014208,0.09140000000000001,0.099625,0.10335000000000001,0.06915,0.14537232,0.141325889,0.183518042
2017-08-16 20:00:00+00:00,0.115655525,0.111341692,0.053423238,0.124102743,0.183743272,0.317405263,0.15722123,0.1918395,0.169546923,0.070396875,0.0911,0.098375,0.10265,0.068275,0.143074533,0.139475249,0.178102558
2017-08-17 20:00:00+00:00,0.129822658,0.112343653,0.055323197,0.124418641,0.1851524,0.316572869,0.171362866,0.2012888,0.183078389,0.077453599,0.09175000000000001,0.09727499999999999,0.1024,0.0678,0.150570741,0.13912135,0.175799575
2017-08-18 20:00:00+00:00,0.130234047,0.111867984,0.054361153,0.12168523,0.1873144,0.305754766,0.170567675,0.201148257,0.175790984,0.077319047,0.09345,0.10665,0.106,0.06745,0.154979556,0.144195709,0.17897773
2017-08-21 20:00:00+00:00,0.127423789,0.112927341,0.054772143,0.12528002,0.182689969,0.309352958,0.168141841,0.195315758,0.177790635,0.075226926,0.09355000000000001,0.10037499999999999,0.1048,0.0673,0.156842512,0.144872613,0.176008762
2017-08-22 20:00:00+00:00,0.119166038,0.111404174,0.054924282,0.123744994,0.181049646,0.305262422,0.159860253,0.189780876,0.171423641,0.072287263,0.09307499999999999,0.100475,0.10485,0.0675,0.151446251,0.144946425,0.174833731
2017-08-23 20:00:00+00:00,0.124916923,0.112827692,0.05473,0.124789146,0.179672615,0.303416,0.162929107,0.191757746,0.17315763,0.074137184,0.09305,0.100825,0.10505,0.06715,0.150956749,0.142971848,0.174833731
2017-08-24 20:00:00+00:00,0.125702432,0.113387082,0.055382599,0.124515782,0.18171701,0.30592913,0.162276917,0.192448539,0.170520584,0.074716463,0.0911,0.09755000000000001,0.10369999999999999,0.06595,0.152049643,0.143880064,0.175516175
2017-08-25 20:00:00+00:00,0.123964,0.112071866,0.054768333,0.124863866,0.177527666,0.305507936,0.161034533,0.192626561,0.169908799,0.073210105,0.0891,0.096825,0.1023,0.0649,0.152175407,0.144724087,0.184021182
2017-08-28 20:00:00+00:00,0.124035753,0.111425169,0.055198992,0.129430723,0.178958769,0.313896114,0.158608984,0.192846711,0.171922923,0.072719963,0.08805,0.096175,0.1017,0.0647,0.15318003,0.14511725,0.186060976
2017-08-29 20:00:00+00:00,0.124230734,0.112595217,0.055273102,0.128176076,0.179334451,0.3112252,0.156285071,0.197545806,0.174311712,0.071718989,0.09185,0.10005000000000001,0.10585000000000001,0.065,0.156588912,0.145278124,0.185417752
2017-08-30 20:00:00+00:00,0.12411385,0.112336066,0.05582123,0.12491123,0.176317979,0.308646952,0.151748584,0.1967184,0.174445975,0.070698589,0.091425,0.0989,0.10435,0.06455,0.153712225,0.147844248,0.185707331
2017-08-31 20:00:00+00:00,0.122011692,0.112293169,0.05571143,0.128437569,0.175375384,0.303232561,0.150205938,0.19557579,0.173169553,0.069005684,0.092,0.09974999999999999,0.1051,0.06480000000000001,0.152117187,0.144539949,0.188419027
2017-09-01 20:00:00+00:00,0.120671835,0.109937756,0.056083984,0.125791895,0.175380861,0.303346177,0.152063607,0.194038971,0.164718441,0.072513052,0.09075,0.099675,0.10385,0.06480000000000001,0.147784506,0.146199463,0.190079188
2017-09-05 20:00:00+00:00,0.126684843,0.113099107,0.056520235,0.134303088,0.177397953,0.302025193,0.157989076,0.200838142,0.174335471,0.073157915,0.09785,0.10595,0.10949999999999999,0.0649,0.154723062,0.153327786,0.194217759
2017-09-06 20:00:00+00:00,0.126254024,0.1138917,0.056325376,0.132736683,0.174594169,0.30136398,0.154989076,0.199165228,0.172046292,0.073277799,0.09535,0.11185,0.10830000000000001,0.06535,0.154296286,0.155009393,0.195658477
2017-09-07 20:00:00+00:00,0.126332645,0.115658082,0.055974307,0.132976217,0.176526358,0.297422744,0.154574884,0.1981742,0.172697958,0.072076973,0.097375,0.113375,0.11044999999999999,0.06509999999999999,0.152743041,0.154742199,0.190971941
2017-09-08 20:00:00+00:00,0.12999072,0.116711282,0.057842953,0.131738737,0.185793384,0.301302455,0.159837115,0.198299266,0.178921564,0.073145936,0.09815,0.11455,0.11155,0.0649,0.153617971,0.158218321,0.188080888
2017-09-11 20:00:00+00:00,0.123596523,0.114476384,0.057552761,0.128203475,0.181356253,0.296579771,0.15481536,0.192924495,0.172553461,0.071152394,0.0949,0.1124,0.1075,0.06555,0.150121179,0.15127507,0.18133465
2017-09-12 20:00:00+00:00,0.121328586,0.112570497,0.055779405,0.119555897,0.176400738,0.299551695,0.153516538,0.190925019,0.171291353,0.069371642,0.09385,0.10975,0.10585000000000001,0.0654,0.150038142,0.147736412,0.180721352
2017-09-13 20:00:00+00:00,0.119543512,0.113133846,0.055942492,0.120327163,0.171659166,0.294693458,0.153596507,0.189291714,0.173185538,0.070564226,0.09442500000000001,0.109375,0.1058,0.06559999999999999,0.149482403,0.146717561,0.182629411
2017-09-14 20:00:00+00:00,0.11910848,0.1145708,0.0564532,0.1205772,0.16892,0.294046352,0.1563293,0.190087133,0.1703188,0.0672103,0.09465,0.10965,0.1059,0.0658,0.149747197,0.14778978,0.183633678
2017-09-15 20:00:00+00:00,0.120370722,0.112671686,0.055195743,0.1212158,0.174304013,0.291391428,0.154380311,0.188743587,0.172554222,0.065762845,0.09515000000000001,0.10945,0.10612500000000001,0.0661,0.150339776,0.149526761,0.187299263
2017-09-18 20:00:00+00:00,0.118348035,0.112342536,0.05631249,0.122116711,0.1706392,0.292221906,0.156976799,0.188460933,0.170744544,0.063926941,0.0967,0.10880000000000001,0.10707499999999999,0.06655,0.148455231,0.149526761,0.18945317
2017-09-19 20:00:00+00:00,0.119195466,0.112354779,0.055575796,0.1215252,0.170000666,0.288773866,0.1560925,0.188546838,0.170414333,0.06375005,0.09824999999999999,0.10640000000000001,0.1081,0.0659,0.143004372,0.149518346,0.180404547
2017-09-20 20:00:00+00:00,0.117901322,0.113108075,0.05367123,0.119508488,0.171767955,0.288514387,0.156409688,0.192399498,0.171828133,0.063469999,0.09630000000000001,0.10565,0.10715,0.06585,0.143632708,0.151842469,0.183751827
2017-09-21 20:00:00+00:00,0.118619148,0.113231937,0.053532164,0.118414488,0.165164844,0.286133968,0.158106533,0.188414523,0.172744977,0.063550816,0.09755000000000001,0.10464999999999999,0.10715,0.065925,0.141362243,0.151410717,0.180473829
2017-09-22 20:00:00+00:00,0.120365466,0.112923018,0.053733413,0.118811733,0.169258,0.283955142,0.159588,0.190204641,0.173998266,0.062314849,0.09765,0.10705,0.107,0.06585,0.142327657,0.151599343,0.183004687
2017-09-25 20:00:00+00:00,0.121314982,0.114112172,0.052368447,0.123320433,0.169824511,0.281314809,0.164944222,0.197625498,0.181298,0.063040249,0.09847500000000001,0.10827500000000001,0.10815,0.0665,0.143363579,0.152653782,0.187279857
2017-09-26 20:00:00+00:00,0.121754695,0.113693615,0.052980683,0.120899755,0.16719662,0.285795914,0.162795822,0.1981056,0.182486755,0.061778399,0.09755000000000001,0.11109999999999999,0.10795,0.06615,0.142416781,0.151720069,0.187289028
2017-09-27 20:00:00+00:00,0.1209456,0.113876054,0.053811259,0.1207822,0.1747945,0.288817923,0.1615928,0.195853111,0.1851177,0.060793275,0.09835,0.110175,0.10735,0.0668,0.142644344,0.154758849,0.181140739
2017-09-28 20:00:00+00:00,0.11911114,0.113126969,0.052685788,0.118088153,0.168645555,0.289612044,0.158875446,0.198370911,0.177243866,0.061321175,0.09925,0.110525,0.10830000000000001,0.0676,0.142300482,0.155703567,0.18443338
2017-09-29 20:00:00+00:00,0.117516832,0.113853583,0.052648248,0.117958466,0.170998207,0.288107609,0.15577776,0.193942266,0.171634696,0.060295566,0.0986,0.106,0.10695,0.06775,0.140694993,0.156542615,0.18267897
2017-10-02 20:00:00+00:00,0.115076031,0.11475283,0.054298218,0.12026402,0.170500522,0.290934838,0.15501064,0.193646552,0.173507744,0.06224825,0.0962,0.10550000000000001,0.1051,0.06755,0.137965611,0.158414666,0.18267897
2017-10-03 20:00:00+00:00,0.114213119,0.114289206,0.053282568,0.119741746,0.171014359,0.291916438,0.1521212,0.191665,0.172098074,0.061058283,0.093525,0.1042,0.10314999999999999,0.06745,0.138421274,0.157592203,0.187172731
2017-10-04 20:00:00+00:00,0.113507003,0.115013088,0.053075218,0.118378366,0.166971944,0.294593371,0.150965466,0.191324342,0.16987287,0.060981499,0.09275,0.102,0.1018,0.066025,0.141345367,0.158913313,0.187341808
2017-10-05 20:00:00+00:00,0.1112026,0.11566939,0.053362235,0.11908648,0.164067555,0.288662142,0.14592968,0.192584634,0.168766377,0.059927424,0.09154999999999999,0.10195,0.10099999999999999,0.066,0.138190224,0.1558709,0.187341808
2017-10-06 20:00:00+00:00,0.113261472,0.114622041,0.05309732,0.11886204,0.165991957,0.293142173,0.147822853,0.194254622,0.173122851,0.060701333,0.09165,0.101675,0.1016,0.06565,0.141036943,0.155116741,0.186847429
2017-10-09 20:00:00+00:00,0.114251022,0.114233777,0.053509023,0.120204506,0.165414325,0.296183333,0.148401866,0.194864342,0.172032818,0.0593915,0.09225,0.1026,0.10175000000000001,0.0658,0.140408607,0.155116741,0.185519787
2017-10-10 20:00:00+00:00,0.113180146,0.114544114,0.052927041,0.1200624,0.1634648,0.288877866,0.1482048,0.191091152,0.171251,0.059939299,0.09185,0.10275000000000001,0.1015,0.06505,0.142748116,0.157963649,0.184852868
2017-10-11 20:00:00+00:00,0.112777985,0.113321939,0.052886695,0.121267066,0.16344157,0.28932132,0.149016333,0.19229038,0.169920251,0.059492641,0.0922,0.10310000000000001,0.10095000000000001,0.06465,0.141351763,0.156290659,0.185187951
2017-10-12 20:00:00+00:00,0.113851772,0.11428915,0.052947849,0.12066926,0.16800487,0.287541642,0.150810613,0.192449838,0.169435992,0.060142449,0.092325,0.10255,0.1,0.0649,0.139107959,0.162257068,0.185417382
2017-10-13 20:00:00+00:00,0.112583595,0.112869833,0.051573762,0.119880799,0.162659466,0.284886047,0.148474432,0.190524212,0.166563733,0.058985687,0.0915,0.10154999999999999,0.09965,0.065025,0.137535105,0.162160699,0.185852054
2017-10-16 20:00:00+00:00,0.111285911,0.111476304,0.051678657,0.120686426,0.159832721,0.280037311,0.14906608,0.190871047,0.170094874,0.058241183,0.09029999999999999,0.10064999999999999,0.098625,0.06515,0.137942009,0.167123154,0.185047368
2017-10-17 20:00:00+00:00,0.111356709,0.110990374,0.05125537,0.117461159,0.157479362,0.280553542,0.147301466,0.191577999,0.170560807,0.05674132,0.09025,0.101675,0.09845000000000001,0.06497499999999999,0.138489957,0.162953037,0.181344714
2017-10-18 20:00:00+00:00,0.111261133,0.110399647,0.051137926,0.120375,0.160543888,0.276065199,0.1477222,0.188509612,0.171444444,0.056894,0.0911,0.10095000000000001,0.09745,0.06344999999999999,0.135342852,0.159812047,0.179307308
2017-10-19 20:00:00+00:00,0.111301103,0.109996655,0.050687151,0.119899507,0.162134288,0.279006706,0.149843766,0.192827066,0.172348444,0.056902835,0.09205,0.09974999999999999,0.09880000000000001,0.06355000000000001,0.138280914,0.155707794,0.18180613
2017-10-20 20:00:00+00:00,0.109709962,0.110432453,0.051488635,0.118976833,0.16178694,0.271066361,0.147969967,0.190054685,0.170598596,0.0545367,0.09255000000000001,0.09965,0.0998,0.0636,0.13566785,0.15685218,0.182348104
2017-10-23 20:00:00+00:00,0.112724293,0.111381428,0.052260599,0.118286153,0.160134066,0.271089476,0.15170363,0.193991787,0.176044666,0.056420524,0.0919,0.09905,0.0986,0.06465,0.135221625,0.152505637,0.181852656
2017-10-24 20:00:00+00:00,0.111300029,0.111985977,0.053499644,0.115829871,0.161546518,0.269157044,0.151335846,0.19474105,0.176825444,0.056762359,0.0913,0.09845000000000001,0.09789999999999999,0.06295,0.136949473,0.15285889,0.184317463
2017-10-25 20:00:00+00:00,0.113536622,0.11360412,0.053241523,0.115113371,0.164364592,0.271226819,0.154585776,0.197619238,0.175715003,0.059554249,0.0915,0.0983,0.09824999999999999,0.06425,0.142658247,0.157348674,0.183941717
2017-10-26 20:00:00+00:00,0.113285008,0.113721228,0.05308719,0.113227969,0.164529266,0.267641938,0.152730046,0.196524622,0.174571388,0.059617369,0.09125,0.09789999999999999,0.09847500000000001,0.0643,0.136472348,0.157413371,0.185338135
2017-10-27 20:00:00+00:00,0.109010703,0.113147701,0.052545973,0.114772794,0.164213437,0.256943688,0.146842948,0.194381844,0.172488711,0.057631755,0.09119999999999999,0.09820000000000001,0.09765,0.0639,0.13762269,0.15717893,0.188356708
2017-10-30 20:00:00+00:00,0.110967251,0.113100895,0.052491066,0.112219558,0.159688624,0.256032058,0.150096928,0.201967295,0.177713248,0.058900699,0.08985,0.0978,0.0974,0.06455,0.13561126,0.15710531,0.188493614
2017-10-31 20:00:00+00:00,0.110138577,0.11273738,0.052274104,0.113931807,0.159835677,0.255011571,0.151191407,0.200149926,0.175397766,0.059244675,0.08839999999999999,0.096,0.09625,0.0638,0.135423984,0.155741244,0.183843354
2017-11-01 20:00:00+00:00,0.111855488,0.111754404,0.052702536,0.112783297,0.163072385,0.254990158,0.1499694,0.191046552,0.173878244,0.0643917,0.0877,0.094075,0.09565,0.0632,0.13516259,0.159390522,0.185815897
2017-11-02 20:00:00+00:00,0.11278594,0.110292,0.052506255,0.110201266,0.165035,0.254026546,0.153414482,0.195227285,0.170088998,0.062077035,0.08735,0.09505000000000001,0.09605000000000001,0.0633,0.137437027,0.163115559,0.185753484
2017-11-03 20:00:00+00:00,0.1120318,0.109091371,0.050652614,0.109595338,0.166236272,0.24970019,0.151371415,0.194652844,0.17267675,0.061079319,0.0859,0.0951,0.09484999999999999,0.063125,0.136982939,0.163115559,0.184468679
2017-11-06 21:00:00+00:00,0.112646666,0.108342604,0.050694025,0.109974666,0.170594771,0.252445782,0.152081066,0.194867444,0.171358807,0.060796025,0.08625,0.09442500000000001,0.09445,0.063,0.137542774,0.16077579,0.184708419
2017-11-07 21:00:00+00:00,0.115153011,0.107911822,0.049358793,0.109641464,0.178355481,0.255921333,0.152166284,0.194222723,0.175979484,0.06058536,0.08515,0.09405,0.09050000000000001,0.0621,0.141259065,0.160365371,0.183625663
2017-11-08 21:00:00+00:00,0.116598733,0.107356838,0.047851809,0.111692515,0.179290799,0.249204809,0.150636569,0.191716565,0.173323777,0.06925675,0.08574999999999999,0.093725,0.09119999999999999,0.061849999999999995,0.141812243,0.163564312,0.185094275
2017-11-09 21:00:00+00:00,0.119024611,0.108769523,0.049269466,0.112039848,0.185380811,0.255477015,0.154629422,0.1953056,0.175216625,0.076372959,0.08814999999999999,0.09300000000000001,0.09359999999999999,0.062400000000000004,0.150165309,0.172616098,0.188874287
2017-11-10 21:00:00+00:00,0.12327037,0.110392126,0.052219761,0.112908025,0.185170603,0.257871495,0.156755333,0.193793485,0.177773844,0.070851015,0.08825,0.093475,0.0941,0.062400000000000004,0.156335222,0.179577471,0.191809467
2017-11-13 21:00:00+00:00,0.124325466,0.1090976,0.0516173,0.112629176,0.185677633,0.261324799,0.15794333,0.193182088,0.178722777,0.0727723,0.08845,0.093375,0.09465,0.0625,0.155201459,0.177181576,0.190673353
2017-11-14 21:00:00+00:00,0.125461859,0.110025206,0.051801215,0.114508297,0.190014444,0.262390685,0.162373507,0.199423066,0.179995555,0.070552499,0.08800000000000001,0.09362500000000001,0.09415,0.06605,0.159392684,0.174173106,0.190885185
2017-11-15 21:00:00+00:00,0.130383603,0.111983022,0.050533658,0.115953269,0.193747222,0.265580961,0.166910553,0.201256,0.186137837,0.070323599,0.08965,0.0935,0.0973,0.07150000000000001,0.160774995,0.177718704,0.193911247
2017-11-16 21:00:00+00:00,0.124431333,0.110993799,0.050968928,0.112928615,0.190242399,0.2600059,0.161623584,0.195790321,0.182291533,0.067523268,0.0883,0.09144999999999999,0.0962,0.067025,0.15794616,0.180953709,0.193154581
2017-11-17 21:00:00+00:00,0.124997196,0.112070038,0.050282136,0.114700523,0.186308212,0.255444952,0.162275415,0.194355915,0.17804372,0.067390031,0.08925000000000001,0.09119999999999999,0.09905,0.0678,0.157097895,0.185955399,0.193081152
2017-11-20 21:00:00+00:00,0.121895388,0.111800536,0.049507219,0.115340643,0.18691462,0.257505809,0.163099815,0.193687157,0.179746718,0.063496831,0.08869999999999999,0.09335,0.09880000000000001,0.069175,0.151820258,0.184530283,0.191903603
2017-11-21 21:00:00+00:00,0.116837499,0.11102038,0.050150057,0.11460863,0.180163011,0.25328638,0.158152115,0.196362021,0.181131377,0.063970599,0.08765,0.09275,0.09755000000000001,0.0702,0.145257523,0.180806578,0.192795436
2017-11-22 21:00:00+00:00,0.117391133,0.112086277,0.049960055,0.115707871,0.180874977,0.249260793,0.157315876,0.198698736,0.176302922,0.063458342,0.08845,0.0924,0.0968,0.0692,0.146163918,0.179209991,0.196307729
2017-11-24 18:00:00+00:00,0.116422035,0.11129673,0.050426233,0.113936799,0.181850481,0.248276209,0.1552125,0.200077284,0.175504803,0.061445415,0.0867,0.09305,0.09494999999999999,0.0692,0.144595316,0.178167807,0.196722838
2017-11-27 21:00:00+00:00,0.116866337,0.109623685,0.05061798,0.113410707,0.179003311,0.252256085,0.156881069,0.200214542,0.181248488,0.065618736,0.08715,0.09345,0.09570000000000001,0.069825,0.147258938,0.17505592,0.198667613
2017-11-28 21:00:00+00:00,0.115139009,0.109876044,0.049644495,0.114026625,0.177462386,0.251397111,0.156385687,0.203371852,0.182693288,0.066327094,0.08664999999999999,0.093975,0.09465,0.06995,0.145645902,0.176404521,0.201538903
2017-11-29 21:00:00+00:00,0.118595311,0.111084774,0.050470277,0.111303856,0.18253893,0.24915038,0.166361415,0.209901631,0.191651062,0.067787957,0.087,0.09475,0.09475,0.071675,0.147577899,0.175439899,0.201205753
2017-11-30 21:00:00+00:00,0.119095089,0.111872457,0.050102714,0.111975461,0.178872333,0.244177314,0.165018692,0.210923442,0.19089215,0.066374926,0.0872,0.09505000000000001,0.09505000000000001,0.073975,0.147963676,0.174675322,0.203455567
2017-12-01 21:00:00+00:00,0.120170992,0.111935317,0.051929638,0.113144774,0.1754444,0.238449953,0.16708043,0.214954315,0.199414503,0.072904926,0.0902,0.09595000000000001,0.09634999999999999,0.07495,0.155988201,0.174082028,0.201909039
2017-12-04 21:00:00+00:00,0.119220026,0.1117867,0.050678533,0.112197492,0.180576962,0.237892888,0.173534523,0.206064684,0.189108046,0.068860552,0.0883,0.096525,0.09535,0.075,0.149430706,0.175404123,0.197868177
2017-12-05 21:00:00+00:00,0.120542977,0.110550552,0.050997495,0.116868061,0.170518968,0.233299057,0.171176953,0.202106252,0.185328533,0.069763842,0.0875,0.097125,0.09425,0.075175,0.148409773,0.173935993,0.193416533
2017-12-06 21:00:00+00:00,0.120110074,0.11204506,0.048540593,0.114786038,0.173711592,0.240229968,0.168712358,0.208158484,0.183720507,0.069635873,0.08789999999999999,0.09939999999999999,0.095375,0.07495,0.151709929,0.176716343,0.202657992
2017-12-07 21:00:00+00:00,0.117749037,0.111275828,0.049048826,0.119297041,0.171389848,0.235156244,0.165221053,0.204865989,0.182425211,0.068551642,0.08685000000000001,0.099375,0.0951,0.07492499999999999,0.151414012,0.176505698,0.202875784
2017-12-08 21:00:00+00:00,0.114899272,0.11210328,0.048703342,0.114552184,0.169423838,0.233640314,0.161206861,0.199814631,0.179676572,0.067875236,0.08585000000000001,0.10045,0.09449999999999999,0.074625,0.148287109,0.172491125,0.198462276
2017-12-11 21:00:00+00:00,0.112782159,0.111251041,0.049044701,0.113335507,0.167369685,0.231854507,0.157348423,0.193683005,0.174464985,0.06774701,0.08275,0.099325,0.09234999999999999,0.075,0.149224033,0.170095854,0.194331836
2017-12-12 21:00:00+00:00,0.113946376,0.111580587,0.050013326,0.115274153,0.1695454,0.23863398,0.157733282,0.196370157,0.176787044,0.066837057,0.07945,0.09815,0.09015000000000001,0.07525,0.147362602,0.168072733,0.195121236
2017-12-13 21:00:00+00:00,0.114566399,0.1117546,0.049299999,0.1086947,0.1679004,0.237826295,0.157751199,0.1874036,0.1732318,0.069107,0.079525,0.09817500000000001,0.0904,0.0756,0.148641404,0.168165828,0.19280425
2017-12-14 21:00:00+00:00,0.116116695,0.111205467,0.048999604,0.11167322,0.1632768,0.239712593,0.157461749,0.189896345,0.171921159,0.069509499,0.0799,0.09757500000000001,0.0898,0.07435,0.150755251,0.168148789,0.189134016
2017-12-15 21:00:00+00:00,0.115166799,0.110933513,0.048399335,0.1082898,0.16540528,0.232928834,0.15215032,0.195074647,0.164985439,0.068025816,0.0809,0.09675,0.09035,0.07355,0.148356334,0.16724831,0.192764169
2017-12-18 21:00:00+00:00,0.113867968,0.110649467,0.048890915,0.10742184,0.16528889,0.223931866,0.1520576,0.190858009,0.1691855,0.06836025,0.0802,0.09625,0.08900000000000001,0.07475,0.140557927,0.165062244,0.192520307
2017-12-19 21:00:00+00:00,0.116344319,0.11259615,0.049471308,0.108356119,0.1664037,0.222749355,0.15503096,0.189856327,0.1775465,0.067082999,0.0801,0.09672499999999999,0.0885,0.0754,0.144421118,0.163384087,0.1911851
2017-12-20 21:00:00+00:00,0.11551325,0.113779264,0.049901255,0.106597799,0.16879475,0.222319888,0.155053,0.189564781,0.17592005,0.065954545,0.081,0.0968,0.08915,0.07525,0.148820682,0.163160613,0.193132849
2017-12-21 21:00:00+00:00,0.116262519,0.114337973,0.050059546,0.10729758,0.16494088,0.227803542,0.15372886,0.191548054,0.1698155,0.067878899,0.08070000000000001,0.098125,0.0889,0.07665,0.146251912,0.161799288,0.196212319
2017-12-22 21:00:00+00:00,0.118086816,0.115079401,0.050239687,0.1097179,0.16646415,0.222737549,0.1540876,0.189245954,0.171646499,0.069530416,0.08035,0.0978,0.08895,0.07629999999999999,0.146363278,0.160614761,0.193087823
2017-12-26 21:00:00+00:00,0.119035503,0.114447167,0.049721384,0.111554939,0.17026674,0.221492055,0.157580959,0.194781927,0.1747428,0.069993833,0.08072499999999999,0.0981,0.088875,0.076575,0.146363278,0.164433923,0.193087823
2017-12-27 21:00:00+00:00,0.118493885,0.114608427,0.048770467,0.10646453,0.168907139,0.218993485,0.15895108,0.196221956,0.17166932,0.069691249,0.0801,0.098375,0.088875,0.07667500000000001,0.146145189,0.167457467,0.196806995
2017-12-28 21:00:00+00:00,0.117170239,0.109924883,0.049260362,0.1082195,0.1705721,0.219330833,0.159456,0.192859236,0.1736303,0.06877695,0.079625,0.098,0.089375,0.07695,0.149776198,0.169338612,0.197699032
2017-12-29 21:00:00+00:00,0.119850171,0.111805229,0.048233914,0.108024525,0.173333603,0.217500768,0.162541066,0.192515875,0.171169993,0.069617083,0.079625,0.09835,0.08945,0.07644999999999999,0.15038167,0.169953067,0.196986944
2018-01-02 21:00:00+00:00,0.11603376,0.110056648,0.050003439,0.110070482,0.176411631,0.220654738,0.156845655,0.193852845,0.172847103,0.067544899,0.079725,0.09849999999999999,0.08869999999999999,0.07625,0.14749449,0.169953067,0.199831399
2018-01-03 21:00:00+00:00,0.112908754,0.109907257,0.049799949,0.111017951,0.174557599,0.225783511,0.153870287,0.192370331,0.170009986,0.064982316,0.077775,0.097375,0.0868,0.07495,0.141681135,0.169953067,0.198415163
2018-01-04 21:00:00+00:00,0.113122685,0.109055579,0.048418406,0.112073275,0.166882708,0.217879498,0.152164689,0.190053027,0.168275737,0.062830141,0.0766,0.09585,0.08525,0.073625,0.137443214,0.166528952,0.198435263
2018-01-05 21:00:00+00:00,0.112696154,0.108023981,0.04836728,0.109091327,0.166835473,0.218178742,0.150287667,0.19254114,0.168138805,0.0629757,0.0759,0.09335,0.08455,0.071,0.135786403,0.16419927,0.196656457
2018-01-08 21:00:00+00:00,0.112827028,0.106083034,0.04769611,0.108478355,0.166581833,0.216324568,0.151205041,0.192035536,0.169151558,0.064025666,0.0738,0.092125,0.08220000000000001,0.07025,0.136445997,0.16419927,0.19589275
2018-01-09 21:00:00+00:00,0.1133375,0.109319859,0.048479157,0.106907782,0.166482777,0.214067422,0.153242706,0.192382834,0.171577041,0.064195775,0.0742,0.08895,0.08275,0.0697,0.136078079,0.165764776,0.193228391
2018-01-10 21:00:00+00:00,0.112946708,0.11004255,0.047941519,0.105675996,0.167947233,0.215938495,0.155061034,0.193182245,0.172921896,0.065521,0.0786,0.0892,0.08715,0.06825,0.137394809,0.166892848,0.191906748
2018-01-11 21:00:00+00:00,0.111243299,0.110855525,0.048177984,0.107016379,0.166743671,0.215545619,0.151671094,0.191772554,0.168718,0.064638004,0.07725,0.089125,0.08625,0.0688,0.136295845,0.166425632,0.190611318
2018-01-12 21:00:00+00:00,0.111740554,0.108736397,0.047580969,0.109616662,0.167649047,0.219546168,0.15325452,0.190792145,0.169333531,0.064411066,0.07855000000000001,0.0898,0.08789999999999999,0.06915,0.135276528,0.163326349,0.186375018
2018-01-16 21:00:00+00:00,0.117831214,0.109856942,0.047849579,0.108126501,0.172063123,0.227928323,0.158366286,0.19979259,0.171640593,0.066015537,0.07780000000000001,0.0898,0.0873,0.06795,0.134991443,0.161547593,0.188311151
2018-01-17 21:00:00+00:00,0.117336571,0.108403163,0.046784849,0.108744475,0.173887633,0.236929946,0.15914002,0.20843464,0.177146827,0.066370299,0.0784,0.08960000000000001,0.08825,0.0679,0.138651934,0.16285626,0.191318999
2018-01-18 21:00:00+00:00,0.120534351,0.108479314,0.049125088,0.111259137,0.173875682,0.229597371,0.165738117,0.208237703,0.179351313,0.067201645,0.0793,0.08985,0.08929999999999999,0.06855,0.139123246,0.165380367,0.198539059
2018-01-19 21:00:00+00:00,0.1167646,0.110878638,0.049179566,0.109856351,0.169731088,0.2279884,0.161771351,0.208992799,0.178176993,0.064257199,0.0805,0.087625,0.0904,0.06845,0.13804607,0.16542654,0.20026529
2018-01-22 21:00:00+00:00,0.117418954,0.110278467,0.04919657,0.110118181,0.174616382,0.224594659,0.162138868,0.214288523,0.177203251,0.065489579,0.07894999999999999,0.08825,0.08935,0.06795,0.135917865,0.165295978,0.20528018
2018-01-23 21:00:00+00:00,0.118388436,0.108800185,0.048722476,0.109855324,0.175853024,0.223164781,0.167003793,0.21660913,0.179684696,0.06577852,0.07955,0.08855,0.08990000000000001,0.0672,0.136770411,0.166257303,0.214920145
2018-01-24 21:00:00+00:00,0.120962154,0.110437652,0.050313764,0.115503115,0.181255003,0.231925496,0.171584465,0.223723261,0.178362334,0.065412375,0.08215,0.08869999999999999,0.09205,0.0674,0.137004393,0.166445305,0.214359416
2018-01-25 21:00:00+00:00,0.121946163,0.108599882,0.049948288,0.114074655,0.181494503,0.230898,0.171206496,0.223627018,0.186794965,0.06529844,0.08405,0.0891,0.0943,0.06575,0.138554749,0.169890187,0.217051604
2018-01-26 21:00:00+00:00,0.121028209,0.110287323,0.050717823,0.112425727,0.180543098,0.2261634,0.170325791,0.232385,0.184659234,0.065523199,0.0852,0.0897,0.09315,0.0659,0.138067686,0.171309516,0.222713785
2018-01-29 21:00:00+00:00,0.129614363,0.11536615,0.053055244,0.114754931,0.190355082,0.22880998,0.178229655,0.235977068,0.194634096,0.068070949,0.08560000000000001,0.09300000000000001,0.09449999999999999,0.06625,0.141605558,0.169491965,0.22661723
2018-01-30 21:00:00+00:00,0.134554145,0.116443345,0.053291341,0.117263448,0.192653068,0.22805555,0.184404374,0.236941572,0.197735117,0.072259274,0.08725,0.09255000000000001,0.09555,0.06632500000000001,0.147436168,0.173739743,0.224948149
2018-01-31 21:00:00+00:00,0.129715999,0.1139003,0.052917294,0.114162465,0.190760552,0.22570896,0.182733793,0.230904618,0.195787241,0.071398,0.08365,0.09185,0.09317500000000001,0.06622499999999999,0.149365728,0.175978274,0.218859547
2018-02-01 21:00:00+00:00,0.129940636,0.118067647,0.057226188,0.11193971,0.192529758,0.225919839,0.177837634,0.229023725,0.194220534,0.07118598,0.08375,0.08987500000000001,0.09265000000000001,0.06645,0.153710595,0.174251061,0.215531709
2018-02-02 21:00:00+00:00,0.14375429,0.1189765,0.06157455,0.115447017,0.201519086,0.22729,0.184831793,0.235134545,0.202496379,0.0780229,0.085425,0.09385,0.0949,0.0664,0.159468295,0.173626781,0.211455343
2018-02-05 21:00:00+00:00,0.213033949,0.124657458,0.063350047,0.120767529,0.24813882,0.23660604,0.219136896,0.252360027,0.236012241,0.08616682,0.09115000000000001,0.096525,0.10085000000000001,0.06595,0.163280941,0.178663712,0.219724188
2018-02-06 21:00:00+00:00,0.169820363,0.120483858,0.062569082,0.119780606,0.223680289,0.2406816,0.206374137,0.237927945,0.209519268,0.082703319,0.09135,0.10064999999999999,0.1052,0.06845,0.184845854,0.203268591,0.241101167
2018-02-07 21:00:00+00:00,0.171576456,0.121684535,0.063978388,0.12012512,0.220022096,0.24367453,0.20136495,0.25859504,0.220690689,0.08605953,0.089825,0.09765,0.10695,0.06849999999999999,0.169936704,0.211647525,0.242007168
2018-02-08 21:00:00+00:00,0.202822727,0.13182862,0.069660058,0.127929055,0.241113213,0.252250449,0.242399896,0.266506954,0.240390344,0.1044433,0.09362500000000001,0.1012,0.11305,0.071775,0.192415497,0.209364687,0.237883926
2018-02-09 21:00:00+00:00,0.1936089,0.13260167,0.071852464,0.129709399,0.252694,0.2780941,0.22780765,0.266319845,0.237250599,0.103579374,0.097375,0.10247500000000001,0.12045,0.07552500000000001,0.207832844,0.250061746,0.25442458
2018-02-12 21:00:00+00:00,0.175256218,0.125861694,0.066961776,0.127413203,0.232125048,0.26866264,0.206693144,0.258686381,0.215550455,0.093626259,0.09105,0.10244999999999999,0.11445,0.07465,0.189072296,0.250061746,0.24165238
2018-02-13 21:00:00+00:00,0.171064931,0.121291514,0.064241999,0.128077786,0.229496613,0.274719815,0.202885206,0.255114552,0.217550751,0.088983199,0.092,0.10164999999999999,0.1134,0.07255,0.18882519,0.248701574,0.239175119
2018-02-14 21:00:00+00:00,0.159111745,0.120557188,0.061110882,0.129770051,0.221732631,0.26635782,0.190374551,0.240514745,0.203161462,0.08740431,0.09365,0.10102499999999999,0.11425,0.071975,0.170268837,0.219910371,0.233451708
2018-02-15 21:00:00+00:00,0.155489186,0.118866235,0.059435117,0.130130875,0.218078174,0.26887431,0.189433081,0.240204418,0.206802517,0.083670399,0.09532500000000001,0.09974999999999999,0.11349999999999999,0.07195,0.167642601,0.205279694,0.229278826
2018-02-16 21:00:00+00:00,0.153660236,0.115348405,0.057421117,0.130029931,0.212950055,0.268392199,0.190354344,0.2415455,0.205764648,0.080309499,0.093575,0.09895,0.11105000000000001,0.07214999999999999,0.15973594,0.194225512,0.229278826
2018-02-20 21:00:00+00:00,0.158329309,0.116474322,0.057431286,0.126368068,0.217168448,0.271297722,0.194510765,0.250297496,0.208464393,0.082500583,0.08962500000000001,0.09672499999999999,0.10735,0.07195,0.162449038,0.188354921,0.228549773
2018-02-21 21:00:00+00:00,0.1592188,0.117268123,0.059056511,0.125591827,0.210544844,0.257761099,0.19643182,0.246709596,0.208703234,0.086245933,0.088825,0.09697499999999999,0.10515000000000001,0.07205,0.161567401,0.187890164,0.226431172
2018-02-22 21:00:00+00:00,0.152285045,0.11571667,0.056160761,0.123346362,0.212077586,0.25597467,0.190883724,0.242850565,0.207677467,0.084265325,0.08985,0.098025,0.10755,0.07214999999999999,0.159281708,0.191606998,0.229544458
2018-02-23 21:00:00+00:00,0.142808,0.112850194,0.056918005,0.114711117,0.206561379,0.241127745,0.178952637,0.23559879,0.197271986,0.07843925,0.087325,0.09595000000000001,0.10535,0.0718,0.156056082,0.188792003,0.227095261
2018-02-26 21:00:00+00:00,0.137361313,0.113446317,0.0579621,0.11494987,0.201360358,0.241457386,0.174615477,0.230368571,0.194556565,0.076704274,0.085275,0.095575,0.10154999999999999,0.07047500000000001,0.14980998,0.182575257,0.220507633
2018-02-27 21:00:00+00:00,0.149679636,0.114589411,0.059130808,0.113744331,0.210276937,0.245489704,0.186685534,0.243278285,0.207554744,0.082232649,0.08315,0.09515000000000001,0.09824999999999999,0.06974999999999999,0.153970688,0.180229062,0.224424181
2018-02-28 21:00:00+00:00,0.156184263,0.114529999,0.059044175,0.115472586,0.213695109,0.254551138,0.195509465,0.24658868,0.213311255,0.084025516,0.084275,0.09390000000000001,0.10099999999999999,0.0696,0.156133438,0.184302119,0.230441355
2018-03-01 21:00:00+00:00,0.168219309,0.116230235,0.059608164,0.113648703,0.218840609,0.252453181,0.209947406,0.248665078,0.226038965,0.089386266,0.08737500000000001,0.09425,0.1072,0.06895,0.16399612,0.189960043,0.231125997
2018-03-02 21:00:00+00:00,0.161493181,0.118832272,0.062843676,0.112891734,0.215043636,0.25348519,0.2011734,0.247041177,0.215062596,0.085068125,0.09125,0.0959,0.11220000000000001,0.07005,0.179386702,0.201461599,0.239990255
2018-03-05 21:00:00+00:00,0.15656249,0.120062752,0.061800176,0.111705372,0.211419354,0.249056554,0.195646413,0.247416904,0.210817779,0.081837708,0.08810000000000001,0.093925,0.1096,0.0697,0.164922187,0.204398454,0.240965564
2018-03-06 21:00:00+00:00,0.156612695,0.119656052,0.062029286,0.114156812,0.212112715,0.2522681,0.194236572,0.243364982,0.210067965,0.082716779,0.08775000000000001,0.0917,0.107875,0.06955,0.166291616,0.199029925,0.233536242
2018-03-07 21:00:00+00:00,0.156391363,0.121869241,0.062010211,0.115847462,0.211474172,0.252497545,0.193454268,0.242724999,0.206841241,0.0805041,0.08915,0.092725,0.10915,0.0699,0.16560732,0.201717671,0.235560272
2018-03-08 21:00:00+00:00,0.1516254,0.120574432,0.060451544,0.112034224,0.2030425,0.25271442,0.190091599,0.23568963,0.204460689,0.080181399,0.08664999999999999,0.0932,0.10800000000000001,0.06915,0.160225439,0.201552339,0.2298554
2018-03-09 21:00:00+00:00,0.143449859,0.116298082,0.060383023,0.110140165,0.198608263,0.246199295,0.181239227,0.23161582,0.19817551,0.073674233,0.08315,0.091875,0.10525000000000001,0.0684,0.157084317,0.200131434,0.22594632
2018-03-12 20:00:00+00:00,0.147175409,0.117450511,0.059044588,0.109569775,0.198100322,0.247778672,0.183635922,0.228010342,0.200457206,0.073907212,0.0837,0.0908,0.10490000000000001,0.06860000000000001,0.15415861,0.195157595,0.220242792
2018-03-13 20:00:00+00:00,0.150387272,0.114346705,0.056235735,0.110101103,0.19787969,0.249799454,0.189983603,0.230014362,0.205436868,0.0740408,0.0837,0.090475,0.10414999999999999,0.06860000000000001,0.159773572,0.190828549,0.218181223
2018-03-14 20:00:00+00:00,0.155446509,0.111463264,0.056551342,0.108068327,0.195937236,0.250054209,0.193861813,0.229412113,0.206571724,0.075339966,0.08445,0.08967499999999999,0.1056,0.068325,0.160697787,0.190410886,0.218537257
2018-03-15 20:00:00+00:00,0.154007209,0.112579811,0.055081738,0.109385379,0.1990736,0.250206645,0.191827999,0.23063752,0.202102482,0.073713749,0.0859,0.090425,0.10945,0.06695000000000001,0.158809062,0.189558922,0.220288887
2018-03-16 20:00:00+00:00,0.15275879,0.112831207,0.055815605,0.107997862,0.193378045,0.249413068,0.188407565,0.229274046,0.200366672,0.077001916,0.08595000000000001,0.090725,0.1118,0.06684999999999999,0.152040575,0.190669651,0.218841265
2018-03-19 20:00:00+00:00,0.160641345,0.118039318,0.055581981,0.111334054,0.201878545,0.250989636,0.199598254,0.234582887,0.207680072,0.075577499,0.0882,0.09022500000000001,0.11449999999999999,0.066925,0.161264842,0.193279871,0.214777326
2018-03-20 20:00:00+00:00,0.159041772,0.116184409,0.055030045,0.109779943,0.200346063,0.253596827,0.196497136,0.232185267,0.206462659,0.074039624,0.086,0.090675,0.11255000000000001,0.06705,0.155128157,0.192838251,0.219558239
2018-03-21 20:00:00+00:00,0.158826713,0.115681981,0.055654922,0.110521436,0.201389654,0.2542011,0.194761931,0.22489125,0.20447409,0.072786583,0.08375,0.08992499999999999,0.1107,0.06705,0.155821726,0.192838251,0.221071288
2018-03-22 20:00:00+00:00,0.174731931,0.114858709,0.055983343,0.115238409,0.212676244,0.257569659,0.213518611,0.239218518,0.223215586,0.0787412,0.086175,0.08935,0.1124,0.067075,0.168506735,0.183477412,0.224914648
2018-03-23 20:00:00+00:00,0.186831,0.1118561,0.0576104,0.1204021,0.219015,0.26505109,0.2220825,0.252697787,0.224606399,0.080860799,0.0875,0.092325,0.1148,0.068175,0.172985964,0.20218461,0.236753031
2018-03-26 20:00:00+00:00,0.1737204,0.1110863,0.056274185,0.11609944,0.211370099,0.261791113,0.209528,0.242196912,0.222277,0.075698925,0.08515,0.092275,0.11234999999999999,0.0679,0.174378921,0.208762211,0.231036989
2018-03-27 20:00:00+00:00,0.185668079,0.112401471,0.055853055,0.114728979,0.221695199,0.265105709,0.22938344,0.246182893,0.22717328,0.07896107,0.08515,0.092125,0.11055,0.06785000000000001,0.166158251,0.197751665,0.230558099
2018-03-28 20:00:00+00:00,0.18798272,0.107488122,0.05428434,0.11543378,0.2241365,0.262135436,0.2340555,0.251823921,0.23230712,0.07984215,0.08522500000000001,0.091775,0.1121,0.068825,0.165914927,0.204898606,0.240538076
2018-03-29 20:00:00+00:00,0.178542,0.10996316,0.050479807,0.11325332,0.21134048,0.254843163,0.221937,0.24423875,0.22197936,0.072027359,0.084625,0.091425,0.1112,0.0693,0.157937164,0.203634379,0.238546239
2018-04-02 20:00:00+00:00,0.192489599,0.11201354,0.054855937,0.1171456,0.224505799,0.263844581,0.2377584,0.253934026,0.2338604,0.0852036,0.08305,0.09210000000000002,0.11,0.069275,0.157937164,0.197069151,0.238546239
2018-04-03 20:00:00+00:00,0.183128051,0.111428222,0.054232488,0.114819603,0.207134488,0.259282627,0.229520137,0.249424096,0.225765,0.076954199,0.0824,0.092525,0.10880000000000001,0.06974999999999999,0.160658638,0.198686029,0.233785303
2018-04-04 20:00:00+00:00,0.17508561,0.110447454,0.055510098,0.116266523,0.209523128,0.254209718,0.218600524,0.245633156,0.233393724,0.07743066,0.0821,0.092775,0.10859999999999999,0.06974999999999999,0.165274011,0.19822467,0.236905851
2018-04-05 20:00:00+00:00,0.169815534,0.108590904,0.053411609,0.115373333,0.209115328,0.251205536,0.211001406,0.2392388,0.221682068,0.073523,0.08134999999999999,0.091775,0.107,0.0696,0.15443187,0.197142133,0.236905851
2018-04-06 20:00:00+00:00,0.18282931,0.109414,0.053482222,0.114729106,0.218252971,0.2570647,0.223209827,0.24363804,0.223208379,0.07557251,0.08055,0.09202500000000001,0.1061,0.0693,0.157945459,0.200574286,0.232615841
2018-04-09 20:00:00+00:00,0.181340508,0.105153358,0.051368206,0.117129549,0.211194825,0.252982413,0.21975337,0.241236293,0.226629517,0.070254599,0.080275,0.09182499999999999,0.10545,0.06915,0.154172669,0.195447581,0.226543138
2018-04-10 20:00:00+00:00,0.177130517,0.101982222,0.052319353,0.115945257,0.2141428,0.261203806,0.212235596,0.236816718,0.222358275,0.069375599,0.07995000000000001,0.08935,0.10565,0.06845,0.150215689,0.195425774,0.226026812
2018-04-11 20:00:00+00:00,0.177215758,0.101599874,0.051580711,0.122325888,0.215023377,0.262491227,0.214059931,0.235086074,0.216772103,0.068905719,0.0797,0.088675,0.1063,0.06775,0.153033815,0.189895393,0.226288823
2018-04-12 20:00:00+00:00,0.169185965,0.099872372,0.051654133,0.120432003,0.213395082,0.26092939,0.207227862,0.232828956,0.214332275,0.06786638,0.079,0.08895,0.10605,0.067675,0.148212348,0.190399839,0.225579485
2018-04-13 20:00:00+00:00,0.162520562,0.098723518,0.051497086,0.121676,0.208291214,0.268150363,0.203470396,0.230554749,0.208292448,0.068104489,0.0783,0.087875,0.10485,0.066825,0.146310866,0.184934219,0.220072543
2018-04-16 20:00:00+00:00,0.154904993,0.10055134,0.051155337,0.122659925,0.197999238,0.268499995,0.193548027,0.226016012,0.2066108,0.066951549,0.0779,0.0872,0.10365,0.06665,0.141948102,0.178795923,0.219357536
2018-04-17 20:00:00+00:00,0.145648379,0.098362143,0.050707683,0.122471547,0.193096326,0.264034572,0.185557586,0.223301712,0.201511503,0.06341988,0.07725,0.08705,0.1015,0.06662499999999999,0.136727453,0.174174214,0.213115593
2018-04-18 20:00:00+00:00,0.143971689,0.099724407,0.050227439,0.125911761,0.194891985,0.268014918,0.184236244,0.215702793,0.193932744,0.069200639,0.0768,0.084575,0.09849999999999999,0.0666,0.135544307,0.172911746,0.204352358
2018-04-19 20:00:00+00:00,0.148198527,0.1008268,0.051005577,0.123033238,0.196368825,0.268298427,0.189040096,0.214822487,0.193215948,0.0691328,0.0765,0.08502499999999999,0.09849999999999999,0.0669,0.137141751,0.171612515,0.203511551
2018-04-20 20:00:00+00:00,0.153095258,0.10219157,0.051802596,0.119804677,0.200693555,0.267171477,0.195284441,0.216119259,0.19831691,0.069623559,0.078,0.086,0.1009,0.0662,0.136094001,0.16982647,0.206539469
2018-04-23 20:00:00+00:00,0.151626508,0.10420953,0.052099057,0.117056889,0.192862715,0.266372,0.195237784,0.213508193,0.195500482,0.0713622,0.08175,0.08725,0.1027,0.06662499999999999,0.134180102,0.168504017,0.204648649
2018-04-24 20:00:00+00:00,0.15810851,0.106993833,0.053844666,0.1168268,0.205805186,0.271013304,0.20650331,0.219437417,0.200046024,0.076029825,0.08109999999999999,0.08737500000000001,0.09985,0.06675,0.13427746,0.166785352,0.202354421
2018-04-25 20:00:00+00:00,0.15787881,0.106940685,0.056179961,0.117631774,0.201003613,0.264408177,0.203344258,0.221935637,0.202665958,0.074634499,0.081475,0.087225,0.1003,0.0679,0.138380657,0.166738666,0.208058733
2018-04-26 20:00:00+00:00,0.150285248,0.101523352,0.053371777,0.115335741,0.199898541,0.253007516,0.190390448,0.21286901,0.196484055,0.0687055,0.07917500000000001,0.08744999999999999,0.0993,0.06684999999999999,0.133667595,0.168321193,0.212138584
2018-04-27 20:00:00+00:00,0.150891422,0.098298642,0.052408228,0.112572068,0.194554165,0.251701475,0.192544379,0.21241695,0.191091086,0.067462479,0.077575,0.086375,0.09734999999999999,0.067075,0.133467206,0.166130186,0.208312893
2018-04-30 20:00:00+00:00,0.153770882,0.098621428,0.052734857,0.111335024,0.193596,0.255132459,0.193938031,0.20696237,0.193803862,0.064609499,0.077275,0.08522500000000001,0.09605000000000001,0.06684999999999999,0.1329164,0.166130186,0.201683887
2018-05-01 20:00:00+00:00,0.151758555,0.099637939,0.055358834,0.113448525,0.194642968,0.260537398,0.189563448,0.207718962,0.19439272,0.068224599,0.078975,0.085525,0.09795,0.0668,0.1329164,0.163214227,0.201683887
2018-05-02 20:00:00+00:00,0.15405702,0.099918,0.055346871,0.112449844,0.191549496,0.259009436,0.191354979,0.207272031,0.195607448,0.065921284,0.07855000000000001,0.08685000000000001,0.09685,0.06715,0.132219341,0.161001183,0.202472955
2018-05-03 20:00:00+00:00,0.153047413,0.101036,0.054860799,0.110171013,0.193798213,0.259545977,0.188731889,0.209231687,0.19552462,0.0680544,0.079275,0.086525,0.09880000000000001,0.0668,0.136007281,0.161001183,0.206961208
2018-05-04 20:00:00+00:00,0.147694637,0.098296147,0.053211728,0.109685593,0.192464986,0.251649157,0.182645596,0.209019168,0.195982744,0.066642709,0.07877499999,0.08595000000000001,0.09815,0.0665,0.131327571,0.161001183,0.206845461
2018-05-07 20:00:00+00:00,0.148780482,0.097346095,0.054896771,0.109743065,0.194891906,0.256648786,0.180203655,0.210482812,0.194361503,0.0640925,0.07915,0.086325,0.099525,0.0667,0.130152466,0.158681883,0.207598248
2018-05-08 20:00:00+00:00,0.147679482,0.098881136,0.054415,0.110548362,0.197849834,0.253597259,0.179900875,0.208204185,0.191738,0.066293179,0.07917500000000001,0.08682499999999999,0.10022500000000001,0.06745,0.132899731,0.156732026,0.202186769
2018-05-09 20:00:00+00:00,0.142023981,0.09923186,0.054526393,0.108463906,0.186277077,0.252857359,0.17649981,0.20243095,0.210614465,0.063176419,0.0793,0.088325,0.0998,0.06724999999999999,0.130586956,0.157014548,0.201291257
2018-05-10 20:00:00+00:00,0.137420696,0.096845952,0.05409919,0.108397206,0.196096448,0.254652196,0.170833793,0.199499968,0.190807613,0.058644759,0.0784,0.0872,0.09822499999999999,0.0674,0.129743257,0.156296355,0.198312804
2018-05-11 20:00:00+00:00,0.1338367,0.09599408,0.053523539,0.11035,0.189807499,0.255758442,0.16957145,0.1946668,0.185640999,0.058671799,0.07625,0.084525,0.09570000000000001,0.0672,0.128815005,0.157660035,0.196042247
2018-05-14 20:00:00+00:00,0.131057568,0.097068888,0.054437666,0.107386134,0.186929437,0.256820422,0.167862379,0.193476115,0.185072703,0.057855,0.0756,0.08425,0.09405,0.06775,0.126978321,0.15338479,0.19426887
2018-05-15 20:00:00+00:00,0.137005517,0.100730714,0.055848114,0.107161889,0.191502462,0.257953278,0.173782586,0.197572675,0.192188213,0.06387026,0.077725,0.0842,0.09449999999999999,0.06775,0.127011064,0.151217311,0.192299231
2018-05-16 20:00:00+00:00,0.132275744,0.10254892,0.057164671,0.104369775,0.187891248,0.257805183,0.171263793,0.194417625,0.188301048,0.05943148,0.0784,0.08635,0.09475,0.0679,0.128710096,0.153905395,0.191707666
2018-05-17 20:00:00+00:00,0.132923848,0.104426219,0.056547779,0.103941351,0.187474439,0.255723811,0.171994568,0.196214646,0.195359862,0.05902124,0.078025,0.08470000000000001,0.09365,0.06955,0.127586811,0.151647326,0.191547829
2018-05-18 20:00:00+00:00,0.134580068,0.103629347,0.055901504,0.103242262,0.187085641,0.25126756,0.173895431,0.196394228,0.194825448,0.063883199,0.07730000000000001,0.084475,0.09380000000000001,0.0703,0.130584834,0.151037169,0.190713299
2018-05-21 20:00:00+00:00,0.129592732,0.103681246,0.05647723,0.104483358,0.183480884,0.255300975,0.170149658,0.197708399,0.191198482,0.0576212,0.076925,0.08555,0.0933,0.07035,0.130812424,0.150925641,0.18991909
2018-05-22 20:00:00+00:00,0.131839862,0.103280684,0.056107573,0.103522106,0.186080775,0.2566828,0.170268524,0.198303243,0.186390379,0.058540939,0.07665,0.08445,0.09315,0.07095,0.127935595,0.150300699,0.18991909
2018-05-23 20:00:00+00:00,0.129720732,0.1025626,0.054650533,0.105331813,0.184854386,0.256308188,0.167974941,0.201969321,0.189156162,0.057026586,0.079,0.085775,0.09475,0.071,0.135465704,0.154578332,0.194505311
2018-05-24 20:00:00+00:00,0.129760758,0.10062099,0.055437542,0.105649668,0.18905,0.253121545,0.167790151,0.202608634,0.191358937,0.05699826,0.08025,0.08502499999999999,0.09734999999999999,0.0708,0.137722574,0.159607227,0.193078575
2018-05-25 20:00:00+00:00,0.131412137,0.101622177,0.054060803,0.101089091,0.198237593,0.264368826,0.168210086,0.202151151,0.191490637,0.058308504,0.078375,0.084875,0.0967,0.0704,0.138417548,0.154512814,0.192819087
2018-05-29 20:00:00+00:00,0.144164968,0.109050342,0.057654385,0.107106903,0.202234362,0.267198445,0.174407758,0.209811992,0.201278482,0.069507043,0.082775,0.08810000000000001,0.10220000000000001,0.07175,0.158566157,0.151890854,0.192868607
2018-05-30 20:00:00+00:00,0.137741462,0.107530355,0.056891536,0.101737275,0.189416841,0.262637629,0.169245289,0.203172614,0.195940275,0.064357452,0.08275,0.09140000000000001,0.10485,0.07085,0.155012787,0.161613304,0.196348105
2018-05-31 20:00:00+00:00,0.141228227,0.107152907,0.056090277,0.100706379,0.200830427,0.263831672,0.169836151,0.200736536,0.19193491,0.067304069,0.08105000000000001,0.0894,0.10365,0.070725,0.152385329,0.155925364,0.191545292
2018-06-01 20:00:00+00:00,0.134019351,0.105933714,0.057062176,0.100674339,0.197237965,0.264891024,0.162845248,0.196321034,0.18375991,0.068633213,0.07877499999,0.087625,0.099225,0.069775,0.142466926,0.156363072,0.189265607
2018-06-04 20:00:00+00:00,0.131825403,0.104527122,0.056451222,0.099813062,0.197241131,0.268529127,0.159615524,0.198308712,0.183798551,0.067095717,0.0775,0.08535,0.097075,0.0698,0.137084368,0.151213682,0.187168214
2018-06-05 20:00:00+00:00,0.130370517,0.104864265,0.058111233,0.101584232,0.195373931,0.26998078,0.159012712,0.196551307,0.187237427,0.065418134,0.07735,0.085475,0.09699999999999999,0.0691,0.138461346,0.150093504,0.18492825
2018-06-06 20:00:00+00:00,0.126720027,0.104651457,0.058006352,0.101833406,0.190228855,0.267362413,0.159696793,0.193048797,0.184211862,0.064780139,0.0775,0.085625,0.09685,0.06935,0.139071567,0.149284554,0.182566693
2018-06-07 20:00:00+00:00,0.128410779,0.106536382,0.058149242,0.101826634,0.190079379,0.263304885,0.164530263,0.193135958,0.193340724,0.064002265,0.07865,0.085525,0.09815,0.06965,0.139060842,0.150108851,0.181342311
2018-06-08 20:00:00+00:00,0.128468213,0.107245452,0.058175079,0.100384144,0.189386172,0.256455163,0.165254,0.195857356,0.193033737,0.065025817,0.0803,0.086325,0.10307499999999999,0.0696,0.142484018,0.152905389,0.186546814
2018-06-11 20:00:00+00:00,0.129133097,0.109790614,0.060223671,0.101056463,0.184554977,0.252097147,0.167131086,0.195353243,0.193065537,0.063417052,0.0783,0.086975,0.101825,0.06935,0.137322199,0.151436542,0.18193102
2018-06-12 20:00:00+00:00,0.12965436,0.109126225,0.059762253,0.103218986,0.187198137,0.25236036,0.166653489,0.194033151,0.192681724,0.063287634,0.0771,0.08537499999999999,0.1017,0.06895,0.135804008,0.150452042,0.179780989
2018-06-13 20:00:00+00:00,0.132262697,0.108725555,0.058440644,0.100707751,0.177705796,0.25292459,0.167645144,0.193344209,0.195084448,0.064567373,0.07725,0.085775,0.10154999999999999,0.0687,0.133408966,0.148017977,0.179100433
2018-06-14 20:00:00+00:00,0.129230795,0.105356014,0.058134057,0.097458331,0.181078803,0.253567259,0.165420965,0.192679909,0.196283496,0.064462739,0.07675,0.08535,0.10145,0.0688,0.126940278,0.149555572,0.182339356
2018-06-15 20:00:00+00:00,0.1322032,0.106064466,0.058403603,0.100889251,0.191207956,0.260158114,0.166771603,0.193193178,0.193037068,0.063254799,0.07705000000000001,0.087625,0.10275000000000001,0.06885,0.13061498,0.148075488,0.181132721
2018-06-18 20:00:00+00:00,0.132959218,0.105723765,0.058141837,0.098188731,0.190375896,0.262493944,0.170252948,0.19658506,0.198124024,0.063923347,0.0776,0.08932499999999999,0.1054,0.06895,0.136134187,0.150268904,0.181132721
2018-06-19 20:00:00+00:00,0.137848269,0.107207939,0.058259769,0.102443581,0.193029379,0.266445645,0.1757387,0.207196358,0.206841068,0.064776213,0.08115,0.09285,0.11135,0.068925,0.140921717,0.160704805,0.190926187
2018-06-20 20:00:00+00:00,0.136209069,0.107661055,0.058711255,0.101203502,0.192428286,0.267022013,0.173218197,0.200866331,0.201719131,0.066018573,0.079,0.09315,0.1103,0.0697,0.138270138,0.154922254,0.184445542
2018-06-21 20:00:00+00:00,0.140406837,0.106686348,0.058241162,0.099536511,0.202603351,0.267495773,0.18359372,0.21937253,0.206438803,0.066675913,0.07985,0.09295,0.10855000000000001,0.06955,0.144486909,0.153244922,0.18818982
2018-06-22 20:00:00+00:00,0.1397773,0.1070529,0.05831,0.099782,0.1954387,0.257683363,0.1820998,0.214186,0.202834,0.0629177,0.079525,0.091625,0.10845,0.068925,0.139819464,0.156495821,0.185915766
2018-06-25 20:00:00+00:00,0.1514752,0.107386777,0.057747533,0.10240602,0.20129434,0.259732327,0.1946434,0.223316111,0.20823672,0.067804311,0.081075,0.091425,0.10952500000000001,0.068725,0.149450365,0.157784118,0.191758126
2018-06-26 20:00:00+00:00,0.1479738,0.106386577,0.056705177,0.099284,0.19977434,0.25409039,0.18972212,0.217961333,0.203589,0.067968666,0.0802,0.090725,0.10994999999999999,0.06735000000000001,0.149188685,0.159025255,0.190876786
2018-06-27 20:00:00+00:00,0.1550643,0.106557816,0.056941466,0.10060088,0.20217368,0.264983508,0.20061336,0.231513033,0.2149256,0.071626333,0.080825,0.089575,0.11105000000000001,0.0672,0.148979299,0.159565844,0.200897419
2018-06-28 20:00:00+00:00,0.150617299,0.106393711,0.056501966,0.09971464,0.196631879,0.262752091,0.195398059,0.228191466,0.2051495,0.073291111,0.07919999999999999,0.091625,0.112175,0.067,0.155196326,0.163458591,0.201151835
2018-06-29 20:00:00+00:00,0.1483208,0.106450622,0.056561266,0.1014255,0.214917399,0.258874459,0.1921685,0.223148094,0.205332,0.073751577,0.0789,0.090325,0.10952500000000001,0.0667,0.149771784,0.162415514,0.201865155
2018-07-02 20:00:00+00:00,0.147851153,0.107932666,0.057394933,0.103486184,0.200701938,0.266987744,0.191787723,0.232270466,0.209545492,0.072798599,0.07855000000000001,0.090425,0.1096,0.06709999999999999,0.153653759,0.168854567,0.201865155
2018-07-03 17:00:00+00:00,0.150233292,0.110712777,0.056563355,0.103897384,0.199457107,0.27125354,0.196567692,0.232045288,0.2083307,0.071593822,0.0788,0.08967499999999999,0.10984999999999999,0.067,0.147613206,0.167252991,0.210929728
2018-07-05 20:00:00+00:00,0.143658769,0.112112611,0.055642222,0.101954115,0.199171253,0.270555357,0.190626153,0.235678777,0.206209392,0.071310277,0.07595,0.088025,0.10737500000000001,0.06695000000000001,0.146380045,0.166419546,0.213529009
2018-07-06 20:00:00+00:00,0.138716338,0.1118275,0.055154299,0.102211953,0.201410846,0.267986373,0.182590904,0.222457099,0.200338369,0.06671235,0.0746,0.08712500000000001,0.104575,0.06684999999999999,0.143334477,0.161600273,0.2053561
2018-07-09 20:00:00+00:00,0.132375907,0.112385777,0.053545111,0.097166461,0.190703446,0.265390859,0.177610576,0.219420166,0.190470315,0.066620844,0.0731,0.085825,0.101525,0.067175,0.139841075,0.156795566,0.203342852
2018-07-10 20:00:00+00:00,0.131116032,0.110660805,0.054099144,0.100189138,0.18912123,0.262117003,0.177461446,0.218593655,0.189692553,0.065138272,0.07455,0.084625,0.1009,0.06684999999999999,0.13303571,0.153011788,0.193469665
2018-07-11 20:00:00+00:00,0.134961,0.109819599,0.053394,0.101827415,0.203243138,0.275786973,0.180322153,0.223478666,0.196413769,0.067210733,0.07644999999999999,0.08727499999999999,0.10372500000000001,0.066375,0.141043878,0.156228091,0.198367096
2018-07-12 20:00:00+00:00,0.131145707,0.104715816,0.053043388,0.099475046,0.193206,0.273490344,0.1736455,0.2140327,0.19243023,0.063269944,0.0781,0.0877,0.10522500000000001,0.066,0.135995464,0.155094601,0.196931659
2018-07-13 20:00:00+00:00,0.12923496,0.104638888,0.052591888,0.102247261,0.191107569,0.270896357,0.17443323,0.214048111,0.187269215,0.0631182,0.0762,0.086775,0.1017,0.066,0.134685118,0.15064786,0.19618942
2018-07-16 20:00:00+00:00,0.130652676,0.103653883,0.053030199,0.103010615,0.191661415,0.280875973,0.180556153,0.213179966,0.190794369,0.062855416,0.0759,0.086375,0.100775,0.0662,0.133745944,0.15064786,0.190401667
2018-07-17 20:00:00+00:00,0.126664307,0.103156799,0.052495233,0.102246,0.19076823,0.273149721,0.174068446,0.210676866,0.188818961,0.061295644,0.07665,0.085675,0.10039999999999999,0.065525,0.132701581,0.150663104,0.194502512
2018-07-18 20:00:00+00:00,0.12657493,0.101486538,0.052142816,0.103585307,0.187244884,0.267660655,0.175199615,0.212590133,0.189556653,0.060551433,0.07665,0.0864,0.100775,0.0659,0.129779425,0.149422685,0.194839573
2018-07-19 20:00:00+00:00,0.13047,0.1031554,0.052202599,0.109493,0.189057,0.2694818,0.17841,0.214994,0.192727599,0.0623308,0.0774,0.08727499999999999,0.10067500000000001,0.06575,0.1309904,0.151427593,0.195789336
2018-07-20 20:00:00+00:00,0.130459057,0.102817861,0.053414432,0.108670075,0.18986095,0.260110566,0.178148971,0.216116705,0.191396123,0.061588747,0.07875,0.08712500000000001,0.103225,0.06585,0.133528808,0.153467279,0.193670814
2018-07-23 20:00:00+00:00,0.128348467,0.103789721,0.054895921,0.110032105,0.188098346,0.260280691,0.172601657,0.215904326,0.194138547,0.060361742,0.08039999999999999,0.08647500000000001,0.105125,0.06605,0.134023627,0.158618133,0.194429786
2018-07-24 20:00:00+00:00,0.126881947,0.103183736,0.055161263,0.1035216,0.18167568,0.259572824,0.173486086,0.212647294,0.190372805,0.059864278,0.079825,0.085475,0.10492499999999999,0.06585,0.130419528,0.157077477,0.190152116
2018-07-25 20:00:00+00:00,0.124876789,0.10286141,0.054144421,0.105347494,0.175201636,0.256080506,0.171073431,0.207204121,0.18536881,0.059053094,0.07842500000000001,0.084175,0.102775,0.0653,0.131497939,0.153535715,0.196017591
2018-07-26 20:00:00+00:00,0.126342423,0.104117668,0.054717626,0.103520928,0.183050252,0.252858703,0.173092199,0.2105096,0.187078921,0.057085,0.07875,0.08289999999999999,0.10185000000000001,0.06445000000000001,0.127458887,0.155273538,0.195441211
2018-07-27 20:00:00+00:00,0.127495394,0.102329336,0.053400926,0.102748789,0.181350147,0.25340206,0.181793263,0.21359111,0.186952836,0.0575938,0.07844999999999999,0.081825,0.102225,0.0644,0.125153427,0.153932645,0.191883968
2018-07-30 20:00:00+00:00,0.132149385,0.104244881,0.053722789,0.101296105,0.179737284,0.257755478,0.185233568,0.211392073,0.191738207,0.056055926,0.07855000000000001,0.08195000000000001,0.10205,0.06455,0.128282632,0.155141359,0.197237309
2018-07-31 20:00:00+00:00,0.126914661,0.102682473,0.053830842,0.103246368,0.180352168,0.268817793,0.179847442,0.208047684,0.185444136,0.058582631,0.07519999999999999,0.08105000000000001,0.09945,0.064225,0.129885141,0.151586953,0.192446914
2018-08-01 20:00:00+00:00,0.1293076,0.102778257,0.054724573,0.099526452,0.180416252,0.269511053,0.176547094,0.209811105,0.1881795,0.060780594,0.0765,0.081225,0.09865,0.06415,0.132260653,0.147799794,0.192607359
2018-08-02 20:00:00+00:00,0.126773743,0.104194821,0.054393684,0.102820147,0.180292784,0.265997575,0.167226715,0.213649215,0.193510633,0.060556947,0.07695,0.08227499999999999,0.1008,0.0635,0.138050819,0.15070718,0.19982423
2018-08-03 20:00:00+00:00,0.124639706,0.102994594,0.05354771,0.104245473,0.180495378,0.265169864,0.164225063,0.211107221,0.190440947,0.059590631,0.07665,0.08220000000000001,0.102325,0.0633,0.135520119,0.149533574,0.196740354
2018-08-06 20:00:00+00:00,0.122946263,0.103629084,0.053045094,0.103125957,0.184674147,0.264707319,0.161698331,0.211162126,0.190159568,0.058470289,0.0759,0.08352499999999999,0.100625,0.06355000000000001,0.133948259,0.149337925,0.19652922
2018-08-07 20:00:00+00:00,0.12053945,0.102244763,0.052639542,0.104680331,0.179514936,0.261790576,0.160142184,0.207599705,0.187857405,0.057787947,0.07564999999000001,0.081075,0.09985,0.0638,0.131362961,0.146669042,0.193414669
2018-08-08 20:00:00+00:00,0.121732336,0.103133257,0.052570968,0.107392042,0.179935252,0.270539502,0.160825442,0.208191447,0.186329821,0.061539,0.0758,0.08065,0.09972500000000001,0.063875,0.131676202,0.146516165,0.192439675
2018-08-09 20:00:00+00:00,0.122677845,0.100863563,0.052517144,0.106495584,0.183950368,0.265623467,0.161339507,0.205074505,0.187086178,0.061625957,0.07635,0.081525,0.10022500000000001,0.06480000000000001,0.130411463,0.146285556,0.191620312
2018-08-10 20:00:00+00:00,0.128324993,0.101630242,0.053033852,0.109145542,0.179720842,0.262218769,0.165520473,0.212344663,0.19662461,0.05831741,0.0805,0.085575,0.10535,0.0649,0.140214191,0.149817773,0.19526276
2018-08-13 20:00:00+00:00,0.1333178,0.102688531,0.053607344,0.11089001,0.186758321,0.265763691,0.169685297,0.215430789,0.200531847,0.057396142,0.0818,0.0868,0.110875,0.06555,0.142870318,0.157166321,0.19946744
2018-08-14 20:00:00+00:00,0.128557322,0.102287652,0.053427284,0.106730552,0.184690105,0.262382469,0.165689526,0.21229661,0.196488168,0.056025515,0.07965,0.08650000000000001,0.10817500000000001,0.06535,0.14532375,0.148981479,0.19613944
2018-08-15 20:00:00+00:00,0.1333109,0.1038126,0.0541252,0.1120544,0.205685,0.267440633,0.17491295,0.225579199,0.20717705,0.059509099,0.0824,0.08775000000000001,0.11105000000000001,0.06625,0.151363103,0.152090241,0.204147888
2018-08-16 20:00:00+00:00,0.129506205,0.103265542,0.054119431,0.111627473,0.196425562,0.267337264,0.175680252,0.217900242,0.194538156,0.056726557,0.0808,0.08682499999999999,0.11135,0.06615,0.146954675,0.153956549,0.20503196
2018-08-17 20:00:00+00:00,0.126956548,0.102789505,0.054413921,0.109020294,0.192706773,0.266382185,0.175261078,0.221197351,0.197710672,0.056961178,0.08025,0.085575,0.11025,0.06634999999999999,0.144760305,0.152921337,0.201923529
2018-08-20 20:00:00+00:00,0.126348733,0.10249881,0.05456481,0.109203363,0.186622,0.265836916,0.174843642,0.215828179,0.195083415,0.056961642,0.07905000000000001,0.08522500000000001,0.1082,0.0663,0.136635733,0.153072495,0.199315016
2018-08-21 20:00:00+00:00,0.126691736,0.100917063,0.054721473,0.106269942,0.185170039,0.267217119,0.17351985,0.208665258,0.19040121,0.056296626,0.078,0.084675,0.1063,0.066075,0.13402585,0.149761629,0.19637374
2018-08-22 20:00:00+00:00,0.126747499,0.101493178,0.053788447,0.106166657,0.187845131,0.266384451,0.172148068,0.206003346,0.190946363,0.053573873,0.07844999999999999,0.08407500000000001,0.1061,0.066825,0.134894518,0.148947609,0.197452574
2018-08-23 20:00:00+00:00,0.127736018,0.102026565,0.053461781,0.105755263,0.186117144,0.26268065,0.171593742,0.21283157,0.194838073,0.055903652,0.0782,0.0842,0.10654999999999999,0.0672,0.133564253,0.149939024,0.195774612
2018-08-24 20:00:00+00:00,0.125865786,0.099337794,0.052239557,0.105157894,0.184308968,0.2595106,0.167461805,0.209575284,0.189660563,0.054269463,0.07719999999999999,0.084575,0.10585000000000001,0.06715,0.131323352,0.148824679,0.196243317
2018-08-27 20:00:00+00:00,0.124946713,0.10048201,0.052545231,0.105294268,0.183670624,0.255719354,0.165488257,0.211107965,0.190674484,0.056796905,0.07605,0.083275,0.10339999999999999,0.0673,0.128037213,0.150228467,0.197876371
2018-08-28 20:00:00+00:00,0.126856524,0.100227021,0.052814968,0.104811578,0.185018036,0.255594554,0.167198256,0.211028012,0.189886805,0.055753215,0.075275,0.081075,0.10055,0.0672,0.13033515,0.150867503,0.196886406
2018-08-29 20:00:00+00:00,0.126572348,0.100266215,0.052655921,0.101986684,0.181647786,0.254163864,0.166357663,0.211348324,0.190626859,0.056428063,0.076,0.08102499999999999,0.1005,0.06745,0.130290473,0.149433809,0.196906259
2018-08-30 20:00:00+00:00,0.130915121,0.1002948,0.052882973,0.103981557,0.184489368,0.257983225,0.172595978,0.21753675,0.200972042,0.054136184,0.07780000000000001,0.081175,0.10467499999999999,0.0679,0.135563112,0.151506966,0.198806548
2018-08-31 20:00:00+00:00,0.128652391,0.10168165,0.053016978,0.102217328,0.184424144,0.255180349,0.174599736,0.217982184,0.197384728,0.057798631,0.07730000000000001,0.082925,0.107225,0.0681,0.14098909,0.151423797,0.19760288
2018-09-04 20:00:00+00:00,0.131442784,0.101966705,0.053951094,0.10515291,0.186963894,0.258277535,0.176579926,0.22141884,0.206992084,0.058964626,0.07695,0.083925,0.10615000000000001,0.068225,0.143259988,0.152092397,0.196237226
2018-09-05 20:00:00+00:00,0.135489772,0.101650663,0.054619221,0.103051999,0.189033374,0.260825153,0.184806684,0.226492774,0.213261184,0.058669284,0.07655,0.08442500000000001,0.106625,0.06885,0.14836295,0.154591812,0.204940286
2018-09-06 20:00:00+00:00,0.137066957,0.100278815,0.053356242,0.104412726,0.191083542,0.263571645,0.187007894,0.224168856,0.208029263,0.057213152,0.0781,0.085275,0.10855000000000001,0.06905,0.149573049,0.155861178,0.208253576
2018-09-07 20:00:00+00:00,0.138268497,0.101329034,0.054522131,0.103004139,0.196066,0.262608316,0.188145842,0.225830544,0.205146073,0.058425842,0.0786,0.084875,0.11082499999999999,0.0688,0.14752295,0.1597683,0.209575837
2018-09-10 20:00:00+00:00,0.136553429,0.101223947,0.054729357,0.102252789,0.190318052,0.262011412,0.188360794,0.225633464,0.205633363,0.058049842,0.07844999999999999,0.08654999999999999,0.11164999999999999,0.06865,0.143351767,0.157840927,0.209526853
2018-09-11 20:00:00+00:00,0.132960463,0.101348347,0.055827586,0.102013931,0.190863905,0.265008064,0.183748789,0.225249837,0.203316547,0.056170563,0.07775,0.08522500000000001,0.11102499999999998,0.069275,0.141667913,0.15372993,0.208318712
2018-09-12 20:00:00+00:00,0.1314462,0.0998238,0.05554,0.1016452,0.187301199,0.2653078,0.183149,0.222896174,0.2030612,0.0560986,0.07695,0.084025,0.10865,0.069525,0.140232445,0.154917841,0.20712296
2018-09-13 20:00:00+00:00,0.126108026,0.098737504,0.054707059,0.1033786,0.18548713,0.26724744,0.17691985,0.218646586,0.200386064,0.054593333,0.07675,0.08234999999999999,0.10715,0.0697,0.138781036,0.154776334,0.204097474
2018-09-14 20:00:00+00:00,0.123753183,0.098842741,0.056563352,0.100048279,0.18400216,0.266837096,0.17769,0.214595459,0.19829084,0.054297266,0.0767,0.0816,0.10615000000000001,0.069725,0.136935745,0.154152782,0.199559243
2018-09-17 20:00:00+00:00,0.124420444,0.100446542,0.057348777,0.10151312,0.18618072,0.268283625,0.1847253,0.214664858,0.20688488,0.055050812,0.07595,0.0827,0.10617499999999999,0.069775,0.138041003,0.154152782,0.20132998
2018-09-18 20:00:00+00:00,0.1252722,0.100456531,0.0588218,0.10135152,0.183628,0.265124012,0.18112556,0.212957794,0.19919652,0.054023966,0.07595,0.0824,0.1052,0.06985000000000001,0.135981941,0.15399972,0.202579332
2018-09-19 20:00:00+00:00,0.123649799,0.102081603,0.058414978,0.103117799,0.17837775,0.262230909,0.18149025,0.210497344,0.194137199,0.055442083,0.0758,0.0806,0.10460000000000001,0.0692,0.134758799,0.157138182,0.200816528
2018-09-20 20:00:00+00:00,0.122189212,0.101677556,0.058361869,0.100779559,0.1764368,0.259764387,0.17802124,0.208526095,0.19201552,0.05429885,0.0756,0.08005000000000001,0.10385,0.0687,0.131713695,0.154595144,0.19905005
2018-09-21 20:00:00+00:00,0.12587042,0.101636488,0.057617065,0.101588789,0.170250549,0.261628322,0.179922,0.211079662,0.190955159,0.053078833,0.07685,0.07905000000000001,0.1041,0.0678,0.130784369,0.156965264,0.200956445
2018-09-24 20:00:00+00:00,0.127106655,0.10175676,0.057292964,0.1018921,0.1761092,0.260706129,0.17805544,0.210286228,0.19458516,0.050313999,0.0764,0.07955,0.10487500000000001,0.0678,0.134097901,0.156965264,0.202333519
2018-09-25 20:00:00+00:00,0.128458718,0.102269419,0.056528485,0.1027026,0.18739704,0.259743274,0.17899096,0.2108328,0.196036421,0.053437575,0.07582499999999999,0.081275,0.1045,0.06655,0.132361937,0.156916363,0.202333519
2018-09-26 20:00:00+00:00,0.1309048,0.1000096,0.055924662,0.099760999,0.178447599,0.259364874,0.178787199,0.209133879,0.19184,0.0555214,0.0745,0.08234999999999999,0.1035,0.0662,0.130744488,0.158773391,0.203346759
2018-09-27 20:00:00+00:00,0.127878217,0.099650409,0.054596935,0.099590413,0.173079025,0.25840869,0.176000524,0.208255123,0.190592905,0.051047833,0.075175,0.07919999999999999,0.1027,0.06634999999999999,0.130603404,0.158861147,0.202398762
2018-09-28 20:00:00+00:00,0.127285144,0.10098143,0.05505759,0.103718082,0.174636775,0.258006787,0.176887041,0.208201415,0.191341586,0.0512162,0.074375,0.07814999999,0.10135,0.066025,0.136835627,0.160910375,0.201196602
2018-10-01 20:00:00+00:00,0.127551432,0.100475887,0.055225691,0.103228577,0.174132918,0.260673951,0.175597868,0.209378882,0.192757724,0.054034416,0.07445,0.07780000000000001,0.1011,0.0654,0.13500406,0.159696648,0.201196602
2018-10-02 20:00:00+00:00,0.128289068,0.10013381,0.053775928,0.104948206,0.171241162,0.2597234,0.17825571,0.214652209,0.197459475,0.055240308,0.07435,0.07919999999999999,0.10289999999999999,0.0655,0.13934538,0.161612359,0.204442002
2018-10-03 20:00:00+00:00,0.127922119,0.103148163,0.056023077,0.10340971,0.175046648,0.258331548,0.17624462,0.213019561,0.199702117,0.05693125,0.0755,0.07919999999999999,0.1038,0.06475,0.137375906,0.163332386,0.204028362
2018-10-04 20:00:00+00:00,0.134912716,0.107605246,0.058164296,0.105516344,0.176375124,0.264422948,0.186654258,0.220597511,0.210277531,0.058783733,0.07717500000000001,0.0808,0.105975,0.06425,0.14228576,0.163489588,0.206701874
2018-10-05 20:00:00+00:00,0.138410887,0.107332713,0.059628035,0.10660131,0.177866689,0.262160287,0.191805586,0.222808428,0.20473381,0.063209666,0.07685,0.0816,0.107575,0.06485,0.146014589,0.164081184,0.20868594
2018-10-08 20:00:00+00:00,0.139947416,0.112107419,0.05944354,0.108300068,0.176429827,0.261776296,0.195286448,0.219776927,0.205238055,0.067363575,0.078,0.08259999999999999,0.10875,0.06465,0.148967291,0.164081184,0.209954527
2018-10-09 20:00:00+00:00,0.141399405,0.111644234,0.05939933,0.106029034,0.182310644,0.261512858,0.193512731,0.220053972,0.204283667,0.064962933,0.0776,0.08220000000000001,0.10785,0.0643,0.148155043,0.166325774,0.209999538
2018-10-10 20:00:00+00:00,0.165853879,0.113037835,0.060939163,0.109195889,0.187861103,0.264555232,0.216079413,0.232583381,0.220154344,0.071019283,0.07875,0.0816,0.1067,0.0641,0.155634056,0.163663729,0.210109974
2018-10-11 20:00:00+00:00,0.173870291,0.110325507,0.059475521,0.110749041,0.215224265,0.269521427,0.218432043,0.235587754,0.224450977,0.071355124,0.079525,0.08529999999999999,0.11065,0.0642,0.164359022,0.184783438,0.230373981
2018-10-12 20:00:00+00:00,0.164859455,0.106340472,0.059801588,0.106277324,0.206560193,0.263604916,0.205684172,0.2304754,0.21834211,0.068299499,0.07795,0.08275,0.109125,0.06455,0.163282614,0.182200499,0.223594374
2018-10-15 20:00:00+00:00,0.167439877,0.108496636,0.059978407,0.109826896,0.207782158,0.264827524,0.212905796,0.228932522,0.219870682,0.068633308,0.078075,0.0833,0.109275,0.0645,0.158143744,0.190967776,0.225972695
2018-10-16 20:00:00+00:00,0.151883172,0.107609138,0.05786738,0.106515586,0.197061744,0.2666098,0.195632575,0.224154145,0.208897344,0.0644954,0.07552500000000001,0.08195000000000001,0.104725,0.06365,0.150342584,0.185501393,0.223522876
2018-10-17 20:00:00+00:00,0.154084365,0.107856619,0.054672815,0.107465075,0.194813293,0.271550111,0.198878943,0.227551647,0.210406675,0.06699721,0.0754,0.08199999999999999,0.103925,0.06372499999999999,0.151275296,0.176319265,0.223522876
2018-10-18 20:00:00+00:00,0.16497261,0.108863992,0.057320045,0.108041958,0.194303524,0.274075361,0.211670948,0.236218254,0.223959789,0.06848285,0.0765,0.0817,0.10432499999999999,0.06405,0.155119383,0.180152201,0.22342675
2018-10-19 20:00:00+00:00,0.16679812,0.107856843,0.059411549,0.103776346,0.203551896,0.270981684,0.213984913,0.231623181,0.219832481,0.067390549,0.075325,0.0821,0.10644999999999999,0.0645,0.156191698,0.18174243,0.222263564
2018-10-22 20:00:00+00:00,0.168511944,0.110205341,0.054377623,0.106356737,0.205268448,0.269198709,0.211713979,0.22979629,0.215317103,0.06712984,0.074875,0.0808,0.10557499999999999,0.06434999999999999,0.156387258,0.179921223,0.223276553
2018-10-23 20:00:00+00:00,0.169562034,0.110446805,0.055581105,0.106481017,0.220910927,0.272517118,0.211935501,0.237307015,0.223510093,0.06995745,0.07665,0.08224999999999999,0.1074,0.064125,0.166098648,0.193172,0.228537173
2018-10-24 20:00:00+00:00,0.18795842,0.115783364,0.056525905,0.109623924,0.244030241,0.274975149,0.232756724,0.246511986,0.241982744,0.07367496,0.07780000000000001,0.08275,0.1075,0.0638,0.166655709,0.193157326,0.228228087
2018-10-25 20:00:00+00:00,0.187676724,0.1108885,0.056089311,0.108662517,0.196807984,0.272206726,0.23251431,0.239513636,0.237253458,0.072236705,0.077475,0.08259999999999999,0.10965,0.06325,0.165877785,0.211606703,0.231691
2018-10-26 20:00:00+00:00,0.186584948,0.110307129,0.057131076,0.113214365,0.24002371,0.27252226,0.231319827,0.245942836,0.238722137,0.074590319,0.07980000000000001,0.0861,0.112525,0.063775,0.175079452,0.211653153,0.23798277
2018-10-29 20:00:00+00:00,0.190941241,0.111003548,0.057892382,0.112039043,0.245945372,0.271180157,0.240615498,0.2509359,0.242543298,0.073288999,0.07919999999999999,0.08545,0.112325,0.064075,0.168271316,0.211913044,0.236383175
2018-10-30 20:00:00+00:00,0.186768468,0.111687399,0.056889,0.11155662,0.242359324,0.273019068,0.23465462,0.246869572,0.23499482,0.070321,0.077975,0.08455,0.11095000000000001,0.064725,0.169027918,0.210295478,0.236079803
2018-10-31 20:00:00+00:00,0.179679003,0.111511317,0.056617152,0.106916387,0.233563517,0.275487795,0.227071794,0.238977425,0.228429165,0.07001635,0.076775,0.08505000000000001,0.1096,0.0641,0.162540388,0.207828471,0.229949263
2018-11-01 20:00:00+00:00,0.172982634,0.111392635,0.055180705,0.110049834,0.227830758,0.281528245,0.216686455,0.233779927,0.22048691,0.07018792,0.076575,0.08345000000000001,0.10935,0.0644,0.157524936,0.207459256,0.22648545
2018-11-02 20:00:00+00:00,0.176246594,0.113066764,0.056590882,0.110968293,0.230811548,0.287591378,0.222975717,0.2411399,0.222373215,0.0708815,0.0759,0.08175,0.10859999999999999,0.06425,0.159152664,0.204516094,0.225712134
2018-11-05 21:00:00+00:00,0.17457062,0.112815611,0.056405029,0.109315396,0.227463679,0.288400157,0.224545058,0.237852954,0.220122944,0.069214999,0.075775,0.08410000000000001,0.1082,0.064675,0.15688161,0.207295311,0.231250853
2018-11-06 21:00:00+00:00,0.16924375,0.111852666,0.058127582,0.1074452,0.227424499,0.294423596,0.219887,0.23694949,0.2167536,0.066216599,0.0762,0.08175,0.10800000000000001,0.0643,0.156598233,0.199954263,0.228491801
2018-11-07 21:00:00+00:00,0.154167068,0.107597647,0.056530094,0.103742396,0.216212882,0.2938445,0.205656489,0.2273894,0.210069589,0.0649706,0.074725,0.08130000000000001,0.106225,0.0642,0.147620476,0.196203919,0.224320827
2018-11-08 21:00:00+00:00,0.152877082,0.109163716,0.057679838,0.108119575,0.219862813,0.297552353,0.20724205,0.227755909,0.213302028,0.061037079,0.074575,0.08105000000000001,0.106425,0.06485,0.144177981,0.183472519,0.215929093
2018-11-09 21:00:00+00:00,0.159581489,0.108950191,0.057681164,0.107816565,0.22885931,0.319972,0.214344896,0.233187813,0.224819089,0.06640492,0.075725,0.08234999999999999,0.106,0.064725,0.14759856,0.18197078,0.223592603
2018-11-12 21:00:00+00:00,0.171968579,0.110187274,0.057929825,0.110414872,0.239488641,0.324288444,0.229575924,0.233323454,0.22752856,0.0716343,0.076325,0.08410000000000001,0.10654999999999999,0.06509999999999999,0.151764978,0.179876743,0.217076275
2018-11-13 21:00:00+00:00,0.17301431,0.111233223,0.058347258,0.110896413,0.253218465,0.405780987,0.228953075,0.234920799,0.225376327,0.072362999,0.075375,0.0836,0.10705,0.065275,0.149841743,0.188109111,0.219071374
2018-11-14 21:00:00+00:00,0.180037931,0.110740733,0.059412082,0.113756737,0.255827158,0.383660135,0.234643303,0.240535851,0.231277189,0.076709124,0.076325,0.08395,0.10710000000000001,0.0655,0.155425442,0.189948548,0.221967386
2018-11-15 21:00:00+00:00,0.17537,0.111893188,0.058332847,0.112236186,0.247075337,0.368543185,0.225025172,0.235323457,0.221255324,0.079567166,0.077625,0.0848,0.10827500000000001,0.06655,0.161784845,0.194495425,0.22286916
2018-11-16 21:00:00+00:00,0.17011262,0.111266279,0.060233199,0.113449596,0.237401896,0.354678416,0.22338962,0.236092667,0.224820029,0.085096525,0.07825,0.08439999999999999,0.1101,0.0667,0.156533164,0.196896997,0.224459378
2018-11-19 21:00:00+00:00,0.181243148,0.113663388,0.06098567,0.114565237,0.240786696,0.368201409,0.235227557,0.2362295,0.225253986,0.088810849,0.078,0.08635,0.109675,0.067425,0.157642178,0.19006739,0.222448997
2018-11-20 21:00:00+00:00,0.194538517,0.112546323,0.060667301,0.115085703,0.26144336,0.439744895,0.246247758,0.243454029,0.239723508,0.090051145,0.077675,0.08495,0.109125,0.067275,0.164785686,0.192403066,0.230363801
2018-11-21 21:00:00+00:00,0.187134331,0.110939447,0.060180441,0.114961103,0.250547568,0.422155523,0.238299103,0.236503822,0.2277728,0.086394099,0.076,0.08460000000000001,0.10925000000000001,0.0677,0.160074151,0.194761285,0.229393777
2018-11-23 18:00:00+00:00,0.191788965,0.111043099,0.0585419,0.114361581,0.260344584,0.472195114,0.242279732,0.236904145,0.230199634,0.08809032,0.07552500000000001,0.08255000000000001,0.108125,0.067625,0.163396484,0.191732318,0.22845774
2018-11-26 21:00:00+00:00,0.180671255,0.109275952,0.058167352,0.112017089,0.257685479,0.450818533,0.234413965,0.234266556,0.231175462,0.086862333,0.07535,0.08385,0.10807499999999999,0.067625,0.159713238,0.189943352,0.227728364
2018-11-27 21:00:00+00:00,0.178946096,0.107391364,0.057343816,0.111934646,0.240035318,0.435894555,0.229320606,0.235216739,0.223296301,0.084927349,0.0746,0.0843,0.107625,0.067275,0.161044897,0.189970358,0.227376885
2018-11-28 21:00:00+00:00,0.171642931,0.10725497,0.057871367,0.108647266,0.241939241,0.42014318,0.22048912,0.234918745,0.223810213,0.077776875,0.074475,0.08495,0.10675000000000001,0.06662499999999999,0.16190625,0.189752966,0.226084639
2018-11-29 21:00:00+00:00,0.173709682,0.10863972,0.058054086,0.110603624,0.241699086,0.420340028,0.221619903,0.2343504,0.221150844,0.076982575,0.07465,0.08439999999999999,0.1079,0.0665,0.162857173,0.186557605,0.226922978
2018-11-30 21:00:00+00:00,0.169433448,0.108315952,0.057925282,0.1099294,0.242964068,0.429832152,0.220276344,0.233593164,0.220959062,0.076704,0.073825,0.08305,0.107125,0.066825,0.161448916,0.184306653,0.223991302
2018-12-03 21:00:00+00:00,0.160380241,0.10862187,0.056614782,0.107499687,0.231169882,0.403197238,0.207646029,0.223064884,0.206808217,0.075801083,0.0724,0.0819,0.10307499999999999,0.06665,0.153619799,0.176437473,0.214517627
2018-12-04 21:00:00+00:00,0.180158589,0.110542494,0.060744764,0.108032733,0.24773511,0.401676476,0.227423924,0.228395443,0.221707524,0.081125733,0.07375,0.08145,0.10337500000000001,0.066525,0.156532706,0.183433181,0.212241139
2018-12-06 21:00:00+00:00,0.183913468,0.112690717,0.0573569,0.110211575,0.267814632,0.405526666,0.228512241,0.236937603,0.227426193,0.083237987,0.075325,0.0818,0.10835,0.06724999999999999,0.182852224,0.199939486,0.226862852
2018-12-07 21:00:00+00:00,0.196117586,0.113732111,0.053749817,0.113485,0.265274251,0.379132142,0.240980737,0.241620224,0.238842096,0.086251166,0.074125,0.08215,0.10845,0.067,0.178181849,0.196186818,0.231564424
2018-12-10 21:00:00+00:00,0.193432068,0.112077279,0.055408663,0.116277733,0.2652829,0.391623253,0.238388749,0.242440269,0.240568346,0.085585424,0.073925,0.08315,0.109725,0.0664,0.183058952,0.206653602,0.230555937
2018-12-11 21:00:00+00:00,0.193465172,0.11341087,0.056503805,0.11469435,0.253191467,0.383174301,0.2389962,0.244402984,0.240190006,0.084933399,0.07355,0.08414999999999999,0.10855000000000001,0.0668,0.17869925,0.20480394,0.22582753
2018-12-12 21:00:00+00:00,0.192979525,0.110812558,0.054841323,0.115084533,0.258380467,0.376107047,0.235852137,0.243334994,0.236989068,0.081135758,0.07365000000000001,0.08310000000000001,0.10755,0.0665,0.175636719,0.197180039,0.226293461
2018-12-13 21:00:00+00:00,0.193258731,0.109596794,0.055861294,0.112299,0.252340979,0.369243914,0.237959199,0.241767699,0.23400462,0.077293983,0.07175,0.083,0.106375,0.0646,0.174879294,0.193594762,0.224864452
2018-12-14 21:00:00+00:00,0.19935542,0.1099404,0.05468002,0.1102042,0.251890275,0.382118977,0.245892215,0.254626999,0.240693706,0.0855054,0.071725,0.08365,0.10640000000000001,0.064675,0.176232703,0.202591738,0.228117377
2018-12-17 21:00:00+00:00,0.20881451,0.114772717,0.056012147,0.1169385,0.272662565,0.392162333,0.257744675,0.25909225,0.246580579,0.087938016,0.072575,0.08305,0.10535,0.06465,0.177435773,0.19829568,0.226204015
2018-12-18 21:00:00+00:00,0.210866027,0.111823705,0.056766705,0.115965625,0.288504034,0.417396904,0.258968796,0.266069916,0.251832068,0.093107583,0.07395,0.08215,0.106375,0.0664,0.182225195,0.210139308,0.233876862
2018-12-19 21:00:00+00:00,0.2125029,0.1139116,0.0569528,0.1147437,0.2746778,0.410166076,0.26097,0.2654372,0.249446,0.093557399,0.07445,0.08220000000000001,0.1067,0.068325,0.180160957,0.211949109,0.232298995
2018-12-20 21:00:00+00:00,0.2182255,0.11814854,0.060645373,0.118108319,0.29408042,0.423523657,0.264809199,0.271287146,0.24924128,0.108105994,0.080025,0.08305,0.110175,0.07225,0.1876477,0.227570415,0.237451997
2018-12-21 21:00:00+00:00,0.225055,0.117925594,0.063192004,0.12106672,0.2946956,0.42495892,0.272883699,0.277359117,0.25771448,0.120137384,0.0814,0.08310000000000001,0.11295,0.07305,0.188578374,0.231624833,0.241345851
2018-12-24 18:00:00+00:00,0.23950248,0.121718736,0.063202664,0.125760479,0.313007,0.439679584,0.29037512,0.278028746,0.2571405,0.1305779,0.08255000000000001,0.08405,0.11585000000000001,0.07375,0.188578374,0.231624833,0.249696072
2018-12-26 21:00:00+00:00,0.21886406,0.118546733,0.060664802,0.126651919,0.290008399,0.42658819,0.262198999,0.266152092,0.234319999,0.118402263,0.0834,0.08410000000000001,0.117125,0.07425,0.188578374,0.254680937,0.249696072
2018-12-27 21:00:00+00:00,0.22309,0.11728091,0.064205634,0.131768699,0.2983941,0.438210177,0.266694,0.268388474,0.250556499,0.117600694,0.08425,0.086,0.11720000000000001,0.075775,0.204205419,0.23435883,0.247360726
2018-12-28 21:00:00+00:00,0.217573275,0.118109517,0.062307477,0.131276882,0.280490925,0.428449384,0.271677586,0.262683753,0.246435882,0.112599094,0.08545,0.08465,0.11862500000000001,0.076475,0.196006991,0.238340468,0.24734678
2018-12-31 21:00:00+00:00,0.206751696,0.11733577,0.059875176,0.129219051,0.270606482,0.420899942,0.259478772,0.253802984,0.239812017,0.107667842,0.08564999999999999,0.08574999999999999,0.11835000000000001,0.07667500000000001,0.196006991,0.238340468,0.240124597
2019-01-02 21:00:00+00:00,0.202343913,0.114879637,0.056071913,0.128398255,0.260787589,0.427298158,0.256746586,0.257123938,0.237090482,0.103700947,0.08612500000000001,0.0859,0.1197,0.0766,0.188736749,0.238340468,0.24764731
2019-01-03 21:00:00+00:00,0.215601813,0.11939315,0.057800325,0.130044334,0.266765758,0.430379412,0.269580862,0.258777053,0.246045224,0.103878557,0.09077500000000001,0.08635,0.130425,0.075425,0.191397997,0.238340468,0.241779863
2019-01-04 21:00:00+00:00,0.200030653,0.117403813,0.057786017,0.122643979,0.260524722,0.425027257,0.251052103,0.247237661,0.230716301,0.093958868,0.08622500000000001,0.0857,0.1266,0.07225,0.177444603,0.232097192,0.235026327
2019-01-07 21:00:00+00:00,0.197641417,0.116860965,0.055265056,0.121450482,0.253969586,0.424820847,0.249173351,0.245001715,0.237536931,0.08928261,0.08375,0.0842,0.120475,0.0705,0.174246309,0.223520879,0.230372459
2019-01-08 21:00:00+00:00,0.193409472,0.114185437,0.054166348,0.115354096,0.250783358,0.412127777,0.244052158,0.24085323,0.229893379,0.087862173,0.08175,0.0825,0.11635,0.0696,0.171522579,0.21399881,0.222463476
2019-01-09 21:00:00+00:00,0.190080403,0.113378926,0.052377442,0.115392851,0.244075203,0.398543571,0.237449482,0.23558,0.22121051,0.089038542,0.082525,0.08205,0.1158,0.06912499999999999,0.17028893,0.208700751,0.218731767
2019-01-10 21:00:00+00:00,0.188119086,0.111258859,0.054750691,0.1132517,0.240153668,0.390632666,0.23165587,0.229847953,0.219245027,0.090609936,0.08414999999999999,0.08259999999999999,0.11725,0.068875,0.169609101,0.212424446,0.218727444
2019-01-11 21:00:00+00:00,0.183172951,0.112474986,0.053594051,0.113719655,0.234536868,0.382859968,0.230405027,0.227940661,0.217391448,0.091039778,0.08255000000000001,0.08005000000000001,0.11585000000000001,0.06787499999999999,0.168151223,0.210303526,0.216289798
2019-01-14 21:00:00+00:00,0.182202439,0.111335006,0.053960227,0.110267412,0.237825289,0.383368971,0.230176077,0.229181569,0.218874537,0.090918894,0.083,0.07995000000000001,0.11574999999999999,0.06724999999999999,0.168139037,0.210303526,0.216020161
2019-01-15 21:00:00+00:00,0.174525379,0.109715313,0.053079197,0.112419503,0.232103075,0.374854761,0.217198655,0.223367256,0.215269586,0.089992578,0.082325,0.08065,0.11455,0.066775,0.163423505,0.200287642,0.211337258
2019-01-16 21:00:00+00:00,0.173376475,0.107446711,0.049342176,0.108715812,0.230741682,0.368854558,0.217666556,0.221253538,0.211572903,0.089439678,0.08125,0.0805,0.1149,0.06622499999999999,0.154797961,0.197505881,0.212442916
2019-01-17 21:00:00+00:00,0.171821706,0.106358343,0.050320495,0.106899989,0.224761027,0.3576862,0.212975255,0.219007889,0.212449567,0.086381,0.08032500000000001,0.08055,0.1151,0.065875,0.152552512,0.194737004,0.21178542
2019-01-18 21:00:00+00:00,0.167047112,0.104648551,0.050012424,0.10624901,0.209803468,0.348423083,0.20652472,0.215650184,0.205398913,0.0812265,0.0789,0.07939999999,0.11495,0.06555,0.144061091,0.192046925,0.210106907
2019-01-22 21:00:00+00:00,0.179743389,0.1084044,0.049589733,0.106112,0.213600758,0.359185066,0.217829172,0.22123323,0.214458689,0.0832649,0.07769999999999999,0.0814,0.1144,0.0653,0.151084221,0.187071669,0.216140469
2019-01-23 21:00:00+00:00,0.175828865,0.10561332,0.049833714,0.103401655,0.220174662,0.356841861,0.216149512,0.217668338,0.211800255,0.08408411,0.07644999999999999,0.0806,0.1125,0.06505,0.153804175,0.189125092,0.211458285
2019-01-24 21:00:00+00:00,0.173412141,0.104377055,0.048254666,0.102215406,0.220320586,0.356471881,0.213583517,0.214093356,0.208607258,0.080525999,0.0761,0.0806,0.1125,0.0645,0.149100635,0.187452909,0.208926086
2019-01-25 21:00:00+00:00,0.168924186,0.103167485,0.048385595,0.108641541,0.214846615,0.355756527,0.204061279,0.214865353,0.204633027,0.07503655,0.07585,0.07805,0.1116,0.06335,0.144696921,0.185207037,0.20872848
2019-01-28 21:00:00+00:00,0.173292186,0.103115142,0.049913653,0.105641537,0.217181265,0.364375777,0.2110371,0.217129312,0.211641144,0.07753536,0.0765,0.0789,0.11175,0.06355000000000001,0.149931689,0.188138926,0.211682439
2019-01-29 21:00:00+00:00,0.17315497,0.104569076,0.049609009,0.109800544,0.221512876,0.357114211,0.214418137,0.218311733,0.212286408,0.078882609,0.0768,0.0787,0.11164999999999999,0.06344999999999999,0.150041295,0.18107613,0.210152955
2019-01-30 21:00:00+00:00,0.166417937,0.1037211,0.048335028,0.108695048,0.214991751,0.349599703,0.201195958,0.212606538,0.208425503,0.074759799,0.0761,0.07814999999,0.1108,0.06305,0.149165322,0.185022329,0.207202329
2019-01-31 21:00:00+00:00,0.159655862,0.102997777,0.048066644,0.109175603,0.209649189,0.347829083,0.196333527,0.210468328,0.205206258,0.07578092,0.07685,0.07745,0.1104,0.06245,0.145957925,0.178632095,0.205566959
2019-02-01 21:00:00+00:00,0.157955206,0.102134825,0.048213277,0.106176379,0.204713834,0.33765794,0.19545771,0.211333579,0.205307068,0.075551999,0.074825,0.07685,0.1084,0.06215,0.140619733,0.176723563,0.206400436
2019-02-04 21:00:00+00:00,0.155112958,0.103644123,0.047734009,0.107706993,0.197746372,0.339387592,0.192407782,0.209102292,0.202994334,0.07551728,0.07485,0.0762,0.10817500000000001,0.062375,0.139719908,0.170567553,0.204691405
2019-02-05 21:00:00+00:00,0.153477448,0.102530082,0.047730428,0.104926551,0.200796248,0.339295066,0.18974862,0.205783848,0.196254596,0.075033679,0.07405,0.07644999999999999,0.105375,0.06125,0.134102146,0.166550217,0.204691405
2019-02-06 21:00:00+00:00,0.152305082,0.101432622,0.048767422,0.104241455,0.198050268,0.335686492,0.18963595,0.20785763,0.199301386,0.07591,0.07435,0.07615,0.10800000000000001,0.061275,0.134494651,0.168034826,0.204691405
2019-02-07 21:00:00+00:00,0.156822096,0.102487609,0.048754914,0.105382179,0.210302155,0.334943859,0.1953874,0.211610038,0.203262765,0.072743759,0.0746,0.0767,0.10945,0.061224999999999995,0.146910087,0.170185679,0.204691405
2019-02-08 21:00:00+00:00,0.154657999,0.101790309,0.048415309,0.103831499,0.2125043,0.3326018,0.1938072,0.210039076,0.2031436,0.074039574,0.074225,0.077,0.11044999999999999,0.06405,0.152203359,0.178297962,0.201515645
2019-02-11 21:00:00+00:00,0.155902896,0.101157777,0.049540777,0.105750827,0.212469258,0.332627829,0.194102,0.207695856,0.202703965,0.07580802,0.0741,0.07665,0.1097,0.065525,0.144580346,0.178297962,0.19571855
2019-02-12 21:00:00+00:00,0.151081248,0.102717885,0.049272142,0.105154341,0.21360231,0.331607681,0.189591086,0.206348923,0.199040779,0.07288996,0.0739,0.076,0.1092,0.06505,0.141867891,0.1670236,0.194947212
2019-02-13 21:00:00+00:00,0.152543206,0.103154619,0.049451492,0.100879948,0.208798332,0.3291394,0.189167465,0.206409882,0.199253289,0.073572239,0.07305,0.07445,0.10785,0.06495000000000001,0.140904467,0.168322527,0.196349529
2019-02-14 21:00:00+00:00,0.154903639,0.10024352,0.049215765,0.100865489,0.205873686,0.322321929,0.188548034,0.208132338,0.197741962,0.075373765,0.0732,0.07485,0.10715,0.06505,0.145918966,0.1680861,0.197244247
2019-02-15 21:00:00+00:00,0.148910179,0.099626742,0.047771085,0.105127999,0.204129975,0.317295496,0.183185048,0.2089493,0.195437848,0.071979999,0.07315,0.0751,0.10735,0.06515,0.141976036,0.17237007,0.202252359
2019-02-19 21:00:00+00:00,0.147909682,0.097900249,0.047196006,0.109073258,0.204102779,0.310817925,0.182952698,0.206928514,0.191947579,0.073353424,0.071125,0.07415,0.10554999999999999,0.0646,0.143456609,0.170463647,0.201241796
2019-02-20 21:00:00+00:00,0.143067848,0.098462,0.049028109,0.106628082,0.199711179,0.307041843,0.180837855,0.206275283,0.190004234,0.06863625,0.0708,0.0733,0.1056,0.06455,0.141720886,0.16946441,0.20163578
2019-02-21 21:00:00+00:00,0.144937727,0.097979666,0.048849933,0.100759801,0.204955655,0.301278781,0.180805965,0.203727735,0.187883801,0.069544575,0.06995,0.0733,0.1066,0.06505,0.142659665,0.1692431,0.200866837
2019-02-22 21:00:00+00:00,0.140568668,0.098465892,0.04763806,0.101608965,0.200987862,0.297614,0.175194227,0.202327199,0.1829912,0.066970899,0.06785000000000001,0.0723,0.1047,0.065,0.14036588,0.168345947,0.19743946
2019-02-25 21:00:00+00:00,0.14238176,0.098042619,0.046771349,0.099009493,0.203812301,0.313546374,0.174781218,0.205791977,0.185484051,0.065976241,0.067375,0.0719,0.1041,0.064675,0.13881099,0.166552569,0.201053393
2019-02-26 21:00:00+00:00,0.144379362,0.098462585,0.047837714,0.099478124,0.20367191,0.307357412,0.174931641,0.20846032,0.186376717,0.06591055,0.0676,0.07150000000000001,0.10369999999999999,0.064575,0.139823056,0.164429099,0.205303717
2019-02-27 21:00:00+00:00,0.142877931,0.098360466,0.049288026,0.098263144,0.205585908,0.3065987,0.173402717,0.21092075,0.187815937,0.066615083,0.06825,0.0713,0.10425000000000001,0.064275,0.143288423,0.164056222,0.208013597
2019-02-28 21:00:00+00:00,0.143743689,0.097141869,0.049193833,0.098344555,0.205413189,0.299737687,0.170848741,0.210949847,0.19243822,0.065375,0.06745,0.07139999999999999,0.10400000000000001,0.06355000000000001,0.141553933,0.163869521,0.206366427
2019-03-01 21:00:00+00:00,0.13849617,0.10006039,0.05027355,0.098753848,0.196400565,0.299304618,0.166833051,0.204792808,0.1948388,0.065940237,0.06695000000000001,0.0708,0.10339999999999999,0.06325,0.140082224,0.164898799,0.203791588
2019-03-04 21:00:00+00:00,0.142436554,0.098962877,0.050320641,0.098837089,0.198955986,0.296317124,0.170026786,0.207687879,0.190961448,0.066253399,0.0668,0.06805,0.10300000000000001,0.0632,0.140068163,0.163461943,0.204472365
2019-03-05 21:00:00+00:00,0.14244444,0.100372507,0.049865308,0.099264027,0.199622189,0.295271212,0.169782793,0.20712589,0.184652724,0.06496855,0.06572499999999999,0.06735000000000001,0.10215,0.06295,0.14011658,0.165965612,0.20340679
2019-03-06 21:00:00+00:00,0.148247309,0.099250266,0.0502198,0.098092482,0.206584034,0.29607,0.176827079,0.20879606,0.189056086,0.0676445,0.065825,0.06855,0.10135,0.06280000000000001,0.141117332,0.167416884,0.202555088
2019-03-07 21:00:00+00:00,0.1532635,0.098879831,0.049967349,0.098936579,0.208113979,0.296842096,0.186464896,0.215209123,0.200845482,0.070181933,0.06684999999999999,0.0702,0.1026,0.062400000000000004,0.144261788,0.173543423,0.204725279
2019-03-08 21:00:00+00:00,0.154507909,0.098928958,0.049526125,0.101414358,0.219489103,0.298474587,0.187887765,0.217548962,0.202578068,0.07163625,0.0674,0.0702,0.10395,0.06305,0.148398718,0.17993468,0.210713448
2019-03-11 20:00:00+00:00,0.145094859,0.097959871,0.049130549,0.097743248,0.206793913,0.301251068,0.176937256,0.210124415,0.196046689,0.065968575,0.066825,0.0699,0.10385,0.06315,0.145022811,0.175358598,0.20412036
2019-03-12 20:00:00+00:00,0.142153818,0.095143853,0.048988333,0.1008376,0.204461227,0.299117024,0.173816896,0.208965213,0.190749413,0.063548133,0.0658,0.06860000000000001,0.10205,0.06295,0.144424528,0.170356629,0.203253466
2019-03-13 20:00:00+00:00,0.139064888,0.094587755,0.049456441,0.100953793,0.199884779,0.295120171,0.170532244,0.210014475,0.189948027,0.062086566,0.064925,0.0676,0.1017,0.063,0.142346744,0.17166955,0.202555963
2019-03-14 20:00:00+00:00,0.139305304,0.095061619,0.0489875,0.100430862,0.197224827,0.290997675,0.1746828,0.207747245,0.191537013,0.061043749,0.06434999999999999,0.06709999999999999,0.10099999999999999,0.06265,0.143319717,0.170407188,0.198038185
2019-03-15 20:00:00+00:00,0.138852981,0.093824563,0.04939865,0.1018359,0.195641444,0.286623468,0.172488491,0.201877726,0.185111648,0.060815833,0.06357499999999999,0.06665,0.0984,0.062474999999999996,0.139827389,0.166043519,0.195227489
2019-03-18 20:00:00+00:00,0.139842181,0.093545212,0.049510666,0.097520427,0.189873255,0.28737195,0.173384872,0.201105481,0.181898327,0.06163125,0.062875,0.0659,0.09655,0.06275,0.139310552,0.163841341,0.195550888
2019-03-19 20:00:00+00:00,0.141226281,0.092355123,0.04812285,0.098681672,0.191640487,0.292840181,0.174320931,0.200302982,0.181967272,0.0623825,0.062725,0.06495000000000001,0.09539999999999998,0.062400000000000004,0.137301858,0.164481805,0.194230748
2019-03-20 20:00:00+00:00,0.143371554,0.0937956,0.047966558,0.099564827,0.19349522,0.290383124,0.175100117,0.204648687,0.182516344,0.062689183,0.064225,0.06505,0.09539999999999998,0.0621,0.142297407,0.165090915,0.195256463
2019-03-21 20:00:00+00:00,0.141450454,0.096266873,0.046155445,0.101796124,0.191213018,0.287185725,0.172130944,0.205763896,0.18077461,0.063337104,0.065275,0.065,0.09609999999999999,0.062,0.144274259,0.165090915,0.195040699
2019-03-22 20:00:00+00:00,0.154140199,0.0992178,0.048059,0.1032568,0.207972,0.29604315,0.1864566,0.2105056,0.1916612,0.068075999,0.0691,0.06445000000000001,0.09942500000000001,0.06325,0.152439058,0.163568073,0.19384168
2019-03-25 20:00:00+00:00,0.154630966,0.099233921,0.04909011,0.105381666,0.206323333,0.298339453,0.18694725,0.211330156,0.19404135,0.068038904,0.06875,0.06735000000000001,0.1012,0.06394999999999999,0.152052325,0.174019264,0.201488908
2019-03-26 20:00:00+00:00,0.150413333,0.096478607,0.0489906,0.100649666,0.200274266,0.291710881,0.185165266,0.206136112,0.191137333,0.06794686,0.066525,0.0662,0.09880000000000001,0.063975,0.147631809,0.171538264,0.196336718
2019-03-27 20:00:00+00:00,0.1529181,0.099287512,0.049953,0.10278875,0.204608968,0.28820585,0.1872624,0.207030009,0.192958,0.06771354,0.06797500000000001,0.06755,0.09955,0.065,0.148420115,0.171901896,0.194878249
2019-03-28 20:00:00+00:00,0.149703666,0.098206712,0.049061499,0.101793666,0.198545021,0.28883425,0.1827712,0.202884543,0.190106666,0.066653499,0.069575,0.0679,0.1018,0.066175,0.149283226,0.176380068,0.19396199
2019-03-29 20:00:00+00:00,0.145885966,0.096547463,0.04990155,0.0968763,0.198667133,0.279450781,0.177841433,0.203201712,0.187668333,0.0626633,0.06705,0.06735000000000001,0.10035,0.0659,0.144910474,0.171763293,0.195447663
2019-04-01 20:00:00+00:00,0.141284,0.093534719,0.051885919,0.0983572,0.1949119,0.269991125,0.1719392,0.201145537,0.1835708,0.06552206,0.06509999999999999,0.06575,0.09789999999999999,0.0658,0.141790597,0.169770668,0.197387381
2019-04-02 20:00:00+00:00,0.140939971,0.095134487,0.051394459,0.099201378,0.196190259,0.267773096,0.173296847,0.198391581,0.184008189,0.06498425,0.064275,0.0646,0.09695000000000001,0.06545,0.141624928,0.169563393,0.19447994
2019-04-03 20:00:00+00:00,0.140395868,0.09334196,0.05260384,0.098973062,0.198957817,0.264064062,0.17135011,0.2000178,0.184857986,0.065775599,0.06415,0.0637,0.09605000000000001,0.064675,0.1393615,0.167406205,0.195511468
2019-04-04 20:00:00+00:00,0.139183724,0.094375069,0.05077292,0.096998149,0.196816275,0.2608032,0.173411393,0.197605118,0.180637499,0.06389558,0.06305,0.0637,0.09505000000000001,0.064675,0.139849355,0.169114026,0.196661233
2019-04-05 20:00:00+00:00,0.135835172,0.091905153,0.04969025,0.098866762,0.191537817,0.255702468,0.17120862,0.196901234,0.179214882,0.061892749,0.0611,0.06225,0.092475,0.06385,0.138612123,0.170988099,0.196661233
2019-04-08 20:00:00+00:00,0.136388275,0.093112342,0.04924272,0.096765551,0.193605621,0.2484965,0.170537801,0.196739203,0.178359413,0.06125766,0.06165,0.0633,0.0924,0.0632,0.140856404,0.1706225,0.19472596
2019-04-09 20:00:00+00:00,0.140450434,0.092938473,0.04986738,0.095018296,0.197013417,0.2500594,0.175732,0.197593781,0.181800541,0.0630376,0.062,0.0625,0.0916,0.06282499999999999,0.142021065,0.168669459,0.192097475
2019-04-10 20:00:00+00:00,0.13703171,0.092361556,0.04896315,0.095538043,0.19359305,0.251696278,0.172356372,0.197158218,0.180858665,0.061023699,0.062,0.0605,0.09154999999999999,0.062325,0.139677657,0.169965719,0.192829183
2019-04-11 20:00:00+00:00,0.136813965,0.090251073,0.049755169,0.097131312,0.19587976,0.252270993,0.170771862,0.198487893,0.183153462,0.06010435,0.0602,0.05955,0.088725,0.059800000000000006,0.135804183,0.168113631,0.19321619
2019-04-12 20:00:00+00:00,0.132934518,0.090417901,0.04847765,0.096211779,0.194597302,0.252003593,0.167373994,0.195496193,0.177267455,0.059183,0.05975,0.0593,0.085475,0.058125,0.133659525,0.163352606,0.189443081
2019-04-15 20:00:00+00:00,0.134167658,0.090061351,0.04961698,0.095383874,0.189020857,0.25041425,0.168216434,0.197414387,0.178843496,0.059185399,0.05925,0.0592,0.085525,0.05795,0.131997944,0.162175619,0.191985188
2019-04-16 20:00:00+00:00,0.132310908,0.090523287,0.050742749,0.096414051,0.1876812,0.246578018,0.166280551,0.19276225,0.177043848,0.05828115,0.0583,0.0579,0.08442500000000001,0.057699999999999994,0.131460478,0.159434002,0.188435626
2019-04-17 20:00:00+00:00,0.134631056,0.090516585,0.051288719,0.093689274,0.188336284,0.248460849,0.167354344,0.193341781,0.177538703,0.058045719,0.05785,0.05835,0.08407500000000001,0.0576,0.133599557,0.159963805,0.187692089
2019-04-18 20:00:00+00:00,0.133311434,0.089278365,0.051081909,0.092771032,0.18898623,0.246111918,0.164216898,0.192762648,0.173155405,0.057565019,0.057800000000000004,0.06065,0.08425,0.0576,0.133245251,0.165344751,0.186799261
2019-04-22 20:00:00+00:00,0.133208351,0.0920999,0.0505513,0.093524482,0.1884181,0.2493114,0.165413782,0.194638393,0.175505206,0.058840199,0.05755,0.06105000000000001,0.08474999999999999,0.0582,0.133245251,0.165139255,0.186799261
2019-04-23 20:00:00+00:00,0.129681929,0.091776951,0.05078234,0.092505655,0.186355318,0.245630031,0.161953156,0.193834843,0.172964318,0.05543453,0.0582,0.06085,0.0862,0.05765,0.135257096,0.163480113,0.183719663
2019-04-24 20:00:00+00:00,0.133085965,0.092253737,0.0500258,0.093482741,0.195724941,0.242261745,0.164725255,0.192808512,0.175137068,0.05747394,0.0605,0.064,0.0908,0.05815000000000001,0.136736326,0.16604893,0.180898593
2019-04-25 20:00:00+00:00,0.135291244,0.09188897,0.05049084,0.093034217,0.190916456,0.24715329,0.167416424,0.194654356,0.175982477,0.05668075,0.06295,0.0689,0.09300000000000001,0.059175000000000005,0.138795803,0.164285059,0.181923533
2019-04-26 20:00:00+00:00,0.131770772,0.09093055,0.04995768,0.092676213,0.193085227,0.269706981,0.163943537,0.192697,0.173899779,0.05538746,0.061925,0.06575,0.09255000000000001,0.05865,0.13749242,0.166314758,0.183975951
2019-04-29 20:00:00+00:00,0.133612989,0.091198737,0.050267025,0.094313022,0.195050304,0.266120172,0.165450594,0.191320025,0.173795331,0.057989349,0.060774999999999996,0.0639,0.0906,0.059425,0.138432064,0.166314758,0.182546356
2019-04-30 20:00:00+00:00,0.133197182,0.092311875,0.04976996,0.091061379,0.193735119,0.266275254,0.168237779,0.190945306,0.173754586,0.0591117,0.062975,0.0641,0.09300000000000001,0.0599,0.136580905,0.166314758,0.182347671
2019-05-01 20:00:00+00:00,0.140705744,0.091934968,0.04889117,0.090807206,0.199635209,0.27259959,0.172153689,0.190662906,0.1758977,0.063582164,0.061900000000000004,0.0638,0.09244999999999999,0.060025,0.136580905,0.166314758,0.182347671
2019-05-02 20:00:00+00:00,0.139487137,0.090477975,0.048138399,0.092151868,0.201644278,0.283631127,0.170683989,0.189970775,0.176208965,0.0630688,0.060774999999999996,0.06434999999999999,0.09195,0.0623,0.139199959,0.166314758,0.181292302
2019-05-03 20:00:00+00:00,0.133812551,0.089902281,0.048565919,0.090684327,0.196379181,0.284960959,0.163493184,0.19044051,0.172145575,0.06038012,0.060875000000000005,0.06570000000000001,0.09332499999999999,0.06315,0.135553512,0.166314758,0.18311973
2019-05-06 20:00:00+00:00,0.141095396,0.091426562,0.048938749,0.091907503,0.199168718,0.2866659,0.173668875,0.200178249,0.184203675,0.06277575,0.063275,0.0677,0.09885,0.06355000000000001,0.140936929,0.166314758,0.192952165
2019-05-07 20:00:00+00:00,0.157077753,0.095394117,0.0509363,0.091932586,0.212415751,0.3187151,0.191518234,0.212401012,0.198943974,0.070016569,0.0667,0.06795,0.09805,0.06372499999999999,0.149640944,0.169490474,0.190373313
2019-05-08 20:00:00+00:00,0.155299789,0.093888072,0.050205119,0.093702682,0.210652518,0.307011436,0.191425724,0.210836874,0.19911652,0.068007519,0.0682,0.06885,0.1024,0.064825,0.146903228,0.175002513,0.196945543
2019-05-09 20:00:00+00:00,0.156200322,0.096172844,0.050303064,0.092621379,0.212118603,0.305665872,0.191163951,0.215879171,0.197567356,0.07008592,0.0708,0.0723,0.10554999999999999,0.06385,0.157899075,0.181503555,0.20544809
2019-05-10 20:00:00+00:00,0.146389379,0.09495605,0.04999234,0.091071913,0.20690915,0.305378072,0.181719282,0.210859412,0.196219475,0.062585789,0.067825,0.06775,0.0998,0.0641,0.153708182,0.181298321,0.198121818
2019-05-13 20:00:00+00:00,0.166712,0.09930859,0.050797399,0.09627125,0.218620465,0.314698072,0.2036858,0.224303646,0.216239399,0.0676042,0.071275,0.07085,0.10275000000000001,0.0642,0.157302251,0.178560262,0.198121818
2019-05-14 20:00:00+00:00,0.157161379,0.097361839,0.050019,0.09383831,0.209782532,0.308983,0.192635862,0.215361343,0.202597499,0.0657607,0.069075,0.07165,0.10300000000000001,0.064,0.150586758,0.180974789,0.196121437
2019-05-15 20:00:00+00:00,0.151455818,0.0970121,0.048765824,0.092792472,0.200509354,0.295747572,0.184158027,0.206004254,0.197759886,0.0684097,0.068875,0.0704,0.104575,0.0633,0.146212729,0.172842926,0.191496998
2019-05-16 20:00:00+00:00,0.145936403,0.096709058,0.05018228,0.092350975,0.19572392,0.287179945,0.181769113,0.202896418,0.196419551,0.06763059,0.066825,0.07085,0.10335000000000001,0.063075,0.138916836,0.174585874,0.190083596
2019-05-17 20:00:00+00:00,0.148622241,0.095792986,0.049862625,0.092853681,0.199792109,0.291445727,0.187158793,0.207913409,0.201758051,0.06765845,0.067775,0.0716,0.103275,0.06305,0.139557546,0.168369337,0.192256884
2019-05-20 20:00:00+00:00,0.152208465,0.09689406,0.0505929,0.092687186,0.199532545,0.28716109,0.195361441,0.2105778,0.201497103,0.0688996,0.06697499999999999,0.0707,0.102575,0.06305,0.146791811,0.167149899,0.188762633
2019-05-21 20:00:00+00:00,0.145956896,0.09655884,0.051032441,0.090788331,0.191673529,0.279896613,0.190662465,0.204241249,0.192939006,0.067696833,0.06475,0.07055,0.1007,0.0622,0.142001356,0.166411071,0.185876322
2019-05-22 20:00:00+00:00,0.146301806,0.096419791,0.050818083,0.089607034,0.1956695,0.291808399,0.192078989,0.206544683,0.194666482,0.066840666,0.064275,0.06955,0.09945,0.0617,0.140185882,0.164314794,0.185657487
2019-05-23 20:00:00+00:00,0.157182144,0.09822727,0.052503949,0.091528489,0.209377703,0.324079259,0.198062746,0.2121745,0.203089006,0.070341375,0.068,0.0696,0.10125,0.06115,0.148720915,0.165427734,0.193639322
2019-05-24 20:00:00+00:00,0.153780675,0.098086966,0.052570433,0.091035689,0.214859727,0.319357109,0.196309568,0.2117731,0.201238575,0.071661666,0.0683,0.0689,0.10135,0.06125,0.146766637,0.167223593,0.191311589
2019-05-28 20:00:00+00:00,0.160139456,0.099589254,0.053397545,0.091980127,0.208195233,0.31705804,0.202180736,0.212262416,0.201675381,0.072507587,0.0668,0.0673,0.09855,0.06055,0.143901577,0.164515461,0.189279026
2019-05-29 20:00:00+00:00,0.164551862,0.10223056,0.053993,0.091385344,0.213865757,0.321799218,0.208046,0.2117042,0.202055103,0.077769749,0.068675,0.06815,0.09949999999999999,0.06045,0.150399988,0.167364233,0.192772897
2019-05-30 20:00:00+00:00,0.162571825,0.101360283,0.052178854,0.092988141,0.216605909,0.336859099,0.205648675,0.214198183,0.202053629,0.076807483,0.066775,0.06735000000000001,0.09849999999999999,0.060599999999999994,0.148754416,0.169134656,0.190912484
2019-05-31 20:00:00+00:00,0.170147324,0.1072725,0.052532133,0.096997034,0.224795827,0.392012727,0.212622441,0.214784466,0.20603572,0.084339999,0.0703,0.06785000000000001,0.10005000000000001,0.0608,0.154311924,0.174361698,0.196146265
2019-06-03 20:00:00+00:00,0.169407453,0.11194175,0.055266812,0.103536658,0.216528256,0.406004,0.215961931,0.215408475,0.2040386,0.084286687,0.0719,0.06705,0.1015,0.061399999999999996,0.152835004,0.175989873,0.193918845
2019-06-04 20:00:00+00:00,0.159292482,0.109760991,0.053503083,0.099067172,0.217268474,0.3839398,0.201949979,0.212464591,0.200521682,0.075142916,0.0726,0.06965,0.10215,0.0616,0.150001576,0.1753797,0.194039066
2019-06-05 20:00:00+00:00,0.15550716,0.10860337,0.053647737,0.103506617,0.220106997,0.397192036,0.198860308,0.215173687,0.202531862,0.075281666,0.07185,0.06875,0.10035,0.061524999999999996,0.14757094,0.168304466,0.188892004
2019-06-06 20:00:00+00:00,0.152660275,0.1103741,0.0538992,0.107916896,0.211257074,0.38098389,0.193669934,0.21049525,0.201888806,0.0746108,0.07175,0.06885,0.0999,0.061875,0.146218999,0.165671719,0.186609081
2019-06-07 20:00:00+00:00,0.152411541,0.107411251,0.051279333,0.107266784,0.21013851,0.36299465,0.189220191,0.208783333,0.196140496,0.072391916,0.0696,0.06815,0.09835,0.061950000000000005,0.142633082,0.164040974,0.186609081
2019-06-10 20:00:00+00:00,0.149938372,0.10214125,0.052209933,0.103676272,0.204812809,0.357448209,0.185982758,0.206835541,0.188547012,0.070401124,0.0682,0.06715,0.09720000000000001,0.06235,0.141631483,0.160702383,0.18427672
2019-06-11 20:00:00+00:00,0.151948379,0.10136115,0.052058837,0.101938793,0.203634032,0.351383245,0.187575448,0.2071406,0.190065627,0.07385225,0.067625,0.0709,0.0965,0.06205,0.141573687,0.160673473,0.183619182
2019-06-12 20:00:00+00:00,0.151761586,0.102685893,0.051208366,0.107026793,0.212246314,0.373844581,0.191474496,0.212683733,0.192950418,0.076479833,0.06835,0.0701,0.09605000000000001,0.06225,0.142534982,0.163584359,0.186091072
2019-06-13 20:00:00+00:00,0.150410251,0.106806177,0.052794216,0.109820241,0.212784111,0.369857118,0.189576779,0.212021899,0.196169318,0.075045833,0.0682,0.07035,0.09585,0.06165,0.1409596,0.164554992,0.184119352
2019-06-14 20:00:00+00:00,0.149519648,0.10767933,0.053714,0.111512593,0.22708761,0.372630527,0.190558965,0.213148149,0.206042354,0.072152049,0.06795,0.0707,0.0958,0.061200000000000004,0.142531385,0.162940491,0.18443389
2019-06-17 20:00:00+00:00,0.149281637,0.106568325,0.054590104,0.111133124,0.213576281,0.379480563,0.18869495,0.212154666,0.196645518,0.074550583,0.0661,0.0705,0.094775,0.0617,0.140754333,0.161484421,0.182674495
2019-06-18 20:00:00+00:00,0.147321355,0.107211683,0.054274133,0.114383268,0.210532101,0.365860454,0.186194827,0.210542999,0.195029145,0.071892199,0.06695000000000001,0.06895,0.095175,0.06167500000000001,0.135722825,0.162106692,0.183816366
2019-06-19 20:00:00+00:00,0.144362182,0.106207105,0.052728849,0.119525817,0.211812361,0.360593304,0.181096137,0.21031285,0.193552225,0.069916562,0.06655,0.06974999999999999,0.09480000000000001,0.06175,0.135824469,0.158622669,0.183050166
2019-06-20 20:00:00+00:00,0.142401696,0.104385443,0.052536299,0.134056803,0.212436178,0.351455681,0.178696206,0.208897683,0.192211852,0.068731425,0.06815,0.07014999999999999,0.09565,0.062400000000000004,0.134414051,0.153226025,0.179640062
2019-06-21 20:00:00+00:00,0.148807717,0.103000068,0.051055833,0.132605358,0.211128543,0.349538681,0.180833386,0.207713333,0.191968925,0.069416537,0.0679,0.06945,0.09570000000000001,0.0617,0.136291716,0.156278181,0.181281238
2019-06-24 20:00:00+00:00,0.147326,0.1041642,0.0541225,0.1389858,0.213047446,0.3334004,0.180848,0.2088276,0.191729999,0.0690632,0.06795,0.0703,0.09519999999999999,0.06215,0.13865752,0.155359894,0.180859662
2019-06-25 20:00:00+00:00,0.1531089,0.103741988,0.055034111,0.132581999,0.212836666,0.331071666,0.18742325,0.213006022,0.187858666,0.074630083,0.06935,0.0699,0.09630000000000001,0.062025,0.140231851,0.156528595,0.184762249
2019-06-26 20:00:00+00:00,0.1524072,0.102549755,0.053647966,0.128765799,0.2074148,0.318899622,0.187620633,0.210872444,0.193680933,0.071540455,0.06775,0.07035,0.09535,0.0616,0.14050839,0.15861868,0.185476066
2019-06-27 20:00:00+00:00,0.1497884,0.102129,0.05382125,0.1267588,0.2072615,0.313271366,0.184437399,0.211505416,0.1922546,0.070904083,0.067,0.0703,0.09442500000000001,0.06045,0.141569358,0.158144219,0.186031765
2019-06-28 20:00:00+00:00,0.144326433,0.101966344,0.053428699,0.126355999,0.211710866,0.320233911,0.181006066,0.209479288,0.189873947,0.067924599,0.06724999999999999,0.0699,0.093925,0.0602,0.137295036,0.161272164,0.181382674
2019-07-01 20:00:00+00:00,0.138111,0.1006244,0.052777777,0.119258666,0.195890483,0.310596133,0.170354666,0.203442444,0.183893,0.068945233,0.0644,0.06805,0.0917,0.060274999999999995,0.132076863,0.154046023,0.181382674
2019-07-02 20:00:00+00:00,0.1329011,0.100183266,0.051058033,0.129577399,0.195262,0.326178,0.164475,0.201826166,0.1808652,0.067670999,0.06275,0.06805,0.0886,0.05815000000000001,0.129493667,0.153656129,0.177071729
2019-07-03 17:00:00+00:00,0.131033341,0.101270594,0.052071522,0.130466933,0.192930833,0.321656811,0.163731849,0.20107185,0.1849775,0.062732366,0.06344999999999999,0.0689,0.08865,0.05795,0.127327484,0.154803994,0.175781257
2019-07-05 20:00:00+00:00,0.133304583,0.098983411,0.051994511,0.122552366,0.190690833,0.313317333,0.165320666,0.201291155,0.1849072,0.065890911,0.06055,0.06705,0.08385,0.057800000000000004,0.133073399,0.152621011,0.172129597
2019-07-08 20:00:00+00:00,0.13721345,0.09943925,0.050866399,0.113002574,0.19219595,0.3075307,0.169899225,0.20347415,0.1974236,0.0664366,0.060149999999999995,0.0673,0.083925,0.057999999999999996,0.133092871,0.154849756,0.173573852
2019-07-09 20:00:00+00:00,0.1375768,0.099922088,0.051677999,0.115521666,0.191776866,0.298207511,0.167586666,0.206020733,0.187296533,0.064395644,0.060149999999999995,0.06684999999999999,0.08310000000000001,0.05825,0.13458608,0.15350335,0.174188223
2019-07-10 20:00:00+00:00,0.135673866,0.099968694,0.051362266,0.124221666,0.1901843,0.290298811,0.164195216,0.204266966,0.187346833,0.063992177,0.05925,0.06505,0.0825,0.057350000000000005,0.135970081,0.155149533,0.173219982
2019-07-11 20:00:00+00:00,0.133927599,0.100579966,0.052801333,0.118185999,0.1857195,0.289637,0.16669475,0.200696333,0.1782848,0.062307466,0.059699999999999996,0.06344999999999999,0.08185,0.056975,0.136141287,0.151814006,0.170418981
2019-07-12 20:00:00+00:00,0.133364041,0.100646022,0.051722194,0.121899641,0.193917875,0.295810422,0.164768083,0.195591694,0.18087495,0.061038077,0.06065,0.06285,0.08205,0.05685,0.136244386,0.14634463,0.167297856
2019-07-15 20:00:00+00:00,0.134892799,0.101393366,0.050936933,0.122848466,0.185409666,0.302216888,0.163902566,0.192230277,0.176820666,0.0618634,0.061349999999999995,0.06245,0.08205,0.057249999999999995,0.135921913,0.14634463,0.165784915
2019-07-16 20:00:00+00:00,0.13624385,0.101408233,0.052045133,0.1207075,0.1872679,0.309187,0.169969999,0.191257233,0.177405999,0.062828033,0.061399999999999996,0.06235,0.0824,0.057125,0.133846429,0.147184794,0.165558471
2019-07-17 20:00:00+00:00,0.141483,0.1038486,0.052089133,0.129754166,0.187487933,0.319252222,0.174688933,0.192278688,0.182564533,0.065636444,0.0625,0.06255,0.0828,0.056875,0.137249849,0.145263133,0.164106739
2019-07-18 20:00:00+00:00,0.140176366,0.102616111,0.052896777,0.139806966,0.189033666,0.317170533,0.17225,0.194274888,0.1759364,0.065407844,0.0645,0.06165,0.0833,0.056525,0.141087027,0.154914106,0.168122709
2019-07-19 20:00:00+00:00,0.144108,0.1029098,0.0524242,0.1282445,0.207321,0.3260986,0.1771724,0.1961146,0.1715484,0.066555099,0.064,0.061349999999999995,0.0833,0.056600000000000004,0.140050906,0.146361317,0.168569496
2019-07-22 20:00:00+00:00,0.139895204,0.101884669,0.052985918,0.123491988,0.24862186,0.321093649,0.172387581,0.198168504,0.177219302,0.063609339,0.06265,0.06115,0.0819,0.056924999999999996,0.138291819,0.146172193,0.172533244
2019-07-23 20:00:00+00:00,0.135849923,0.100954382,0.052035334,0.120747076,0.200405223,0.314272505,0.166997116,0.194856069,0.170876837,0.063316339,0.06275,0.060250000000000005,0.08065,0.05755,0.13390617,0.146423029,0.170802225
2019-07-24 20:00:00+00:00,0.133990632,0.101457047,0.052427088,0.120525725,0.184573076,0.311501141,0.164641311,0.193716826,0.175087823,0.062571565,0.06285,0.06035,0.081175,0.057275,0.135381789,0.149487162,0.171895137
2019-07-25 20:00:00+00:00,0.137715197,0.10170273,0.051434095,0.115014469,0.186071686,0.302438517,0.167376418,0.194999186,0.159768483,0.06336493,0.061900000000000004,0.06165,0.08115,0.057,0.137427838,0.150883008,0.172687026
2019-07-26 20:00:00+00:00,0.13418879,0.100365891,0.050767544,0.112769758,0.18223472,0.302664135,0.164660525,0.194991456,0.167700976,0.061859556,0.06095,0.061399999999999996,0.08105000000000001,0.05715,0.134436781,0.151864577,0.173634468
2019-07-29 20:00:00+00:00,0.134963013,0.099906904,0.049416246,0.116967225,0.181024569,0.301305942,0.167045069,0.195682034,0.17400093,0.063970956,0.0611,0.0617,0.08172499999999999,0.057824999999999994,0.133592609,0.150575538,0.173744295
2019-07-30 20:00:00+00:00,0.139496209,0.099659704,0.051104465,0.121070925,0.188729441,0.291735904,0.170849913,0.196355278,0.179020176,0.065330678,0.061925,0.06115,0.08224999999999999,0.0584,0.140736774,0.148794387,0.170502186
2019-07-31 20:00:00+00:00,0.1484064,0.100461513,0.050468023,0.11268316,0.185745802,0.292720749,0.17809786,0.196784434,0.195047279,0.065305052,0.0608,0.06155,0.08275,0.0584,0.141231152,0.152591507,0.170481156
2019-08-01 20:00:00+00:00,0.156817941,0.104908278,0.055480739,0.1270067,0.230481618,0.327101086,0.187238832,0.20705556,0.181208911,0.071618939,0.06625,0.06425,0.0858,0.05835,0.13877605,0.152395704,0.169481419
2019-08-02 20:00:00+00:00,0.157302267,0.106484239,0.055012734,0.125739948,0.209977162,0.325851039,0.191502355,0.207849652,0.202145093,0.071516556,0.07105,0.06895,0.09405,0.05995,0.156638445,0.162029271,0.177432375
2019-08-05 20:00:00+00:00,0.186236111,0.114653078,0.058835551,0.135246399,0.186803751,0.336394179,0.21682843,0.227158217,0.214481441,0.080040808,0.0776,0.07795,0.10105,0.06325,0.167453615,0.170898914,0.184523622
2019-08-06 20:00:00+00:00,0.17101293,0.113591434,0.058637988,0.130733374,0.233187219,0.331728941,0.204503267,0.221599808,0.202029195,0.079224069,0.07305,0.08005000000000001,0.098325,0.0636,0.167437495,0.179054735,0.18856504
2019-08-07 20:00:00+00:00,0.170365209,0.122181639,0.063351306,0.139275916,0.227335358,0.34398028,0.203165637,0.218863978,0.214054939,0.082473417,0.07665,0.0786,0.10227499999999999,0.06655,0.166916316,0.177335123,0.185853189
2019-08-08 20:00:00+00:00,0.156112613,0.118683104,0.058670069,0.139334574,0.206362732,0.334122446,0.190135097,0.20927906,0.190761944,0.074377534,0.07465,0.07655,0.1008,0.06745,0.156049673,0.174591471,0.183296921
2019-08-09 20:00:00+00:00,0.161343693,0.120105065,0.059520586,0.133816423,0.21357879,0.331154661,0.194312381,0.215171799,0.195102586,0.076289347,0.07805,0.07395,0.09970000000000001,0.06655,0.162550744,0.167982971,0.184519459
2019-08-12 20:00:00+00:00,0.175520139,0.12727886,0.05976712,0.142521599,0.222520572,0.326842317,0.207384269,0.216583652,0.212003327,0.081214782,0.08042500000000001,0.07725,0.1038,0.06724999999999999,0.163734682,0.167982971,0.178250222
2019-08-13 20:00:00+00:00,0.161870058,0.12514593,0.059672581,0.13972052,0.216417506,0.325426382,0.196526239,0.208840686,0.203102232,0.077062013,0.0758,0.07814999999,0.10145,0.067075,0.162963305,0.173308966,0.190236312
2019-08-14 20:00:00+00:00,0.184943953,0.132243673,0.063286046,0.14146593,0.248483631,0.339780119,0.217129237,0.221805234,0.221817674,0.084414782,0.079675,0.07735,0.1045,0.06705,0.177150816,0.167480005,0.190231331
2019-08-15 20:00:00+00:00,0.184106995,0.137973895,0.063301288,0.147625744,0.240893355,0.344548681,0.215949651,0.222137465,0.22757012,0.082887156,0.07925,0.07844999999999999,0.1065,0.06684999999999999,0.178485666,0.178465947,0.194308382
2019-08-16 20:00:00+00:00,0.173394641,0.133468743,0.061446604,0.140494288,0.257798351,0.334737131,0.204434818,0.214836086,0.211807795,0.079071347,0.07685,0.07855000000000001,0.1065,0.0665,0.167657048,0.183275902,0.198492724
2019-08-19 20:00:00+00:00,0.164159204,0.129585252,0.061111237,0.128411509,0.219956651,0.313219425,0.193838995,0.209605195,0.189329262,0.075028804,0.0745,0.07814999999,0.10339999999999999,0.066,0.158494884,0.177490424,0.192905476
2019-08-20 20:00:00+00:00,0.16943159,0.131459852,0.060969211,0.133064709,0.229535523,0.315022787,0.200045767,0.208255365,0.198680558,0.076489165,0.07435,0.07745,0.101675,0.06575,0.15997766,0.169982548,0.185796618
2019-08-21 20:00:00+00:00,0.161122855,0.1283492,0.060418186,0.132675832,0.225842902,0.31503139,0.192894609,0.206203499,0.198852893,0.074974099,0.07345,0.07695,0.09949999999999999,0.06525,0.154554318,0.171107282,0.184688348
2019-08-22 20:00:00+00:00,0.164590746,0.1283366,0.06162762,0.132234465,0.225607883,0.315445774,0.196516879,0.20914465,0.198321065,0.072856324,0.0735,0.0766,0.09974999999999999,0.06465,0.160936327,0.16814432,0.18073339
2019-08-23 20:00:00+00:00,0.181490697,0.13507268,0.061550232,0.147854637,0.24543486,0.325917919,0.212745732,0.224294359,0.210474981,0.0797916,0.07755,0.0776,0.10185000000000001,0.06465,0.170020622,0.169370447,0.181004916
2019-08-26 20:00:00+00:00,0.177284116,0.132937725,0.061286439,0.142799888,0.243853627,0.327902825,0.208733816,0.217230625,0.20701752,0.075947299,0.07707499999999999,0.08410000000000001,0.1081,0.0654,0.170606815,0.181213179,0.189472794
2019-08-27 20:00:00+00:00,0.183029523,0.1328208,0.06138786,0.152225511,0.24541943,0.322880819,0.212991944,0.2204808,0.209248818,0.07982912,0.07625,0.0833,0.106,0.06505,0.169424425,0.17539207,0.190184524
2019-08-28 20:00:00+00:00,0.177336116,0.1365205,0.063511813,0.150145627,0.242634441,0.31918609,0.209268837,0.219255375,0.209967441,0.077047624,0.07605,0.08220000000000001,0.105325,0.06495000000000001,0.170355726,0.174634207,0.191425657
2019-08-29 20:00:00+00:00,0.168668883,0.13591756,0.062178181,0.146580437,0.231526697,0.317066735,0.200059302,0.212588699,0.19808786,0.07362712,0.076,0.08275,0.10490000000000001,0.0664,0.160945689,0.177266028,0.192497534
2019-08-30 20:00:00+00:00,0.172226962,0.1367282,0.061879767,0.145347267,0.229816441,0.3239896,0.203017234,0.21486758,0.198996618,0.07475446,0.07629999999999999,0.0833,0.105075,0.066475,0.160315553,0.171239771,0.189365871
2019-09-03 20:00:00+00:00,0.177583967,0.13674448,0.062169137,0.153119418,0.234974325,0.3318944,0.209639372,0.21223678,0.202065651,0.079950279,0.07627499999000001,0.0825,0.1061,0.0673,0.164346383,0.169792101,0.186986399
2019-09-04 20:00:00+00:00,0.167984427,0.13414539,0.061115346,0.15778166,0.223759302,0.331347858,0.200027674,0.20620275,0.195203051,0.07679282,0.07337500000000001,0.08045,0.1018,0.0669,0.156163084,0.167371745,0.182798398
2019-09-05 20:00:00+00:00,0.160965558,0.1309764,0.061282516,0.145941548,0.219852446,0.328660161,0.191908818,0.2027937,0.191583348,0.0737158,0.07087500000000001,0.0793,0.099675,0.06605,0.150610115,0.167371745,0.181138901
2019-09-06 20:00:00+00:00,0.156613758,0.13006037,0.060890427,0.141244251,0.213889567,0.327424451,0.189176353,0.20153487,0.187478488,0.071024099,0.06915,0.0775,0.0981,0.0655,0.148090138,0.16015436,0.177703813
2019-09-09 20:00:00+00:00,0.157182995,0.1293672,0.060774639,0.13761309,0.214095004,0.330096735,0.191022093,0.20189432,0.187194344,0.070386639,0.067,0.0771,0.094925,0.065,0.147890204,0.156242004,0.175071521
2019-09-10 20:00:00+00:00,0.157391511,0.131094675,0.062007665,0.1326812,0.209712883,0.333900774,0.190768846,0.19820914,0.185418976,0.068310199,0.06542500000000001,0.0765,0.09267500000000001,0.0649,0.150140838,0.155404137,0.171491377
2019-09-11 20:00:00+00:00,0.154957372,0.12893016,0.064904455,0.135105588,0.209041655,0.333476025,0.186166158,0.19544296,0.184044865,0.06674233,0.06509999999999999,0.0768,0.091425,0.064,0.150119211,0.158397886,0.17213929
2019-09-12 20:00:00+00:00,0.151981125,0.1283676,0.061649911,0.137772827,0.207158023,0.342599961,0.18373579,0.1946266,0.181523023,0.0656731,0.065975,0.07665,0.092525,0.0639,0.145617277,0.158476964,0.173397679
2019-09-13 20:00:00+00:00,0.152519916,0.13228716,0.06242413,0.133531023,0.209888869,0.342883309,0.186076232,0.1941274,0.179873786,0.06788832,0.06509999999999999,0.0759,0.0917,0.06385,0.144654288,0.157114721,0.171837974
2019-09-16 20:00:00+00:00,0.156479186,0.13249912,0.06403959,0.141685804,0.217726672,0.378482167,0.191067604,0.19634782,0.183880079,0.065454245,0.066,0.07545,0.09295,0.0643,0.149788758,0.157114721,0.173355048
2019-09-17 20:00:00+00:00,0.157776276,0.13316718,0.063066604,0.142966976,0.223332286,0.38069258,0.191134162,0.19774798,0.181299255,0.06543324,0.06605,0.07595,0.09385,0.06455,0.150025753,0.156451119,0.175089476
2019-09-18 20:00:00+00:00,0.155872539,0.12995663,0.062890832,0.141656748,0.213362279,0.36401258,0.190184034,0.19742086,0.183531013,0.067332205,0.065325,0.07535,0.09494999999999999,0.06465,0.149922401,0.158080309,0.174977876
2019-09-19 20:00:00+00:00,0.1557502,0.130746,0.062651,0.1416388,0.2124896,0.363114245,0.189047,0.1980556,0.1855124,0.064813399,0.065475,0.0754,0.09525,0.0633,0.145598881,0.157777182,0.174976098
2019-09-20 20:00:00+00:00,0.1650265,0.132863442,0.062438751,0.153696499,0.224916185,0.357556064,0.196000145,0.195899606,0.211628514,0.063026947,0.0646,0.0755,0.0935,0.06285,0.14378442,0.15798153,0.173688112
2019-09-23 20:00:00+00:00,0.161796571,0.133644663,0.0624092,0.153955,0.21921096,0.352595548,0.196133542,0.19446853,0.184790914,0.06447301,0.0661,0.0761,0.09445,0.0633,0.150909416,0.15798153,0.173771267
2019-09-24 20:00:00+00:00,0.1686731,0.133139163,0.063166607,0.158810814,0.223678,0.351779612,0.200804357,0.19838803,0.189409285,0.065318336,0.0674,0.0753,0.094875,0.0634,0.151024619,0.158958542,0.173637462
2019-09-25 20:00:00+00:00,0.165095999,0.131202605,0.063296223,0.150897428,0.223679,0.352638645,0.195935171,0.197353307,0.190083142,0.063575015,0.06775,0.07605,0.096775,0.0632,0.156007406,0.162776833,0.177925277
2019-09-26 20:00:00+00:00,0.166561799,0.130586147,0.063114675,0.146933614,0.218029011,0.34918987,0.198751271,0.198407384,0.188844428,0.06620781,0.0678,0.07695,0.09699999999999999,0.0636,0.15366599,0.16274661,0.176274625
2019-09-27 20:00:00+00:00,0.170777857,0.131382989,0.063245634,0.140973314,0.261825984,0.353523825,0.204184371,0.2029765,0.194223885,0.066969784,0.06735000000000001,0.07519999999999999,0.095725,0.06269999999999999,0.152202021,0.165709076,0.177781128
2019-09-30 20:00:00+00:00,0.164106699,0.1295556,0.061063911,0.1400148,0.224528904,0.356824077,0.197715199,0.199142102,0.1892614,0.063164,0.0675,0.07519999999999999,0.09545,0.06285,0.149821972,0.166695484,0.178203484
2019-10-01 20:00:00+00:00,0.176477323,0.1338002,0.064070415,0.140732744,0.234625635,0.35924817,0.207312601,0.202541338,0.192021407,0.069226231,0.0693,0.07665,0.096425,0.062400000000000004,0.156612561,0.163050098,0.178203484
2019-10-02 20:00:00+00:00,0.188710457,0.132589694,0.064732311,0.143568292,0.266871292,0.367226838,0.21827195,0.204232215,0.198447428,0.073518989,0.07137500000000001,0.07689999999000001,0.09935000000000001,0.0626,0.172977822,0.165290004,0.17949204
2019-10-03 20:00:00+00:00,0.181308835,0.133597263,0.063784678,0.145906142,0.234419903,0.366501751,0.211316785,0.199156692,0.195355121,0.072338947,0.0719,0.07735,0.09970000000000001,0.06269999999999999,0.173544799,0.174447685,0.182177761
2019-10-04 20:00:00+00:00,0.170303314,0.133042915,0.063746691,0.1438045,0.2268952,0.364188141,0.2015778,0.200376235,0.191432857,0.068113999,0.06912499999999999,0.07665,0.0973,0.06205,0.165081795,0.174077944,0.182503599
2019-10-07 20:00:00+00:00,0.172378807,0.130923873,0.063891626,0.142709421,0.230194397,0.361952974,0.203813128,0.200342769,0.191514867,0.068456673,0.06915,0.0771,0.096825,0.06245,0.160612534,0.173031598,0.182503599
2019-10-08 20:00:00+00:00,0.184558164,0.131990863,0.063880962,0.149094371,0.24322625,0.36630289,0.213977342,0.206706066,0.201280042,0.073771999,0.0702,0.077,0.09762499999999999,0.062400000000000004,0.167762968,0.169727068,0.182499566
2019-10-09 20:00:00+00:00,0.177331387,0.131075973,0.063357726,0.143872125,0.243861462,0.36604059,0.20729245,0.202009679,0.195102375,0.07238921,0.06924999999999999,0.07715,0.097225,0.06215,0.16379452,0.173134219,0.18413492
2019-10-10 20:00:00+00:00,0.171788,0.12966021,0.062519071,0.1427746,0.233931485,0.365298219,0.203206314,0.198908846,0.194719542,0.071707578,0.06849999999999999,0.07675,0.09695000000000001,0.061950000000000005,0.159143459,0.17131753,0.182278045
2019-10-11 20:00:00+00:00,0.163420391,0.12851621,0.064342369,0.139831991,0.231491067,0.359547658,0.194723928,0.196338843,0.185395378,0.067928705,0.06665,0.07615,0.0966,0.061849999999999995,0.150298616,0.167212977,0.180992414
2019-10-14 20:00:00+00:00,0.160079642,0.127802926,0.064266298,0.140636178,0.237372957,0.362715122,0.193426592,0.193438,0.182371107,0.065845763,0.06545,0.07425,0.09244999999999999,0.061849999999999995,0.149811422,0.167212977,0.177852221
2019-10-15 20:00:00+00:00,0.153371339,0.12812171,0.064164117,0.135827825,0.216140803,0.362281264,0.186567955,0.187631215,0.178529928,0.062634873,0.0658,0.07339999999999999,0.092525,0.06205,0.142626601,0.157681122,0.172386218
2019-10-16 20:00:00+00:00,0.154105885,0.1257128,0.063120971,0.135828214,0.217531885,0.3618804,0.189686428,0.189724379,0.180205028,0.058736499,0.06415,0.0727,0.0928,0.06275,0.144308183,0.157704473,0.173183866
2019-10-17 20:00:00+00:00,0.152988089,0.12614542,0.062282819,0.135005192,0.218557741,0.35799411,0.187402232,0.190457056,0.182022892,0.060864925,0.0638,0.0726,0.091725,0.06344999999999999,0.145683182,0.156689929,0.172341946
2019-10-18 20:00:00+00:00,0.155478249,0.12596446,0.061364035,0.1346957,0.213585,0.353923809,0.1903695,0.191459538,0.1815195,0.059610239,0.06280000000000001,0.07150000000000001,0.09022500000000001,0.063875,0.146604707,0.157368571,0.17169594
2019-10-21 20:00:00+00:00,0.151410178,0.12661695,0.061560865,0.130371937,0.213291598,0.349239352,0.185827935,0.188120923,0.176125099,0.0604276,0.062400000000000004,0.071,0.0901,0.06434999999999999,0.144029974,0.156004874,0.16745342
2019-10-22 20:00:00+00:00,0.154008971,0.12523296,0.061584771,0.127854571,0.214904571,0.348378419,0.189446085,0.183090082,0.175861885,0.0581816,0.061849999999999995,0.07035,0.0894,0.064075,0.143154148,0.156004874,0.166133163
2019-10-23 20:00:00+00:00,0.151862508,0.122394599,0.058934876,0.128226891,0.210654977,0.340516634,0.186398171,0.185581569,0.174387828,0.0590891,0.061900000000000004,0.0706,0.08960000000000001,0.06372499999999999,0.142858529,0.156152238,0.165552499
2019-10-24 20:00:00+00:00,0.151907542,0.121570399,0.05727586,0.129435832,0.2143017,0.334622679,0.186849921,0.183251574,0.166548214,0.0576472,0.061900000000000004,0.06955,0.08962500000000001,0.062975,0.140805589,0.15486596,0.164178118
2019-10-25 20:00:00+00:00,0.148111892,0.12066112,0.056059301,0.128835182,0.209575135,0.329538266,0.178158346,0.178485166,0.174292317,0.05797678,0.0613,0.06745,0.0882,0.06275,0.140462652,0.155801782,0.165295731
2019-10-28 20:00:00+00:00,0.147735657,0.12149808,0.056204742,0.126456228,0.212381704,0.330875724,0.1783307,0.179325753,0.168702999,0.05741356,0.061375,0.0679,0.087625,0.063,0.140925159,0.153281082,0.166242555
2019-10-29 20:00:00+00:00,0.148861925,0.120059499,0.056023988,0.125783125,0.212572712,0.332756438,0.182286,0.181856712,0.17911735,0.06094544,0.0613,0.0674,0.08735,0.0637,0.143222091,0.153586917,0.166468593
2019-10-30 20:00:00+00:00,0.146190857,0.120176,0.055567539,0.126213907,0.213401978,0.329037125,0.179610432,0.182763584,0.176393357,0.06414415,0.06105000000000001,0.0676,0.08779999999999999,0.0643,0.143066442,0.156455954,0.168500194
2019-10-31 20:00:00+00:00,0.149935642,0.12016558,0.056235619,0.130419864,0.22335775,0.331756486,0.18182003,0.180823615,0.179339553,0.062727324,0.06335,0.06849999999999999,0.08935,0.06405,0.145231369,0.152775667,0.165107365
2019-11-01 20:00:00+00:00,0.146748571,0.119572,0.056373292,0.128290685,0.209112214,0.329219038,0.177279642,0.181440769,0.174077628,0.06218484,0.06295,0.0688,0.089775,0.064225,0.141462455,0.15399977,0.16640113
2019-11-04 21:00:00+00:00,0.146409902,0.11917643,0.054954449,0.125658598,0.209547289,0.323629911,0.176356396,0.185646882,0.179286321,0.0617515,0.062775,0.06765,0.08925000000000001,0.06405,0.139055551,0.15399977,0.17006117
2019-11-05 21:00:00+00:00,0.148794921,0.11957585,0.055024323,0.122195803,0.210529417,0.322697622,0.180086507,0.18617723,0.182771671,0.06314097,0.063125,0.06755,0.08855,0.06344999999999999,0.138853931,0.155003744,0.172384785
2019-11-06 21:00:00+00:00,0.148817228,0.1195658,0.055753126,0.121218794,0.216021114,0.322799917,0.178540205,0.185675697,0.179427549,0.062590799,0.062775,0.06835,0.08785,0.06365,0.139439582,0.156698476,0.171333125
2019-11-07 21:00:00+00:00,0.148462499,0.12632736,0.057797022,0.11635235,0.2168403,0.3202368,0.1786492,0.185632282,0.185335399,0.06339834,0.063025,0.0682,0.08805,0.0649,0.138946642,0.155394636,0.170270741
2019-11-08 21:00:00+00:00,0.148057935,0.12445353,0.057362,0.112062587,0.215192117,0.319507918,0.178033232,0.183659061,0.179913142,0.06049015,0.062875,0.0669,0.08814999999999999,0.06535,0.141087012,0.155929529,0.170448387
2019-11-11 21:00:00+00:00,0.148556067,0.124501,0.056781984,0.1092515,0.213166028,0.321150295,0.178735214,0.18749482,0.183800485,0.0603578,0.062725,0.06765,0.088725,0.06505,0.141659992,0.155723338,0.175758665
2019-11-12 21:00:00+00:00,0.148271114,0.12445613,0.056366639,0.10788885,0.216439885,0.320574736,0.178530423,0.18810891,0.182764392,0.05993896,0.0629,0.06785000000000001,0.088675,0.06525,0.139422565,0.154873952,0.173084012
2019-11-13 21:00:00+00:00,0.148676914,0.123315,0.055796033,0.109561028,0.214082857,0.320912247,0.1796916,0.190904,0.184689885,0.060568699,0.06417500000000001,0.0696,0.08985,0.0658,0.140118747,0.15889467,0.177531332
2019-11-14 21:00:00+00:00,0.148661953,0.123736962,0.055385839,0.110562021,0.212373446,0.318470377,0.178948428,0.191882833,0.182016417,0.061795049,0.0655,0.0696,0.091875,0.0654,0.140872709,0.158356847,0.177985644
2019-11-15 21:00:00+00:00,0.144671285,0.1227672,0.055415817,0.108776828,0.204994871,0.310984869,0.173807989,0.188204725,0.180080157,0.05943165,0.064025,0.06845,0.0928,0.06559999999999999,0.137284925,0.155577103,0.174718532
2019-11-18 21:00:00+00:00,0.144407954,0.121384687,0.055674533,0.112425925,0.209364712,0.315000222,0.1729169,0.187152375,0.1778959,0.059770912,0.06282499999999999,0.06865,0.090725,0.06559999999999999,0.138100606,0.154773209,0.171027484
2019-11-19 21:00:00+00:00,0.146618181,0.119197866,0.054908603,0.113248264,0.21002595,0.325074914,0.174399907,0.189845133,0.1749578,0.0603476,0.06282499999999999,0.06849999999999999,0.090875,0.06605,0.139659958,0.154822846,0.168447766
2019-11-20 21:00:00+00:00,0.148769531,0.117795,0.05555792,0.111973028,0.220583357,0.319532634,0.17648266,0.189588145,0.174255971,0.061525808,0.063075,0.06875,0.09117499999999999,0.0663,0.141858956,0.156903742,0.169906139
2019-11-21 21:00:00+00:00,0.151413127,0.118719,0.055456857,0.1105775,0.210611532,0.308410444,0.180680089,0.190254225,0.175262128,0.0611976,0.063175,0.07,0.091325,0.0663,0.143034215,0.15756156,0.173247946
2019-11-22 21:00:00+00:00,0.148959681,0.118297375,0.055262942,0.110282289,0.20928675,0.307187828,0.179559544,0.19136385,0.1761005,0.05896787,0.06275,0.0689,0.091,0.0661,0.143820049,0.157639461,0.172690263
2019-11-25 21:00:00+00:00,0.144472763,0.119078533,0.055776904,0.105561942,0.206384342,0.3071156,0.174132571,0.187980133,0.172047999,0.058065333,0.061524999999999996,0.06745,0.08915,0.06565,0.140297198,0.155438825,0.172684247
2019-11-26 21:00:00+00:00,0.142490168,0.11876825,0.055575619,0.107107117,0.203300046,0.303695473,0.171909553,0.189967262,0.175722964,0.060064675,0.058575,0.0667,0.0868,0.065,0.139678402,0.153527473,0.174055562
2019-11-27 21:00:00+00:00,0.143023045,0.1181836,0.055592888,0.102996699,0.205066174,0.302793295,0.17109785,0.190640875,0.1750314,0.059061008,0.057325,0.06634999999999999,0.08435000000000001,0.06394999999999999,0.139729033,0.151750476,0.172474714
2019-11-29 18:00:00+00:00,0.1470329,0.116126108,0.055544577,0.107488796,0.208283674,0.321964965,0.17514315,0.194474425,0.182268564,0.060365391,0.057800000000000004,0.0665,0.08385,0.064,0.142665764,0.152188751,0.178673393
2019-12-02 21:00:00+00:00,0.155685499,0.12014245,0.056965828,0.107891385,0.209420014,0.322546231,0.184160664,0.194214499,0.179373714,0.063701999,0.058625,0.0677,0.084925,0.06375,0.153074918,0.149559894,0.176366413
2019-12-03 21:00:00+00:00,0.162086475,0.122680387,0.056855119,0.113629035,0.214931192,0.321304819,0.189725316,0.196168533,0.183817881,0.067843766,0.061575,0.06745,0.08752499999999999,0.0637,0.157543462,0.151050731,0.176504994
2019-12-04 21:00:00+00:00,0.156938445,0.121708333,0.056410996,0.112999442,0.226519428,0.314109644,0.18702456,0.194990133,0.181376228,0.064892033,0.06095,0.06945,0.08800000000000001,0.0637,0.150186259,0.155861009,0.179250188
2019-12-05 21:00:00+00:00,0.1555512,0.12161,0.056760542,0.112767857,0.212084607,0.301107888,0.185868432,0.191762375,0.185425014,0.061840549,0.059824999999999996,0.0695,0.08805,0.0639,0.153025455,0.154310099,0.174409478
2019-12-06 21:00:00+00:00,0.150572472,0.1230815,0.057993369,0.107192742,0.203246285,0.2989252,0.179495299,0.189622533,0.177357257,0.061869366,0.059800000000000006,0.0688,0.0885,0.06365,0.14630777,0.15463116,0.17470016
2019-12-09 21:00:00+00:00,0.156015004,0.124658791,0.058914833,0.10733175,0.205217437,0.298974479,0.18436385,0.190805,0.17872285,0.062694641,0.06055,0.0691,0.0897,0.0637,0.147940576,0.154966405,0.17326585
2019-12-10 21:00:00+00:00,0.155597704,0.126102749,0.056150595,0.107989067,0.204904396,0.290148244,0.183514771,0.189671275,0.178186714,0.060805299,0.060899999999999996,0.06915,0.089725,0.0641,0.149822495,0.154191772,0.172614762
2019-12-11 21:00:00+00:00,0.153592022,0.124111145,0.055520785,0.111326028,0.202025787,0.291439619,0.181121035,0.19132305,0.177586828,0.064917583,0.060125000000000005,0.07014999999999999,0.08902499999999999,0.06394999999999999,0.149235198,0.156611344,0.174788904
2019-12-12 21:00:00+00:00,0.147540827,0.125593083,0.056131873,0.109165792,0.203181785,0.287392,0.176927857,0.193947866,0.176890342,0.0574318,0.0594,0.0704,0.08862500000000001,0.06415,0.143930322,0.156238082,0.173418172
2019-12-13 21:00:00+00:00,0.142778937,0.12152315,0.053030871,0.108635491,0.1982913,0.285059565,0.171662544,0.187933,0.181100689,0.056659462,0.058525,0.0689,0.08585000000000001,0.0635,0.138320512,0.152248494,0.172882215
2019-12-16 21:00:00+00:00,0.139113549,0.114553591,0.048947873,0.109916785,0.199409785,0.280397066,0.166457671,0.1859034,0.181100689,0.052922533,0.05755,0.0677,0.08497500000000001,0.0637,0.131044205,0.148533127,0.169833125
2019-12-17 21:00:00+00:00,0.140618816,0.114790333,0.050369523,0.110090049,0.194890164,0.273810342,0.166485116,0.186999683,0.168702821,0.05363402,0.05745,0.06795,0.08349999999999999,0.064525,0.135300628,0.1464198,0.169027064
2019-12-18 21:00:00+00:00,0.141338,0.1157112,0.0519576,0.1089028,0.20209,0.273250292,0.1664235,0.18796,0.1862288,0.0550945,0.056924999999999996,0.06795,0.08387499999999999,0.06415,0.136635078,0.146946448,0.171650326
2019-12-19 21:00:00+00:00,0.140019599,0.115127064,0.05323042,0.112083542,0.257661428,0.269943885,0.165440342,0.186250493,0.173400285,0.058938842,0.05685,0.06835,0.08282500000000001,0.06365,0.136940559,0.147899091,0.171972519
2019-12-20 21:00:00+00:00,0.141707428,0.115479672,0.054110913,0.110114914,0.214109442,0.272864533,0.165542357,0.183842184,0.178859885,0.059308336,0.0553,0.067,0.08234999999999999,0.06305,0.133447786,0.149011732,0.172422837
2019-12-23 21:00:00+00:00,0.142472742,0.115502168,0.055241594,0.115089785,0.195647542,0.271594285,0.167436742,0.183320063,0.167277314,0.059126863,0.0553,0.067,0.08262499999999999,0.063375,0.133780932,0.148093274,0.171046992
2019-12-24 18:00:00+00:00,0.142607828,0.121066587,0.055397568,0.121560214,0.259494,0.270640828,0.167586,0.183997127,0.160990571,0.060890084,0.0554,0.06785000000000001,0.08234999999999999,0.0636,0.133780932,0.149810034,0.173087141
2019-12-26 21:00:00+00:00,0.141264185,0.116506955,0.053841475,0.130467742,0.235802199,0.264998577,0.165140014,0.187473795,0.172251851,0.059050484,0.0557,0.06745,0.082525,0.063,0.133780932,0.149641232,0.173087141
2019-12-27 21:00:00+00:00,0.144735942,0.114492193,0.053622878,0.125583242,0.199982414,0.262447958,0.168632942,0.189119854,0.171242298,0.059978231,0.055975000000000004,0.06765,0.08295,0.063275,0.133983335,0.148696973,0.174878636
2019-12-30 21:00:00+00:00,0.1494896,0.117637999,0.054915045,0.1265468,0.2083692,0.262702742,0.1733944,0.190446565,0.179684814,0.061881736,0.057350000000000005,0.06815,0.0842,0.0633,0.140166005,0.151321521,0.174004403
2019-12-31 21:00:00+00:00,0.144033673,0.11697798,0.053924918,0.12945966,0.192358287,0.270920457,0.17041191,0.190156372,0.160547347,0.059705736,0.059074999999999996,0.06860000000000001,0.08537499999999999,0.06372499999999999,0.140166005,0.151321521,0.173598649
2020-01-02 21:00:00+00:00,0.13929365,0.115913837,0.054853309,0.129273821,0.2044313,0.271697161,0.16446351,0.188494109,0.176531904,0.056478699,0.05795,0.0679,0.08515,0.063825,0.132373547,0.151321521,0.174475667
2020-01-03 21:00:00+00:00,0.145698928,0.119922689,0.056881775,0.129928267,0.205079825,0.282770285,0.1709031,0.195219204,0.179313095,0.058278863,0.05995,0.07125,0.08710000000000001,0.063825,0.135773578,0.151321521,0.17601092
2020-01-06 21:00:00+00:00,0.144293214,0.11910896,0.055657186,0.134322714,0.206983996,0.29503899,0.170637514,0.193369,0.172311931,0.059158605,0.05805,0.07155,0.087875,0.0638,0.138634873,0.156983256,0.178316381
2020-01-07 21:00:00+00:00,0.1441216,0.118573189,0.055649827,0.132751837,0.216206143,0.295495977,0.17080851,0.192026818,0.175392948,0.060016184,0.056924999999999996,0.07025,0.086625,0.06365,0.137049886,0.15003111,0.175738391
2020-01-08 21:00:00+00:00,0.139128314,0.120754266,0.055014752,0.124536107,0.18770882,0.301662742,0.166439999,0.1903881,0.178495,0.058969152,0.056799999999999996,0.07155,0.0866,0.0635,0.134242972,0.157548703,0.178521943
2020-01-09 21:00:00+00:00,0.13623665,0.115341473,0.052864623,0.1145485,0.200576845,0.295455961,0.162591687,0.187085427,0.159220899,0.056173789,0.05595,0.06965,0.0848,0.06095,0.132270078,0.149945043,0.174493834
2020-01-10 21:00:00+00:00,0.136861571,0.110720827,0.052741827,0.1160137,0.226109385,0.289878139,0.165977428,0.188283036,0.167352699,0.056705805,0.0555,0.0681,0.084,0.060149999999999995,0.131787102,0.150364684,0.173777747
2020-01-13 21:00:00+00:00,0.133652449,0.108662024,0.052228811,0.108452525,0.199239559,0.295084952,0.163903516,0.186038836,0.166963374,0.055869189,0.0553,0.0678,0.08315,0.05885,0.13328315,0.150364684,0.172080454
2020-01-14 21:00:00+00:00,0.134089245,0.109925037,0.052127017,0.106838907,0.213174294,0.28368899,0.166455678,0.189110854,0.169915322,0.055360263,0.055175,0.06805,0.08282500000000001,0.058449999999999995,0.132627786,0.148889986,0.173046322
2020-01-15 21:00:00+00:00,0.133247794,0.110440365,0.05287779,0.11348956,0.190977685,0.284384082,0.164765616,0.186152386,0.172625194,0.053707789,0.05505,0.06695000000000001,0.0819,0.05835,0.131195258,0.150007273,0.172743179
2020-01-16 21:00:00+00:00,0.131670571,0.111228743,0.052213191,0.112716328,0.189379466,0.2814824,0.161091571,0.183548636,0.161869999,0.054254799,0.05355000000000001,0.06525,0.079525,0.057050000000000003,0.128857128,0.148385614,0.17058812
2020-01-17 21:00:00+00:00,0.131687401,0.112326241,0.052153882,0.113225028,0.191557716,0.277903863,0.160694142,0.181098763,0.165594731,0.055175376,0.052975,0.06285,0.078625,0.057325,0.127451643,0.146367036,0.167796446
2020-01-21 21:00:00+00:00,0.134040875,0.113575466,0.0530289,0.11317755,0.195143587,0.280589885,0.163540925,0.191973897,0.180436762,0.057103547,0.053375000000000006,0.0649,0.079025,0.05595,0.129040443,0.148880796,0.17810729
2020-01-22 21:00:00+00:00,0.135451161,0.1130384,0.053377441,0.110977542,0.192188,0.288977857,0.16476025,0.18898425,0.169771847,0.056559288,0.05305,0.06434999999999999,0.079225,0.055925,0.130959343,0.146193715,0.174866742
2020-01-23 21:00:00+00:00,0.135404218,0.113389625,0.05460715,0.110300857,0.190845712,0.295993244,0.162611028,0.19465787,0.174026984,0.058922559,0.055075000000000006,0.06445000000000001,0.080925,0.0559,0.133933917,0.150179263,0.182043951
2020-01-24 21:00:00+00:00,0.142325809,0.11511878,0.055025166,0.117949035,0.194637599,0.309162328,0.171385264,0.198171636,0.176155908,0.06299108,0.05495,0.066,0.08072499999999999,0.056075,0.128631583,0.14948802,0.180323034
2020-01-27 21:00:00+00:00,0.155208063,0.119968201,0.05568198,0.118866746,0.207576819,0.320635238,0.184521464,0.213146411,0.191636299,0.06703956,0.057775,0.0684,0.0849,0.057699999999999994,0.143633036,0.160265685,0.180323034
2020-01-28 21:00:00+00:00,0.14719739,0.118962114,0.054909206,0.113382971,0.202038691,0.316668888,0.1752082,0.210842522,0.182536547,0.06147072,0.0559,0.0679,0.085175,0.059000000000000004,0.136773995,0.160487669,0.180323034
2020-01-29 21:00:00+00:00,0.146952272,0.120704857,0.0553412,0.114024371,0.20097468,0.317495263,0.175589342,0.203368045,0.200294148,0.05947768,0.054974999999999996,0.06895,0.083675,0.05865,0.134891276,0.156026939,0.188057899
2020-01-30 21:00:00+00:00,0.142125181,0.121195022,0.054098333,0.114184025,0.208729232,0.322019657,0.168586475,0.205191236,0.183236556,0.056931239,0.057225,0.07200000000000001,0.0873,0.0611,0.143619465,0.162756599,0.200594455
2020-01-31 21:00:00+00:00,0.155260072,0.122406746,0.0553447,0.119080021,0.24284184,0.336833726,0.183343328,0.218598218,0.19833242,0.060228899,0.059375,0.0736,0.089575,0.06280000000000001,0.147569176,0.15828566,0.201021034
2020-02-03 21:00:00+00:00,0.1519179,0.121869742,0.055104976,0.11478805,0.214951791,0.347053887,0.179176421,0.211837368,0.181417872,0.064428059,0.057300000000000004,0.07585,0.09065,0.06394999999999999,0.14108153,0.161181168,0.198714716
2020-02-04 21:00:00+00:00,0.141311018,0.118659742,0.053008344,0.110022942,0.190894799,0.336756495,0.168760285,0.205128774,0.178493019,0.056896871,0.054299999999999994,0.0737,0.08744999999999999,0.0635,0.133940056,0.15856475,0.1918092
2020-02-05 21:00:00+00:00,0.137212118,0.113974153,0.052666984,0.106613694,0.205769799,0.326281587,0.168823519,0.201944863,0.175539682,0.055117539,0.053325,0.0726,0.0851,0.0634,0.13033451,0.153901329,0.192731807
2020-02-06 21:00:00+00:00,0.13525934,0.111546023,0.051994109,0.107166642,0.191114635,0.321020444,0.168137728,0.200953875,0.164915198,0.05422344,0.05355000000000001,0.07375,0.085175,0.06335,0.1278545,0.150340602,0.190932022
2020-02-07 21:00:00+00:00,0.14056719,0.115736131,0.052392722,0.109314992,0.202371698,0.3228544,0.173750107,0.203643263,0.178694402,0.05621054,0.054275000000000004,0.07355,0.08852499999999999,0.06405,0.131152463,0.152956806,0.190021889
2020-02-10 21:00:00+00:00,0.13775099,0.118147855,0.053777777,0.109802849,0.199128632,0.334534863,0.17241025,0.196328636,0.173456504,0.054577071,0.054375,0.0745,0.08967499999999999,0.0632,0.131044125,0.154230233,0.187264485
2020-02-11 21:00:00+00:00,0.138376713,0.116221285,0.054016271,0.109350796,0.2045861,0.324388253,0.174883528,0.19144309,0.172101337,0.056035919,0.053075000000000004,0.07365000000000001,0.087675,0.061900000000000004,0.128907605,0.154230233,0.183659317
2020-02-12 21:00:00+00:00,0.134204663,0.114846044,0.053400753,0.108691021,0.193849056,0.314997171,0.167833857,0.188046813,0.168415674,0.054081696,0.052125000000000005,0.07425,0.08635,0.0601,0.128570041,0.149592164,0.180966333
2020-02-13 21:00:00+00:00,0.135915772,0.115201276,0.053365,0.111130692,0.193361628,0.316919993,0.169340764,0.192911499,0.174561846,0.053876844,0.054325,0.0766,0.08717499999999999,0.060899999999999996,0.131529773,0.149181431,0.182231265
2020-02-14 21:00:00+00:00,0.134614772,0.115648523,0.053081523,0.115905714,0.1919554,0.311685936,0.169679885,0.190973406,0.170481123,0.053795999,0.053625,0.0755,0.087875,0.06085,0.131433204,0.149651026,0.18240355
2020-02-18 21:00:00+00:00,0.13826622,0.117655317,0.052133298,0.121382589,0.196684064,0.310461166,0.173676714,0.189650509,0.174430727,0.054810232,0.052675,0.07605,0.08685000000000001,0.06035,0.134111125,0.154188872,0.182111913
2020-02-19 21:00:00+00:00,0.1361672,0.118231639,0.052147746,0.120197721,0.167254059,0.292272806,0.172237321,0.186562604,0.171496203,0.053869615,0.054725,0.0757,0.08654999999999999,0.06035,0.132699915,0.152603213,0.180199947
2020-02-20 21:00:00+00:00,0.141219631,0.121167366,0.052105733,0.117612937,0.1988128,0.294469965,0.178568324,0.191043663,0.179600441,0.0539697,0.057325,0.08025,0.0901,0.06055,0.135672148,0.153327025,0.18092788
2020-02-21 21:00:00+00:00,0.148794081,0.124261714,0.051892976,0.124899928,0.203030656,0.30327558,0.189791428,0.195656327,0.184052956,0.055375316,0.057999999999999996,0.08285000000000001,0.09175000000000001,0.06175,0.14306361,0.157721218,0.185729924
2020-02-24 21:00:00+00:00,0.176363018,0.132326507,0.053664403,0.132441787,0.237076,0.314851256,0.2127168,0.208406199,0.205122244,0.0647644,0.062325,0.08560000000000001,0.09634999999999999,0.0634,0.165183661,0.157721218,0.195192221
2020-02-25 21:00:00+00:00,0.19305119,0.132877071,0.055107428,0.13575675,0.245940842,0.335465125,0.224691868,0.216904231,0.210466774,0.073787668,0.06265,0.08380000000000001,0.0962,0.06417500000000001,0.178751166,0.176703045,0.196904009
2020-02-26 21:00:00+00:00,0.194226177,0.133702777,0.054487009,0.131927932,0.265852717,0.336693099,0.226077894,0.214234315,0.209163576,0.075764736,0.0641,0.08785,0.09910000000000001,0.06525,0.173776477,0.190537095,0.209554329
2020-02-27 21:00:00+00:00,0.236137909,0.13811078,0.060931544,0.138971428,0.302779726,0.360435175,0.266696505,0.228839973,0.243222108,0.089371426,0.06787499999999999,0.08695,0.10102499999999999,0.067,0.204113084,0.20287732,0.211591391
2020-02-28 21:00:00+00:00,0.236043027,0.158183242,0.066156371,0.142379585,0.36195,0.365293203,0.26156771,0.247742736,0.242498017,0.101456568,0.077425,0.0894,0.11095000000000001,0.070925,0.242000719,0.25470283,0.248009121
2020-03-02 21:00:00+00:00,0.220370763,0.151253133,0.0646,0.141251499,0.305899217,0.359500462,0.238907505,0.221670863,0.251514329,0.094370421,0.0779,0.0904,0.1162,0.07235,0.219019902,0.233020867,0.233094422
2020-03-03 21:00:00+00:00,0.236538068,0.148288285,0.080658634,0.158859705,0.30957,0.368029506,0.256235594,0.222099347,0.298229704,0.101661536,0.07635,0.08900000000000001,0.11205,0.071,0.20620882,0.233681463,0.223287465
2020-03-04 21:00:00+00:00,0.216324618,0.14057408,0.089355871,0.143041885,0.275880263,0.3665344,0.242065494,0.209758968,0.212066428,0.093705326,0.07055,0.08635,0.1052,0.06965,0.200651763,0.221303933,0.214283545
2020-03-05 21:00:00+00:00,0.2541,0.150585873,0.08277772,0.169119875,0.308184789,0.379634309,0.280319489,0.227160147,0.221091798,0.106171757,0.0802,0.08900000000000001,0.10915,0.07065,0.220320971,0.203908761,0.207595228
2020-03-06 21:00:00+00:00,0.2810375,0.232976287,0.109742719,0.180550232,0.38817653,0.427750456,0.302721221,0.241099442,0.228877432,0.139097894,0.09317500000000001,0.09415,0.12275,0.07440000000000001,0.274033994,0.235971983,0.232459423
2020-03-09 20:00:00+00:00,0.344356527,0.282967665,0.179227757,0.221786348,0.583881315,0.634095475,0.355700526,0.266423178,0.290315362,0.194759663,0.13390000000000002,0.11605,0.16655,0.11130000000000001,0.318892174,0.300957016,0.294359893
2020-03-10 20:00:00+00:00,0.314580927,0.265212369,0.144168615,0.189161257,0.546010452,0.555061325,0.326556568,0.242623352,0.309076086,0.206465873,0.1065,0.10735,0.14525,0.1056,0.326978663,0.287423199,0.275410947
2020-03-11 20:00:00+00:00,0.352526109,0.265902533,0.195125833,0.200340837,0.505649421,0.576201931,0.351651515,0.261842631,0.376366637,0.213212084,0.117025,0.113,0.15095,0.10769999999999999,0.328335308,0.306758173,0.286770942
2020-03-12 20:00:00+00:00,0.441308563,0.294344285,0.185076514,0.215105596,0.588051705,0.656404062,0.430462947,0.325114947,0.391696628,0.216415047,0.13835,0.1365,0.203075,0.14025,0.424480434,0.359393856,0.328286623
2020-03-13 20:00:00+00:00,0.364818056,0.260599041,0.187818317,0.232307928,0.49613301,0.638962593,0.35578921,0.307885052,0.411990542,0.203877,0.11567500000000001,0.14205,0.201325,0.1336,0.436569158,0.420567503,0.388816038
2020-03-16 20:00:00+00:00,0.501562036,0.305062504,0.22905765,0.246126885,0.664530736,0.718607,0.499141857,0.381947568,0.303340714,0.249431605,0.134975,0.1664,0.22265000000000001,0.1423,0.499809011,0.459557785,0.42403829
2020-03-17 20:00:00+00:00,0.479738702,0.26500519,0.253800814,0.289686121,0.653753684,0.779601789,0.46779821,0.370153257,0.483633635,0.238725157,0.11805,0.17454999999999998,0.21635000000000001,0.15065,0.443983741,0.458047483,0.406402556
2020-03-18 20:00:00+00:00,0.516739318,0.340385579,0.322045563,0.349050571,0.786363526,0.965963359,0.510576842,0.413318031,0.514637403,0.305141768,0.124025,0.18364999999999998,0.2164,0.178175,0.491114935,0.452945579,0.428243186
2020-03-19 20:00:00+00:00,0.467744413,0.355759003,0.383010188,0.312354771,0.827540247,0.911492748,0.463188736,0.422021578,0.47307116,0.320472552,0.1268,0.21385,0.25239999999999996,0.23035,0.463895242,0.491939363,0.466920774
2020-03-20 20:00:00+00:00,0.4388918,0.3248662,0.35049728,0.3005034,0.6313352,1.019287512,0.44447,0.3899818,0.4113964,0.320845,0.11699999999999999,0.1912,0.228625,0.2157,0.395508252,0.491939363,0.466920774
2020-03-23 20:00:00+00:00,0.381838575,0.326615187,0.271288669,0.32078675,0.7448425,1.031758256,0.389798375,0.375783004,0.454890565,0.33492405,0.11502499999999999,0.20879999999999999,0.23135000000000003,0.22915,0.38382169,0.441744368,0.428626088
2020-03-24 20:00:00+00:00,0.3401045,0.270833932,0.245856404,0.316097,0.6479245,0.949143581,0.3371425,0.297184117,0.3420928,0.27361494,0.1001,0.1852,0.19125,0.2041,0.305868396,0.326882634,0.331881573
2020-03-25 20:00:00+00:00,0.365755799,0.25661411,0.230913351,0.31577775,0.620672749,0.857504181,0.361319025,0.290616813,0.35739695,0.25538578,0.09405,0.15289999999999998,0.1612,0.17045000000000002,0.325057116,0.300990506,0.285064762
2020-03-26 20:00:00+00:00,0.336752199,0.232310416,0.265655473,0.308468199,0.5388582,0.860223175,0.3326813,0.259070955,0.346038726,0.2256438,0.103925,0.14855000000000002,0.17647500000000002,0.16075,0.313789737,0.341722229,0.296867549
2020-03-27 20:00:00+00:00,0.368090575,0.2194376,0.243556215,0.295301249,0.6366489,0.877661725,0.361199075,0.304297888,0.379160132,0.2422298,0.1096,0.14535,0.17477499999999999,0.1506,0.358289234,0.335888583,0.30305632
2020-03-30 20:00:00+00:00,0.3498242,0.232320376,0.22990238,0.266689399,0.55544375,0.899104656,0.342388125,0.271123333,0.333716249,0.22969565,0.107525,0.139,0.174725,0.14932499999999999,0.333310257,0.331113185,0.304351341
2020-03-31 20:00:00+00:00,0.348439324,0.221336008,0.189282021,0.2447,0.533952225,0.819842887,0.339746899,0.267834955,0.37352765,0.232711125,0.1001,0.12244999999999999,0.1592,0.13835,0.318272501,0.311558087,0.28610459
2020-04-01 20:00:00+00:00,0.383829999,0.236052575,0.215579948,0.256944499,0.5601011,0.865266962,0.3699485,0.293206502,0.3792546,0.23903496,0.1035,0.1258,0.159575,0.13445000000000001,0.335096526,0.342409542,0.303635961
2020-04-02 20:00:00+00:00,0.36002225,0.230971329,0.19572992,0.263908109,0.579567949,0.868028365,0.347867946,0.283316419,0.364469127,0.22916798,0.09845000000000001,0.1253,0.157725,0.13385,0.333434625,0.346137808,0.286413535
2020-04-03 20:00:00+00:00,0.353186166,0.218488,0.187767926,0.262821937,0.538976831,0.824188187,0.341999107,0.282774077,0.351520914,0.235362,0.095925,0.13115,0.156175,0.13615,0.331261891,0.335323715,0.280229078
2020-04-06 20:00:00+00:00,0.32697875,0.216931904,0.155445315,0.27871125,0.506480759,0.799363331,0.315438214,0.262773688,0.3322749,0.212409309,0.091575,0.12905,0.15137499999999998,0.13897500000000002,0.298312101,0.301659924,0.257333049
2020-04-07 20:00:00+00:00,0.334413333,0.216230159,0.161416556,0.27450065,0.521692281,0.73890565,0.323259914,0.257825586,0.315033386,0.201490359,0.0876,0.1235,0.14154999999999998,0.130325,0.301515438,0.285105003,0.247510822
2020-04-08 20:00:00+00:00,0.324632666,0.21737524,0.137936471,0.256816875,0.466883378,0.738470162,0.317191614,0.254351288,0.316012305,0.1986265,0.0874,0.12295,0.1391,0.133425,0.305112255,0.284348082,0.260090069
2020-04-09 20:00:00+00:00,0.317335,0.21347798,0.122394807,0.25338684,0.4853597,0.687322012,0.313001192,0.251498528,0.31597667,0.16997248,0.0852,0.12135,0.13385,0.127575,0.310476622,0.290882136,0.253088954
2020-04-13 20:00:00+00:00,0.318961416,0.213551019,0.117476054,0.252271682,0.47934675,0.629804228,0.311187187,0.256085333,0.307583743,0.179595149,0.08814999999999999,0.11689999999999999,0.1325,0.1258,0.310476622,0.294900886,0.253088954
2020-04-14 20:00:00+00:00,0.2984516,0.20244352,0.136097953,0.24871116,0.48019,0.653792375,0.296132614,0.244863666,0.295497477,0.18125216,0.08869999999999999,0.11109999999999999,0.1309,0.11539999999999999,0.28828257,0.271540752,0.244174101
2020-04-15 20:00:00+00:00,0.3204473,0.212450613,0.114988709,0.239491742,0.511849718,0.658237987,0.318550446,0.249270177,0.332115268,0.192861419,0.08622500000000001,0.10975,0.13435,0.11779999999999999,0.307998196,0.272169341,0.247073404
2020-04-16 20:00:00+00:00,0.321459833,0.210146316,0.114918631,0.240152569,0.501128999,0.684211887,0.321626089,0.25558352,0.307457737,0.196065359,0.08625,0.11349999999999999,0.1363,0.11925000000000001,0.305993025,0.289256833,0.252923379
2020-04-17 20:00:00+00:00,0.30640665,0.223831016,0.11424459,0.240564842,0.481374876,0.68191175,0.310549017,0.247801808,0.298446301,0.18650712,0.08615,0.10915,0.133575,0.1174,0.296590835,0.275531474,0.248785163
2020-04-20 20:00:00+00:00,0.332880399,0.22018912,0.115855125,0.241219,0.544330178,0.98034,0.3340016,0.254138955,0.303463624,0.190523099,0.08574999999999999,0.10825,0.13385,0.1188,0.295593759,0.278357794,0.245715541
2020-04-21 20:00:00+00:00,0.35661018,0.223123163,0.119260868,0.252772589,0.596275021,1.470228677,0.354983032,0.27440678,0.329855687,0.20168622,0.08689999999999999,0.11779999999999999,0.14125,0.135225,0.334544313,0.297306533,0.263747417
2020-04-22 20:00:00+00:00,0.339488704,0.222738059,0.115113625,0.255560619,0.568475,1.09383918,0.34259975,0.266720704,0.326353104,0.19767348,0.08532500000000001,0.1153,0.1399,0.13974999999999999,0.317929035,0.309235135,0.262825228
2020-04-23 20:00:00+00:00,0.341694959,0.220664041,0.113655785,0.256819443,0.53762995,1.008639045,0.343017792,0.26821236,0.332248636,0.193593368,0.08535,0.1155,0.13865,0.13515,0.309723502,0.294274233,0.256776712
2020-04-24 20:00:00+00:00,0.318534248,0.216020569,0.111571999,0.256536136,0.514122285,0.929874967,0.322391599,0.26326388,0.324145037,0.198507472,0.08545,0.1192,0.138075,0.1324,0.314073425,0.298526379,0.259309304
2020-04-27 20:00:00+00:00,0.298886,0.20816556,0.111727562,0.238345102,0.499464925,0.963168287,0.312053539,0.248813688,0.30751884,0.18831456,0.08460000000000001,0.11735,0.13602499999999998,0.12905,0.282737607,0.279787169,0.24629989
2020-04-28 20:00:00+00:00,0.295432316,0.188668464,0.108645625,0.228317729,0.499230625,0.927505296,0.317560678,0.251054666,0.299553437,0.187223696,0.084175,0.11465,0.13435,0.12564999999999998,0.271730107,0.268089436,0.241736856
2020-04-29 20:00:00+00:00,0.277845359,0.18744124,0.104564773,0.220131645,0.449263299,0.927505296,0.2963035,0.239735199,0.285504543,0.178933048,0.0825,0.11185,0.1305,0.1182,0.256062372,0.268089436,0.232813193
2020-04-30 20:00:00+00:00,0.29221526,0.187417576,0.104286337,0.217810864,0.454417721,0.708808606,0.308396685,0.260515044,0.296579739,0.180856567,0.0819,0.10845,0.1263,0.111075,0.271307592,0.25209264,0.232813193
2020-05-01 20:00:00+00:00,0.314377776,0.184694968,0.1087419,0.225010086,0.50741205,0.750877903,0.325912575,0.299649531,0.320456285,0.188606111,0.08412499999999999,0.11560000000000001,0.13525,0.111525,0.271307592,0.277724707,0.232813193
2020-05-04 20:00:00+00:00,0.30969312,0.183649168,0.1119555,0.224302589,0.487317685,0.728233967,0.322170514,0.303042466,0.324003506,0.1871933,0.0857,0.1183,0.14235,0.1116,0.294559569,0.277724707,0.267253527
2020-05-05 20:00:00+00:00,0.30017828,0.179843161,0.108292556,0.237177861,0.486651321,0.670705838,0.312230625,0.288668888,0.315914113,0.183885699,0.08439999999999999,0.1151,0.139675,0.110375,0.277219127,0.277724707,0.258635607
2020-05-06 20:00:00+00:00,0.304714088,0.191017464,0.11232985,0.23565331,0.492493442,0.644517645,0.315972399,0.2775246,0.317619947,0.18047752,0.085425,0.1139,0.139925,0.10807499999999999,0.278893564,0.277724707,0.250909205
2020-05-07 20:00:00+00:00,0.29134912,0.18909974,0.111662168,0.256123624,0.464130092,0.65292899,0.303811558,0.266342133,0.305334209,0.1745488,0.08529999999999999,0.11449999999999999,0.1398,0.10460000000000001,0.270462976,0.264214891,0.246126378
2020-05-08 20:00:00+00:00,0.272598672,0.187605763,0.113061556,0.256574473,0.436249373,0.63927749,0.290822389,0.252340168,0.293035158,0.1665538,0.08275,0.11095000000000001,0.1388,0.1047,0.259769411,0.249490807,0.236886807
2020-05-11 20:00:00+00:00,0.26562924,0.18947136,0.115163671,0.239622194,0.435961653,0.632720364,0.283460401,0.247106877,0.287846077,0.16826204,0.08199999999999999,0.11095000000000001,0.13605,0.1048,0.25642256,0.239001752,0.228511155
2020-05-12 20:00:00+00:00,0.2881776,0.18748154,0.111739524,0.228707303,0.4476223,0.625563593,0.29945,0.2538118,0.288098663,0.166611707,0.07975,0.11125,0.1348,0.104525,0.243120049,0.240839919,0.236889729
2020-05-13 20:00:00+00:00,0.303767368,0.186145334,0.109828343,0.226940077,0.456649092,0.620217451,0.314423142,0.259096924,0.294276121,0.168193107,0.07980000000000001,0.1094,0.1354,0.105425,0.261337973,0.246047594,0.237701922
2020-05-14 20:00:00+00:00,0.291178524,0.187872531,0.110097687,0.233879839,0.459834928,0.616069612,0.30849008,0.272271735,0.306096677,0.17004648,0.0795,0.10894999999999999,0.13675,0.10552500000000001,0.282381913,0.266766182,0.249921889
2020-05-15 20:00:00+00:00,0.2902164,0.187135357,0.109937882,0.23786406,0.465146348,0.603813251,0.307093,0.259432466,0.303920188,0.165988116,0.07894999999999999,0.10925000000000001,0.138,0.105675,0.277785158,0.265531547,0.246143476
2020-05-18 20:00:00+00:00,0.26509884,0.18833052,0.1078512,0.234491767,0.418238026,0.584637232,0.28497478,0.244564999,0.283457199,0.1626458,0.077675,0.10845,0.13720000000000002,0.1056,0.245100854,0.259211409,0.238177012
2020-05-19 20:00:00+00:00,0.271530952,0.183689572,0.10678709,0.224935054,0.432583121,0.582740354,0.2894896,0.244831144,0.282399444,0.160924959,0.0764,0.1072,0.13394999999999999,0.105075,0.246207033,0.245851082,0.230005634
2020-05-21 20:00:00+00:00,0.272713979,0.177209168,0.103939187,0.205082959,0.416533224,0.625023677,0.28992144,0.257689382,0.280189999,0.148853483,0.071,0.10220000000000001,0.1281,0.10385,0.250150822,0.23980856,0.226554504
2020-05-22 20:00:00+00:00,0.268758344,0.17285486,0.103091187,0.201166611,0.422590327,0.622534219,0.2863204,0.275236888,0.284939308,0.146535152,0.07135,0.10505,0.129225,0.104375,0.253177819,0.248241461,0.258715916
2020-05-26 20:00:00+00:00,0.25918,0.16715786,0.102875118,0.1874214,0.400798403,0.582201948,0.279768,0.263405399,0.2772688,0.1405436,0.0688,0.10060000000000001,0.12605,0.102025,0.237844719,0.2322546,0.236768416
2020-05-27 20:00:00+00:00,0.25119161,0.166572455,0.098650799,0.187291263,0.383236964,0.564565161,0.2785614,0.256083115,0.27440288,0.13863241,0.0652,0.10015,0.11935000000000001,0.0993,0.239839271,0.23097291,0.239200142
2020-05-28 20:00:00+00:00,0.255005621,0.165255694,0.098076071,0.184573747,0.393688928,0.55956598,0.277615521,0.257941578,0.281930696,0.137650794,0.0653,0.10015,0.12045,0.09910000000000001,0.236786877,0.224763395,0.241677086
2020-05-29 20:00:00+00:00,0.250353936,0.166599111,0.094772049,0.190270789,0.383966564,0.541569058,0.271336989,0.248178736,0.2696033,0.134272494,0.066025,0.09875,0.12115000000000001,0.09910000000000001,0.248458516,0.227551453,0.239595132
2020-06-01 20:00:00+00:00,0.254330868,0.168140884,0.096283318,0.192332157,0.390812678,0.521246193,0.272453626,0.245151984,0.267118194,0.137200947,0.0658,0.0965,0.1199,0.09835,0.242704649,0.228486895,0.227172112
2020-06-02 20:00:00+00:00,0.248397131,0.170021904,0.099563975,0.192019789,0.382103749,0.510767851,0.267819226,0.23955661,0.257689998,0.137454568,0.0663,0.09405,0.1186,0.09675,0.234309627,0.223990431,0.225148087
2020-06-03 20:00:00+00:00,0.243121131,0.17105144,0.099267037,0.188470842,0.37003516,0.5016658,0.265861263,0.235351268,0.255513938,0.143424542,0.0659,0.09445,0.1198,0.0966,0.227614907,0.224381541,0.224611147
2020-06-04 20:00:00+00:00,0.243743505,0.17075872,0.100568287,0.188116189,0.376201314,0.488945322,0.270443694,0.238897278,0.258203069,0.1435521,0.0659,0.09445,0.11964999999999999,0.09715,0.22044871,0.225002814,0.224266536
2020-06-05 20:00:00+00:00,0.229226942,0.171400369,0.100072325,0.179660852,0.330989315,0.490392267,0.251844231,0.230742273,0.243219053,0.141535168,0.06505,0.092,0.1201,0.0964,0.211419246,0.21850278,0.221857649
2020-06-08 20:00:00+00:00,0.230046684,0.170714284,0.099085906,0.18075621,0.351054296,0.508485329,0.252881973,0.230261005,0.247517566,0.139657684,0.06815,0.0889,0.1217,0.09715,0.214491001,0.212944069,0.223548608
2020-06-09 20:00:00+00:00,0.242114484,0.172243598,0.09863144,0.192458694,0.37147077,0.497265819,0.262814573,0.234112021,0.250167859,0.141782263,0.07025,0.08955,0.12837500000000002,0.09745,0.225524327,0.214123849,0.219785078
2020-06-10 20:00:00+00:00,0.243739489,0.172723128,0.097757687,0.19914801,0.388032622,0.487583845,0.265802473,0.232292947,0.248293411,0.14118181,0.073175,0.09205,0.1306,0.09787499999999999,0.233893783,0.213681644,0.2153703
2020-06-11 20:00:00+00:00,0.307795673,0.172870993,0.107219406,0.209187768,0.452334791,0.512759103,0.309524078,0.261360568,0.314633751,0.160561184,0.07535,0.0966,0.13565,0.10395,0.262256546,0.231064984,0.223542029
2020-06-12 20:00:00+00:00,0.290305663,0.173559536,0.106945268,0.202208884,0.445502,0.507904432,0.304005553,0.259066231,0.309311326,0.154082484,0.075275,0.098,0.141925,0.10464999999999999,0.277446366,0.248054349,0.236839692
2020-06-15 20:00:00+00:00,0.280418673,0.179348631,0.110210643,0.199899163,0.447435744,0.489767912,0.293850315,0.264640578,0.307114376,0.155631642,0.075625,0.10105,0.14552500000000002,0.1079,0.277849589,0.270188181,0.249648093
2020-06-16 20:00:00+00:00,0.276251605,0.183086568,0.108830406,0.199073421,0.436770471,0.475367419,0.286124536,0.264726736,0.30362549,0.15557501,0.073075,0.1017,0.139625,0.10827500000000001,0.263589359,0.244693088,0.238894319
2020-06-17 20:00:00+00:00,0.278827421,0.182570151,0.109038859,0.201169389,0.441663464,0.472547948,0.292268763,0.263486021,0.309225193,0.161196442,0.07355,0.10285,0.139375,0.10894999999999999,0.261840146,0.248340906,0.235588109
2020-06-18 20:00:00+00:00,0.281200868,0.177716311,0.105984587,0.198790189,0.431797857,0.46903588,0.293285684,0.263184747,0.307356062,0.160665221,0.0774,0.10039999999999999,0.14154999999999998,0.10830000000000001,0.263933177,0.25303159,0.237164243
2020-06-19 20:00:00+00:00,0.294531263,0.175965346,0.107475854,0.202763047,0.433387628,0.471377588,0.298772578,0.258231221,0.289724638,0.164389705,0.076,0.09725,0.13605,0.1075,0.25667181,0.245744862,0.232914949
2020-06-22 20:00:00+00:00,0.274129,0.1769726,0.1060614,0.2059694,0.426638,0.470478735,0.28644,0.249875,0.292003835,0.1627802,0.0731,0.0968,0.13185,0.10765000000000001,0.263194704,0.246938887,0.23174041
2020-06-23 20:00:00+00:00,0.272733037,0.174678044,0.105837322,0.21029293,0.420137875,0.4699026,0.284880262,0.247661577,0.28243469,0.158746977,0.0754,0.09699999999999999,0.1322,0.107575,0.253484621,0.24138354,0.225846198
2020-06-24 20:00:00+00:00,0.288461949,0.174009984,0.103715733,0.198336999,0.4360649,0.495459274,0.298818875,0.253319088,0.292690515,0.164008999,0.07564999999000001,0.0958,0.1321,0.10755,0.277384623,0.239013232,0.226246948
2020-06-25 20:00:00+00:00,0.278836374,0.1704785,0.1025146,0.1942627,0.439744662,0.488112206,0.291670712,0.250574533,0.294185099,0.164556599,0.07575,0.096,0.13495,0.1069,0.271837664,0.250659581,0.226246948
2020-06-26 20:00:00+00:00,0.292446,0.172154333,0.100328888,0.195661399,0.4482625,0.49314098,0.30400175,0.257590411,0.3290896,0.167923355,0.0756,0.09445,0.1319,0.1054,0.272755486,0.243559026,0.2296331
2020-06-29 20:00:00+00:00,0.276956875,0.172301405,0.100293999,0.193315337,0.439846549,0.474766811,0.29447695,0.253378138,0.295478395,0.168257755,0.07475,0.0941,0.13005,0.10565,0.26768125,0.259587208,0.23218411
2020-06-30 20:00:00+00:00,0.26478005,0.170385106,0.098546666,0.196086985,0.426387199,0.468374722,0.284163179,0.249977999,0.28036254,0.162168066,0.07385,0.09394999999999999,0.1264,0.10439999999999999,0.260255259,0.248573143,0.230248478
2020-07-01 20:00:00+00:00,0.259298162,0.169976797,0.094047844,0.191151265,0.430355137,0.454254798,0.276075062,0.244058711,0.270554611,0.160094911,0.07285,0.0935,0.12359999999999999,0.10285,0.254681765,0.247770928,0.230248478
2020-07-02 20:00:00+00:00,0.2537312,0.165399157,0.095094833,0.185707599,0.405343599,0.446411774,0.2706505,0.242081444,0.2607676,0.151116644,0.0712,0.0917,0.1206,0.1023,0.242206234,0.23930298,0.22434097
2020-07-06 20:00:00+00:00,0.25158512,0.1639366,0.094290999,0.181965463,0.40531,0.440482535,0.27042855,0.262839,0.260733333,0.1473954,0.071,0.08705,0.11445,0.09925,0.239077447,0.222144444,0.228305624
2020-07-07 20:00:00+00:00,0.2609064,0.163384777,0.092976533,0.179205775,0.427126319,0.439510396,0.28181702,0.270176688,0.24336984,0.149893933,0.0712,0.08705,0.11460000000000001,0.09820000000000001,0.241631244,0.228928026,0.234266845
2020-07-08 20:00:00+00:00,0.254939,0.1625457,0.090347688,0.17994664,0.42986859,0.417946,0.278836659,0.270926516,0.26381886,0.148222605,0.07125,0.08675000000000001,0.1157,0.09565,0.249935472,0.228598805,0.23625295
2020-07-09 20:00:00+00:00,0.2622032,0.161360593,0.089235866,0.17677638,0.43508216,0.430528416,0.28986946,0.272204066,0.27285588,0.149731233,0.07105,0.08664999999999999,0.1149,0.09335,0.255702578,0.232301116,0.239360606
2020-07-10 20:00:00+00:00,0.254680399,0.161350011,0.0888393,0.171131679,0.431737699,0.416408409,0.2855004,0.269782638,0.268256739,0.147559805,0.0724,0.08735,0.116725,0.09345,0.252834381,0.236360001,0.243857456
2020-07-13 20:00:00+00:00,0.27554448,0.161416142,0.087708866,0.17007504,0.440157099,0.414525161,0.311953359,0.273909244,0.272936422,0.152909866,0.07235,0.08625,0.117025,0.09230000000000001,0.239679599,0.221706917,0.244147
2020-07-14 20:00:00+00:00,0.261120839,0.159656466,0.085706499,0.167496318,0.43912969,0.426560664,0.31048136,0.269573499,0.272365813,0.144102166,0.07225,0.0885,0.1176,0.09195,0.249308006,0.229581933,0.246394151
2020-07-15 20:00:00+00:00,0.255467599,0.159316688,0.084320533,0.165751592,0.43194208,0.414950625,0.3036395,0.264843533,0.272125203,0.141871977,0.07214999999999999,0.08710000000000001,0.11685000000000001,0.0917,0.238271349,0.219018776,0.238796888
2020-07-16 20:00:00+00:00,0.2557406,0.159694553,0.086575361,0.161506333,0.42919647,0.413453283,0.3057775,0.266102066,0.27250884,0.138868205,0.071,0.086,0.1159,0.0908,0.235794685,0.2200039,0.237064169
2020-07-17 20:00:00+00:00,0.2476616,0.15925412,0.0859416,0.158166,0.420746,0.411498,0.2892181,0.258635199,0.2560884,0.1352476,0.07035,0.08460000000000001,0.11474999999999999,0.09085000000000001,0.231655934,0.218172354,0.232885054
2020-07-20 20:00:00+00:00,0.236561513,0.160263917,0.085395069,0.159583306,0.402604195,0.408683766,0.282436344,0.251364486,0.254443153,0.129612139,0.06985000000000001,0.08410000000000001,0.1137,0.09065,0.223250524,0.213402423,0.223607175
2020-07-21 20:00:00+00:00,0.23758613,0.159451142,0.086279823,0.167349534,0.396061037,0.395982845,0.284333197,0.250951669,0.251345046,0.125566282,0.06995,0.08555,0.11192500000000001,0.0885,0.216245407,0.205903409,0.219810486
2020-07-22 20:00:00+00:00,0.234246395,0.156792306,0.085102269,0.186269274,0.39557343,0.396645943,0.285772055,0.252142626,0.251203948,0.122122139,0.07005,0.08470000000000001,0.11289999999999999,0.08839999999999999,0.220887626,0.202965075,0.223253758
2020-07-23 20:00:00+00:00,0.24267979,0.157206104,0.084929076,0.198279065,0.407110251,0.414180809,0.2970876,0.252818608,0.257331078,0.124265947,0.0703,0.08445,0.11044999999999999,0.0883,0.216530458,0.202965075,0.219917735
2020-07-24 20:00:00+00:00,0.247109767,0.16148757,0.084519739,0.19716979,0.397912725,0.417882675,0.29877026,0.254636782,0.255142469,0.12570426,0.07554999999999999,0.0868,0.11635,0.08915,0.22851954,0.202965075,0.229316126
2020-07-27 20:00:00+00:00,0.240911951,0.16086117,0.084667744,0.226987393,0.399096093,0.411274618,0.290214088,0.254351252,0.249944683,0.128697304,0.08095000000000001,0.0895,0.11814999999999999,0.0894,0.229540133,0.20583779,0.225248847
2020-07-28 20:00:00+00:00,0.244832688,0.159007462,0.086952334,0.244460523,0.401720251,0.407453028,0.293840883,0.25147713,0.252221969,0.130303817,0.08130000000000001,0.0886,0.11664999999999999,0.08955,0.225487171,0.200005011,0.22227895
2020-07-29 20:00:00+00:00,0.239372013,0.156348827,0.08729046,0.229377018,0.399323455,0.395593792,0.285776697,0.246519234,0.248298159,0.126045456,0.08215,0.08865,0.11465,0.0894,0.225779081,0.207141097,0.219987587
2020-07-30 20:00:00+00:00,0.24376492,0.158788437,0.089164344,0.21668959,0.40841472,0.410336025,0.282998697,0.248005965,0.254000204,0.124265747,0.0795,0.0898,0.11115,0.0897,0.239636517,0.203812086,0.220752387
2020-07-31 20:00:00+00:00,0.241203493,0.160458465,0.087621325,0.222782774,0.404596727,0.408756164,0.279541167,0.249421513,0.253859604,0.12054923,0.07975,0.0904,0.112125,0.088725,0.240693583,0.218344233,0.224011941
2020-08-03 20:00:00+00:00,0.239152093,0.158343318,0.088227841,0.21862399,0.405166804,0.406213811,0.282522316,0.249324034,0.2514797,0.118030182,0.07985,0.09050000000000001,0.1125,0.08869999999999999,0.225134253,0.20318769,0.221107582
2020-08-04 20:00:00+00:00,0.23405059,0.160663673,0.086957848,0.230716204,0.391475116,0.395867581,0.281699895,0.248765686,0.246824291,0.114687686,0.07780000000000001,0.08945,0.1107,0.08835000000000001,0.222300625,0.197491447,0.221312144
2020-08-05 20:00:00+00:00,0.230602593,0.162068706,0.089986483,0.23256272,0.384020437,0.377267062,0.279711953,0.248246034,0.244770279,0.112897152,0.0795,0.08839999999999999,0.1108,0.08635,0.217912926,0.199510985,0.219313811
2020-08-06 20:00:00+00:00,0.22749679,0.161909853,0.086922337,0.2348453,0.387413641,0.380929347,0.279689106,0.244177086,0.245793404,0.112806591,0.07955,0.0868,0.111425,0.0859,0.222341762,0.198800226,0.218824362

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\deprado_demo.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from data_analysis_toolbox.deprado import (\n",
    "    deprado_estimated_sharpe, \n",
    "    expected_maximum_sr, \n",
    "    estimated_sharpe_ratio_stdev, \n",
    "    num_independent_trials, \n",
    "    probabilistic_sharpe_ratio, \n",
    "    deflated_sharpe_ratio, \n",
    ")\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import tqdm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# generate simulated levels\n",
    "simulation_num_to_run = 10000  # num of simulations we want to run \n",
    "N = 10  # num of independent trials\n",
    "n = 2520  # example 10 year of return observations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PSR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2d input for PSR\n",
    "input_pnl_returns = np.random.normal(0, 1, (n, N))\n",
    "sharpe_outputs = deprado_estimated_sharpe(input_pnl_returns) * np.sqrt(252)\n",
    "psr_outputs, _, _ = probabilistic_sharpe_ratio(input_pnl_returns)\n",
    "\n",
    "print(\"Sharpe for 2d input:\\n\", sharpe_outputs)\n",
    "print(\"PSR for 2d input:\\n\", psr_outputs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1d input for PSR\n",
    "input_pnl_returns = np.random.normal(0, 1, n)\n",
    "sharpe_outputs = deprado_estimated_sharpe(input_pnl_returns) * np.sqrt(252)\n",
    "psr_outputs, _, _ = probabilistic_sharpe_ratio(input_pnl_returns)\n",
    "\n",
    "print(\"Sharpe for 1d input:\\n\", sharpe_outputs)\n",
    "print(\"PSR for 1d input:\\n\", psr_outputs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## DSR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# DSR only support 2d inputs\n",
    "trials_returns = np.random.normal(0, 1, (n, N))\n",
    "trials_perfs = deprado_estimated_sharpe(trials_returns) * np.sqrt(252)\n",
    "idx_selected = np.argmax(trials_perfs)\n",
    "returns_selected = trials_returns[:, idx_selected]\n",
    "print(deflated_sharpe_ratio(trials_returns=trials_returns, returns_selected=returns_selected))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simulations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# max sharpe DSR simulations\n",
    "sharpe_outputs = []\n",
    "deprado_outputs = []\n",
    "\n",
    "for i in tqdm.tqdm(np.arange(simulation_num_to_run)):\n",
    "    trial_returns = np.random.normal(0, 1, (n, N))\n",
    "    trial_returns_sharpes = deprado_estimated_sharpe(trial_returns).reshape(1, -1) * np.sqrt(252)\n",
    "    sharpe_outputs.append(trial_returns_sharpes)\n",
    "    \n",
    "    idx_strat2select = np.argmax(trial_returns_sharpes)  # select the max sharpe version\n",
    "    returns_selected = trial_returns[:, idx_strat2select]  # feed \n",
    "    \n",
    "    exp_max_sr = expected_maximum_sr(trial_returns) * np.sqrt(252)  # get the expected max sharpe ratio\n",
    "    exp_max_sr_std = estimated_sharpe_ratio_stdev(returns_selected) * np.sqrt(252)\n",
    "    num_trials_exp = num_independent_trials(trial_returns)\n",
    "    trials_sr_std = trial_returns_sharpes.std() * np.sqrt(252)\n",
    "    \n",
    "    deprado_outputs.append((exp_max_sr, exp_max_sr_std, num_trials_exp, trials_sr_std))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "perf_outputs = np.concatenate(sharpe_outputs, axis=0)\n",
    "max_sharpe_outputs = np.max(perf_outputs, axis=1)\n",
    "\n",
    "df_deprado_stats = pd.DataFrame(deprado_outputs, columns=[\"exp_max_sr\", \"exp_max_sr_std\", \n",
    "    \"num_trials_exp\", \"trials_sr_std\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_deprado_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig, ax_arr = plt.subplots(1, 2, figsize=(16, 8))\n",
    "\n",
    "df_deprado_stats[\"exp_max_sr_std\"].hist(bins=\"auto\", ax=ax_arr[0])\n",
    "ax_arr[0].set_title(\"DSR estimation for empirical sharpe ratio std\")\n",
    "df_deprado_stats[\"exp_max_sr\"].hist(bins=\"auto\", ax=ax_arr[1])\n",
    "ax_arr[1].set_title(\"DSR estimation for max sharpe ratio\")\n",
    "avg_val = df_deprado_stats[\"exp_max_sr\"].mean()\n",
    "ax_arr[1].axvline(x=avg_val, c=\"black\", ls=\"--\", label=f\"avg={avg_val.round(3)}\")\n",
    "ax_arr[1].legend()\n",
    "\n",
    "fig, ax_arr = plt.subplots(1, 2, figsize=(16, 8))\n",
    "ax_arr[0].hist(df_deprado_stats[\"num_trials_exp\"] / np.sqrt(252))\n",
    "ax_arr[0].set_title(\"num trials estimation\")\n",
    "ax_arr[0].grid()\n",
    "ax_arr[1].hist(df_deprado_stats[\"trials_sr_std\"] / np.sqrt(252), bins=\"auto\")\n",
    "ax_arr[1].set_title(\"trials sharpe ratio std estimation\")\n",
    "ax_arr[1].grid()\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8, 8))\n",
    "\n",
    "# theoretical distribution\n",
    "dsr_simulation = np.random.normal(df_deprado_stats[\"exp_max_sr\"].mean(), df_deprado_stats[\"exp_max_sr_std\"].mean(), max_sharpe_outputs.shape[0])\n",
    "bins2plot=np.histogram(np.hstack((dsr_simulation, max_sharpe_outputs)), bins=100)[1] #get the bin edges\n",
    "\n",
    "ax.hist(dsr_simulation, bins=bins2plot, color=\"orange\", alpha=0.5, label=\"DSR Estimated Approx Max Sharpe\")\n",
    "_ = ax.hist(max_sharpe_outputs, bins=bins2plot, label=\"Actual Max sharpe Distribution\", alpha=0.5)\n",
    "\n",
    "avg_val = np.mean(max_sharpe_outputs)\n",
    "ax.axvline(x=avg_val, c=\"black\", ls=\"--\", label=f\"simulation avg={avg_val.round(3)}\")\n",
    "ax.grid()\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "b030e7d48af3e89373f9f2673be8bbef9ec2be7969902aa899b9108ac8cd8d38"
  },
  "kernelspec": {
   "display_name": "Python 3.7.11 ('analytics')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\tutorial-common.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# This notebook explains the usage of a few handy functions to aid EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### we load some pre-generated data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_target(x, avg, fwd):\n",
    "    \"\"\"\n",
    "    create equal weighted forward return as a smoothed target\n",
    "    \"\"\"\n",
    "    return x.rolling(avg).mean().shift(-fwd) / x - 1\n",
    "\n",
    "\n",
    "def prepare_X_y(data, target_symbol, avg, fwd):\n",
    "    \"\"\"\n",
    "    process the data and normalize it properly\n",
    "    \"\"\"\n",
    "    X, target = data.drop(target_symbol, axis=1), data[target_symbol]\n",
    "    y = get_target(target, avg, fwd)\n",
    "    X = X.divide(target, axis=0)\n",
    "    f = X.notnull().all(axis=1) & y.notnull()\n",
    "    return X[f], y[f]    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "TARGET = \"SX5E\"\n",
    "FORWARD = 20\n",
    "WINDOW = 10\n",
    "\n",
    "data = pd.read_csv(\"data.csv\", index_col=\"utc_time\", parse_dates=[\"utc_time\"])\n",
    "\n",
    "X, y = prepare_X_y(data, TARGET, WINDOW, FORWARD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### statx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function statx in module data_analysis_toolbox.statx:\n",
      "\n",
      "statx(x, f=None, trim=0.01, quantiles=None)\n",
      "    show summary statistic of a random variable x (filtered by f).\n",
      "    stats:\n",
      "        quantiles: [0.001, 0.01, 0.1, 0.25, 0.4, 0.5, 0.6, 0.75, 0.9, 0.99, 0.999]\n",
      "        mean/std, trimmed mean/std\n",
      "    \n",
      "    args:\n",
      "        x: sample to run statistics upon.\n",
      "        f: optional fiter to be applied to x.\n",
      "        trim: tail quantile to be filtered in trim mean/std calculation.\n",
      "        quantiles: list[float], default below.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from data_analysis_toolbox.statx import statx\n",
    "help(statx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1%             -0.295721\n",
       "1.0%             -0.186549\n",
       "10.0%            -0.111437\n",
       "25.0%            -0.059813\n",
       "40.0%            -0.027669\n",
       "50.0%            -0.009377\n",
       "60.0%             0.010673\n",
       "75.0%             0.048008\n",
       "90.0%             0.119933\n",
       "99.0%             0.499743\n",
       "99.9%             1.588129\n",
       "nanmean           0.008524\n",
       "std               0.142446\n",
       "max               1.954249\n",
       "min              -0.373312\n",
       "cnt            3046.000000\n",
       "freq              1.000000\n",
       "trimmean@1%       0.001205\n",
       "trimstd@1%        0.093337\n",
       "dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statx(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1%             -0.295721\n",
       "1.0%             -0.186549\n",
       "10.0%            -0.111437\n",
       "25.0%            -0.059813\n",
       "40.0%            -0.027669\n",
       "50.0%            -0.009377\n",
       "60.0%             0.010673\n",
       "75.0%             0.048008\n",
       "90.0%             0.119933\n",
       "99.0%             0.499743\n",
       "99.9%             1.588129\n",
       "nanmean           0.008524\n",
       "std               0.142446\n",
       "max               1.954249\n",
       "min              -0.373312\n",
       "cnt            3046.000000\n",
       "freq              1.000000\n",
       "trimmean@3%      -0.002037\n",
       "trimstd@3%        0.078420\n",
       "dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statx(y, trim=0.03)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1%              0.000240\n",
       "1.0%              0.000949\n",
       "10.0%             0.009138\n",
       "25.0%             0.023301\n",
       "40.0%             0.042294\n",
       "50.0%             0.056717\n",
       "60.0%             0.075059\n",
       "75.0%             0.111601\n",
       "90.0%             0.193291\n",
       "99.0%             0.764948\n",
       "99.9%             1.867406\n",
       "nanmean           0.097546\n",
       "std               0.164311\n",
       "max               1.954249\n",
       "min               0.000205\n",
       "cnt            1386.000000\n",
       "freq              0.455023\n",
       "trimmean@1%       0.085585\n",
       "trimstd@1%        0.098001\n",
       "dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "statx(y, f=y>0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### inrange"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_analysis_toolbox.filter import inrange, inquantile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function inrange in module data_analysis_toolbox.filter:\n",
      "\n",
      "inrange(x, low, high, f=None)\n",
      "    Given an array of values and lower/upper limits, select those within the range.\n",
      "    \n",
      "    Parameters:\n",
      "    x: array-like, 1D.\n",
      "        Input data.\n",
      "    low: float, array-like, 1D.\n",
      "        Lower bounds.\n",
      "    high: float, array-like, 1D.\n",
      "        Upper bounds.\n",
      "    f: array-like, 1D, bool, optional, (default = None)\n",
      "        Optional filter.\n",
      "    \n",
      "    Return:\n",
      "    q: array-like, 1D, bool\n",
      "        Filter aligned with `x` such that `f` is satisfied and the value of\n",
      "        `x` is bounded by `low` and `high` element-wise.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(inrange)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = X[\"SPY\"]\n",
    "bins = np.linspace(-0.5, 0.5, 41)\n",
    "sns.distplot(y[inrange(x, 0.6, 1.0)], bins=bins, label=\"ratio below 1.0\")\n",
    "sns.distplot(y[inrange(x, 1.0, 1.5)], bins=bins, label=\"ratio above 1.0\")\n",
    "plt.legend()\n",
    "plt.xlim(-0.5, 0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function inquantile in module data_analysis_toolbox.filter:\n",
      "\n",
      "inquantile(x, low, high, f=None)\n",
      "    Given an array of values and lower/upper percentiles, select those within the range.\n",
      "    \n",
      "    Parameters:\n",
      "    x: array-like, 1D.\n",
      "        Input data.\n",
      "    low: float\n",
      "        Lower bounds.\n",
      "    high: float\n",
      "        Upper bounds.\n",
      "    f: array-like, 1D, bool, optional, (default = None)\n",
      "        Optional filter.\n",
      "    \n",
      "    Return:\n",
      "    q: array-like, 1D, bool\n",
      "        Filter aligned with `x` such that `f` is satisfied and the value of\n",
      "        `x` is bounded by `low` and `high` percentile.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(inquantile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = X[\"FXI\"]\n",
    "bins = np.linspace(-0.5, 0.5, 41)\n",
    "sns.distplot(y[inquantile(x, 0.0, 0.25)], bins=bins, label=\"ratio below 25% percentile\")\n",
    "sns.distplot(y[inquantile(x, 0.75, 1.0)], bins=bins, label=\"ratio above 75% percentile\")\n",
    "plt.legend()\n",
    "plt.xlim(-0.5, 0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### gscatter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function gscatter in module data_analysis_toolbox.gscatter:\n",
      "\n",
      "gscatter(x, y, f=None, aggfunc=<function mean at 0x7f2f5828cc20>, ngrp=100, show_stats=True, robust_regression=False, show_plot=True, ax=None, *args, **kwargs)\n",
      "    Given two pandas series/numpy arrays x, y that are aligned with each other,\n",
      "    group them according to sorted x values and apply a customized aggregation\n",
      "    function to y, then plot the aggregated group scatters.\n",
      "    \n",
      "    A OLS regression is called upon the vanilla (x, y) pairs and coefficients\n",
      "    reported.\n",
      "    \n",
      "    Parameters\n",
      "    -------------\n",
      "    x: array-like\n",
      "        Independent data.\n",
      "    y: array-like\n",
      "        Dependent data.\n",
      "    f: array like, bool, optional, (default = None)\n",
      "        An optional filter to be applied on x and y before analysis.\n",
      "    aggfunc: callable, (default = numpy.mean)\n",
      "        Function to be applied on grouped x and y.\n",
      "    ngrp: int, (default = 100)\n",
      "        Number of groups to \"downsample\" (x, y) pairs. In default setting, each\n",
      "        point in the final output represent 1% of (filtered) data.\n",
      "    show_stats: bool, (default = True)\n",
      "        Whether to display the fitting statistics.\n",
      "    robust_regression: bool, (default=False)\n",
      "        Whether to apply a Huber regression instead of OLS to remove outlier affects.\n",
      "    show_plot: bool, (default = True)\n",
      "        Whether to display the scatter plot with regression fit.\n",
      "    ax: matplotlib.pyplot.axes, optional, (default=None)\n",
      "        An axes to draw the scatter plot.\n",
      "    *args, **kwargs: ploting parameters passed to\n",
      "                        matplotlib.plot.pyplot.scatter\n",
      "    \n",
      "    Return\n",
      "    ---------------\n",
      "    stats: dict\n",
      "        Statistics of the fit and grouped x/y values.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from data_analysis_toolbox.gscatter import gscatter\n",
    "help(gscatter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beta       |   0.120404\n",
      "Alpha      |  -0.113311\n",
      "RSquare    |   0.018226\n",
      "NGroup     | 100.000000\n",
      "Count      | 3046.000000\n",
      "IC         |   0.135005\n",
      "Freq       |   1.000000\n",
      "Good       |   1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stats = gscatter(X[\"QQQ\"], y)\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beta       |   0.040084\n",
      "Alpha      |  -0.047426\n",
      "RSquare    |  -0.001556\n",
      "NGroup     | 100.000000\n",
      "Count      | 3046.000000\n",
      "IC         |   0.135005\n",
      "Freq       |   1.000000\n",
      "Good       |   1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# note the RSquare is now negative under robust regression\n",
    "stats = gscatter(X[\"QQQ\"], y, robust_regression=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beta       |   0.484886\n",
      "Alpha      |  -0.418561\n",
      "RSquare    |   0.043422\n",
      "NGroup     | 100.000000\n",
      "Count      | 807.000000\n",
      "IC         |   0.208379\n",
      "Freq       |   0.264938\n",
      "Good       |   1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# restrict to the U-shape range\n",
    "# note the output `Freq` shows this is about 25% of all data being filtered out\n",
    "stats = gscatter(X[\"QQQ\"], y, f=inrange(X[\"QQQ\"], 0.0, 0.9))\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# quantiles plots\n",
    "# If we pass the axes into the gscatter, it plot on the same canvas and show regression equation\n",
    "# TODO: remove the duplicated lines\n",
    "fig, ax = plt.subplots(1, 1)\n",
    "x = X[\"QQQ\"]\n",
    "stats = dict()\n",
    "for qt in [0.25, 0.5, 0.75]:\n",
    "    stats[qt] = gscatter(x, y, ngrp=1000, aggfunc=lambda x: np.quantile(x, qt), show_stats=False, show_plot=False)\n",
    "\n",
    "for qt, stat in stats.items():\n",
    "    _ = gscatter(stat[\"ind_grp\"],stat[\"dep_grp\"], label=f\"{qt:.0%} percentile\", show_stats=False, ax=ax)\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\tutorial-ml.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# This notebook explains the modules that aid ML part of the research"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-28T08:44:13.339434Z",
     "start_time": "2020-10-28T08:44:13.163914Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-28T08:44:13.742335Z",
     "start_time": "2020-10-28T08:44:13.392987Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-28T08:44:13.924823Z",
     "start_time": "2020-10-28T08:44:13.744888Z"
    }
   },
   "outputs": [],
   "source": [
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the data for demo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-28T08:44:14.073828Z",
     "start_time": "2020-10-28T08:44:14.050888Z"
    }
   },
   "outputs": [],
   "source": [
    "def get_target(x, avg, fwd):\n",
    "    \"\"\"\n",
    "    create equal weighted forward return as a smoothed target\n",
    "    \"\"\"\n",
    "    return x.rolling(avg).mean().shift(-fwd) / x - 1\n",
    "\n",
    "\n",
    "def prepare_X_y(data, target_symbol, avg, fwd):\n",
    "    \"\"\"\n",
    "    process the data and normalize it properly\n",
    "    \"\"\"\n",
    "    X, target = data.drop(target_symbol, axis=1), data[target_symbol]\n",
    "    y = get_target(target, avg, fwd)\n",
    "    X = X.divide(target, axis=0)\n",
    "    f = X.notnull().all(axis=1) & y.notnull()\n",
    "    return X[f], y[f]    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-10-28T08:44:14.324204Z",
     "start_time": "2020-10-28T08:44:14.279606Z"
    }
   },
   "outputs": [],
   "source": [
    "TARGET = \"SX5E\"\n",
    "FORWARD = 20\n",
    "WINDOW = 10\n",
    "\n",
    "data = pd.read_csv(\"data.csv\", index_col=\"utc_time\", parse_dates=[\"utc_time\"])\n",
    "\n",
    "X, y = prepare_X_y(data, TARGET, WINDOW, FORWARD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cross Validation and Model Deployment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_analysis_toolbox.splitter import WalkForwardCV, WalkForwardSplit, walkforward_training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(WalkForwardCV)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  cross validation\n",
    "we created y with a 20 days lookforward, hence in cross validation, we need to gap the train and test with a 20 days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.model_selection import TimeSeriesSplit, KFold\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "# a somehow more convenient cross val wrapper than sklearn's version\n",
    "from data_analysis_toolbox.fastml import cross_val_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"comparing different cross validation results...\")\n",
    "n_sample = 200  # a relativly small set to see the impact\n",
    "model = LinearRegression()\n",
    "cv_ts = TimeSeriesSplit(n_splits=5)\n",
    "cv_wk = WalkForwardCV(n_splits=5, gap=20)\n",
    "cv_kf = KFold(n_splits=5, shuffle=False)\n",
    "\n",
    "X_train, y_train = X.iloc[:n_sample], y.iloc[:n_sample]\n",
    "print(f\"kfold cross validation score: {cross_val_score(model, X_train, y_train, r2_score, cv_kf)}\")\n",
    "print(f\"naive cross validation score: {cross_val_score(model, X_train, y_train, r2_score, cv_ts)}\")\n",
    "print(f\"walk forward cross validation score: {cross_val_score(model, X_train, y_train, r2_score, cv_wk)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### online training and deploy model to get prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(walkforward_training)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(WalkForwardSplit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# let's see the example where we want to online train a model on 252 days of data and deploy it for 10 days until retrain\n",
    "splitter = WalkForwardSplit(train_size=252, gap=20, test_size=10, expanding=False)\n",
    "models, y_pred = walkforward_training(X, y, model, splitter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# you can get what the models are from `models`\n",
    "_, train, test = models[0]\n",
    "print(f\"1st training on data from {train[0]} to {train[-1]}, and deploy data on {test}\")\n",
    "\n",
    "_, train, test = models[1]\n",
    "print(f\"2nd training on data from {train[0]} to {train[-1]}, and deploy data on {test}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# y_pred is aligned with y, with inital data being NAN\n",
    "y_pred.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# evaluate the goodness of model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_analysis_toolbox.score import eval_score, bootstrap_eval, calc_quantile_improvement_curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(calc_quantile_improvement_curve)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# the function show progressively how good the prediction is when its value gets more extreme\n",
    "\n",
    "# For example,the plot shows the RSquare gets even worse when `y_pred` is making an extreme prediction, but the recall rate is\n",
    "# improving with high confidence, and the f1-score is much less signifcantly improving.\n",
    "\n",
    "mu, sigma, cnt = calc_quantile_improvement_curve(y_pred, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# some testing stage model/feature selector that people may use"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_analysis_toolbox.fastml import FastGBM, FastLR, SelectFromLasso, RFS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# make data stale for now\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, shuffle=False)\n",
    "cv = WalkForwardCV(n_splits=5, gap=20)\n",
    "n_trials = 100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### automatic gradient boosting tree hyperparameter tunning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "fgbm = FastGBM(cv, n_trials)\n",
    "fgbm.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eval_score(y_test, fgbm.predict(X_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### automatic looking within family of linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "flr = FastLR(cv, n_trials)\n",
    "flr.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eval_score(y_test, flr.predict(X_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Guolong style walkforward feature selection/backward elimination"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(RFS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "base_estimator = LinearRegression()\n",
    "rfs = RFS(base_estimator, r2_score, cv=cv, forward=True, tol=0.0001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rfs.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# see what RFS selected\n",
    "X_train.columns[rfs.get_support()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# nothing is selected, let's see why\n",
    "imp = pd.Series(index=X_train.columns, data=rfs.feature_importance_)\n",
    "imp.sort_values().plot(kind=\"barh\")\n",
    "plt.title(\"univariate feature rsquare\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\tutorial_randomnesstest.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_analysis_toolbox.randomness_test import get_sim_pvalue, get_pass_threshold, get_sharpe_distribution\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Randomness test: input is a list or predictions (i.e. 2d array), find theshold sharpe for certain pvalue or sharpe of certain confidence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "n = 1000\n",
    "tri = pd.Series(np.random.randn(n)).cumsum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tri.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "#say we try to trade next day return using average x day return for x between 1 and 10 and optimize sharpe\n",
    "predictions = []\n",
    "optimal_sharpe = -1000\n",
    "for i in np.arange(1, 11):\n",
    "    signal = (tri.diff(i) / i).fillna(0)\n",
    "    predictions.append(signal)\n",
    "    daily_pnl = signal.shift() * tri.diff()\n",
    "    sharpe = daily_pnl.mean() / daily_pnl.std() * np.sqrt(252)\n",
    "    if(sharpe > optimal_sharpe):\n",
    "        optimal_sharpe = sharpe\n",
    "        best_pnl = daily_pnl.copy()    \n",
    "predictions = np.array(predictions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "best_pnl.cumsum().plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.33505075211935187"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "optimal_sharpe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.555"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get pvalue for optimal sharpe\n",
    "get_sim_pvalue(predictions, optimal_sharpe, trials=2000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0435"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get pvalue for sharpe 1.1\n",
    "get_sim_pvalue(predictions, 1.15, trials=2000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.173614095956903"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get 95th percentile confidence sharpe\n",
    "get_pass_threshold(predictions, 0.95, trials=2000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "#now we check how the simulated sharpes distribution looks like"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "sharpes =  get_sharpe_distribution(predictions, trials = 2000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([  4.,   6.,  13.,  31.,  50.,  93., 115., 188., 225., 263., 267.,\n",
       "        249., 178., 127.,  70.,  61.,  35.,  13.,   7.,   5.]),\n",
       " array([-1.0284047 , -0.88515788, -0.74191107, -0.59866426, -0.45541744,\n",
       "        -0.31217063, -0.16892381, -0.025677  ,  0.11756981,  0.26081663,\n",
       "         0.40406344,  0.54731025,  0.69055707,  0.83380388,  0.9770507 ,\n",
       "         1.12029751,  1.26354432,  1.40679114,  1.55003795,  1.69328476,\n",
       "         1.83653158]),\n",
       " <BarContainer object of 20 artists>)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAOtElEQVR4nO3dbYxcV33H8e+vCQSpoJJg1xjHsEnlPjgvGqJVmkJVpU1VEkfCQW2j5AUxNJVBTSSQeGNAKqhVVFMVUFFLWkMiHInmgafGLaE0GFDEiyRsopDESdMYcBRbjr1AFRIhpU3498Vel8He9czuzOzsHn8/0tXcOffcmf+Z3f35+sydO6kqJElt+YVJFyBJGj3DXZIaZLhLUoMMd0lqkOEuSQ06fdIFAKxZs6ampqYmXYYkrSoPPPDAD6pq7XzbVkS4T01NMTMzM+kyJGlVSfLUQtuclpGkBhnuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAatiE+oSivZ1I4vL3nfAzsvH2El0uA8cpekBhnuktQgp2XUvGGmVaTVyiN3SWqQ4S5JDTLcJalBhrskNchwl6QGGe6S1KC+4Z5kY5JvJHksyb4k7+naP5zkUJKHumVLzz7vT7I/yRNJ3jLOAUiSTjTIee4vAu+rqgeTvAp4IMnd3baPV9Xf9nZOshm4CjgPeB3wtSS/WlUvjbJwSdLC+h65V9XhqnqwW38OeBzYcJJdtgK3VdULVfV9YD9w4SiKlSQNZlFz7kmmgDcC93VN1yd5OMnNSc7s2jYAT/fsdpB5/jFIsj3JTJKZ2dnZxVcuSVrQwJcfSPJK4AvAe6vqx0luBP4KqO72o8CfDvp4VbUL2AUwPT1diylaWi28oqQmZaAj9yQvYy7YP1tVXwSoqiNV9VJV/RT4FD+bejkEbOzZ/eyuTZK0TAY5WybATcDjVfWxnvb1Pd3eBjzare8BrkpyRpJzgE3A/aMrWZLUzyDTMm8G3g48kuShru0DwNVJzmduWuYA8C6AqtqX5A7gMebOtLnOM2UkaXn1Dfeq+haQeTbddZJ9bgBuGKIuSdIQ/ISqJDXIcJekBhnuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUIMNdkhpkuEtSgwb+JiZpkob5RiPpVOSRuyQ1yHCXpAYZ7pLUIMNdkhpkuEtSgwx3SWqQ4S5JDTLcJalBhrskNchwl6QGGe6S1CDDXZIaZLhLUoMMd0lqkOEuSQ0y3CWpQX3DPcnGJN9I8liSfUne07WfleTuJE92t2d27UnyiST7kzyc5IJxD0KS9PMGOXJ/EXhfVW0GLgKuS7IZ2AHsrapNwN7uPsBlwKZu2Q7cOPKqJUkn1Tfcq+pwVT3YrT8HPA5sALYCu7tuu4EruvWtwC01517g1UnWj7pwSdLCFjXnnmQKeCNwH7Cuqg53m54B1nXrG4Cne3Y72LUd/1jbk8wkmZmdnV1s3ZKkkxg43JO8EvgC8N6q+nHvtqoqoBbzxFW1q6qmq2p67dq1i9lVktTHQOGe5GXMBftnq+qLXfORY9Mt3e3Rrv0QsLFn97O7NknSMhnkbJkANwGPV9XHejbtAbZ169uAO3var+nOmrkIeLZn+kaStAxOH6DPm4G3A48keahr+wCwE7gjybXAU8CV3ba7gC3AfuAnwDtHWbAkqb++4V5V3wKywOZL5ulfwHVD1iVJGoKfUJWkBhnuktQgw12SGjTIG6rSSEzt+PKkS5BOGR65S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUIM9zl1aoYT4XcGDn5SOsRKuRR+6S1CDDXZIaZLhLUoMMd0lqkOEuSQ0y3CWpQYa7JDXIcJekBhnuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUoL7hnuTmJEeTPNrT9uEkh5I81C1bera9P8n+JE8kecu4CpckLWyQI/fPAJfO0/7xqjq/W+4CSLIZuAo4r9vnk0lOG1WxkqTB9A33qroH+NGAj7cVuK2qXqiq7wP7gQuHqE+StATDzLlfn+ThbtrmzK5tA/B0T5+DXdsJkmxPMpNkZnZ2dogyJEnHW2q43wj8CnA+cBj46GIfoKp2VdV0VU2vXbt2iWVIkuazpHCvqiNV9VJV/RT4FD+bejkEbOzpenbXJklaRksK9yTre+6+DTh2Js0e4KokZyQ5B9gE3D9ciZKkxTq9X4cktwIXA2uSHAQ+BFyc5HyggAPAuwCqal+SO4DHgBeB66rqpbFULklaUN9wr6qr52m+6ST9bwBuGKYoSdJw/ISqJDXIcJekBhnuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUIMNdkhrU98JhklafqR1fXvK+B3ZePsJKNCkeuUtSgwx3SWqQ4S5JDTLcJalBhrskNchwl6QGGe6S1CDDXZIaZLhLUoP8hKoWZZhPPkpaPh65S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUoL7hnuTmJEeTPNrTdlaSu5M82d2e2bUnySeS7E/ycJILxlm8JGl+gxy5fwa49Li2HcDeqtoE7O3uA1wGbOqW7cCNoylTkrQYfcO9qu4BfnRc81Zgd7e+G7iip/2WmnMv8Ook60dUqyRpQEudc19XVYe79WeAdd36BuDpnn4Hu7YTJNmeZCbJzOzs7BLLkCTNZ+g3VKuqgFrCfruqarqqpteuXTtsGZKkHksN9yPHplu626Nd+yFgY0+/s7s2SdIyWmq47wG2devbgDt72q/pzpq5CHi2Z/pGkrRM+l7yN8mtwMXAmiQHgQ8BO4E7klwLPAVc2XW/C9gC7Ad+ArxzDDVLkvroG+5VdfUCmy6Zp28B1w1blCRpOH5ZxynIL9yQ2uflBySpQYa7JDXIcJekBhnuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUIMNdkhpkuEtSgwx3SWqQ4S5JDTLcJalBfhOTpJ8z7Dd1Hdh5+Ygq0TA8cpekBhnuktQgw12SGmS4S1KDDHdJapBny0gaqWHOtvFMm9HxyF2SGmS4S1KDDHdJapDhLkkNMtwlqUFDnS2T5ADwHPAS8GJVTSc5C7gdmAIOAFdW1X8PV6YkaTFGceT+e1V1flVNd/d3AHurahOwt7svSVpG45iW2Qrs7tZ3A1eM4TkkSScx7IeYCviPJAX8U1XtAtZV1eFu+zPAuvl2TLId2A7w+te/fsgyTi3DXpJVUvuGDfffqapDSX4ZuDvJf/ZurKrqgv8E3T8EuwCmp6fn7SNJWpqhpmWq6lB3exT4EnAhcCTJeoDu9uiwRUqSFmfJ4Z7kF5O86tg68IfAo8AeYFvXbRtw57BFSpIWZ5hpmXXAl5Ice5x/rqp/T/Jt4I4k1wJPAVcOX6YkaTGWHO5V9T3gN+dp/yFwyTBFSZKG4ydUJalBhrskNchwl6QGGe6S1CDDXZIaZLhLUoP8gmxJK4Zfrj06HrlLUoMMd0lqkNMyE+JleyWNk0fuktQgw12SGmS4S1KDDHdJapDhLkkNMtwlqUGGuyQ1yHCXpAYZ7pLUIMNdkhpkuEtSgwx3SWqQ4S5JDfKqkEPwyo7SyuEXffw8j9wlqUGGuyQ1yHCXpAY55y7plDfs+2crcc7+lA933xSV1KJTPtwlaVgr8UydsYV7kkuBvwNOAz5dVTvH8TweeUvSicbyhmqS04B/AC4DNgNXJ9k8jueSJJ1oXGfLXAjsr6rvVdX/ALcBW8f0XJKk44xrWmYD8HTP/YPAb/V2SLId2N7dfT7JEyN43jXAD0bwOCtNi+NyTKuDYxqzfGSo3d+w0IaJvaFaVbuAXaN8zCQzVTU9ysdcCVocl2NaHRzT6jWuaZlDwMae+2d3bZKkZTCucP82sCnJOUleDlwF7BnTc0mSjjOWaZmqejHJ9cBXmTsV8uaq2jeO5zrOSKd5VpAWx+WYVgfHtEqlqiZdgyRpxLxwmCQ1yHCXpAat6nBP8idJ9iX5aZIFT21KcmmSJ5LsT7JjOWtciiRnJbk7yZPd7ZkL9HspyUPdsuLesO73uic5I8nt3fb7kkxNoMxFGWBM70gy2/Nz+bNJ1LkYSW5OcjTJowtsT5JPdGN+OMkFy13jYg0wpouTPNvzc/qL5a5x7Kpq1S7AbwC/BnwTmF6gz2nAd4FzgZcD3wE2T7r2PuP6G2BHt74D+MgC/Z6fdK0nGUPf1x34c+Afu/WrgNsnXfcIxvQO4O8nXesix/W7wAXAowts3wJ8BQhwEXDfpGsewZguBv5t0nWOc1nVR+5V9XhV9ftk62q8FMJWYHe3vhu4YnKlLNkgr3vvOD8PXJIky1jjYq3G36W+quoe4Ecn6bIVuKXm3Au8Osn65aluaQYYU/NWdbgPaL5LIWyYUC2DWldVh7v1Z4B1C/R7RZKZJPcmuWJ5ShvYIK/7//epqheBZ4HXLEt1SzPo79IfddMXn0+ycZ7tq81q/BsaxG8n+U6SryQ5b9LFjNqKv557kq8Br51n0wer6s7lrmdUTjau3jtVVUkWOl/1DVV1KMm5wNeTPFJV3x11rVqUfwVuraoXkryLuf+Z/P6Ea9KJHmTu7+f5JFuAfwE2Tbak0Vrx4V5VfzDkQ6zISyGcbFxJjiRZX1WHu//+Hl3gMQ51t99L8k3gjczNCa8Eg7zux/ocTHI68EvAD5envCXpO6aq6q3/08y9f7Larci/oWFU1Y971u9K8skka6pqxVxQbFinwrTMarwUwh5gW7e+DTjhfyhJzkxyRre+Bngz8NiyVdjfIK977zj/GPh6de92rVB9x3TcXPRbgceXsb5x2QNc0501cxHwbM+04aqU5LXH3t9JciFzWbiSDywWb9Lv6A6zAG9jbv7vBeAI8NWu/XXAXT39tgD/xdxR7QcnXfcA43oNsBd4EvgacFbXPs3ct1oBvAl4hLkzNh4Brp103fOM44TXHfhL4K3d+iuAzwH7gfuBcydd8wjG9NfAvu7n8g3g1ydd8wBjuhU4DPxv9/d0LfBu4N3d9jD35Tvf7X7X5j0zbSUtA4zp+p6f073AmyZd86gXLz8gSQ06FaZlJOmUY7hLUoMMd0lqkOEuSQ0y3CWpQYa7JDXIcJekBv0f94MTy6gOUHIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(sharpes, bins=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Geometrical explanation of the randomness test on n days of history:\n",
    "#  think the vector of daily returns of the tri as a point on the surface of an n-dimensional sphere (after scaling), X.\n",
    "#  think each predicted return vector as a point on the n-dimensional sphere too.\n",
    "#  if the predicted point is close to X, it means sharpe is high and vice versa. \n",
    "#  fitting here means find the predicted point closest to X. \n",
    "#  randomness test compares that distance with the distance of a random point on the sphere to the set of predicted points\n",
    "#  e.g. 5th percentile threshold is corresponding to the radius such that the union of spherical caps with that radius has area \n",
    "#5% of the total surface area of the sphere, it passes the 5th percentile randomness test if X is in that region. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#As an alternative, one can optimize the parameter on a random time series, we compare the methods.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "best_sharpes = []\n",
    "for j in range(2000):\n",
    "    tri = pd.Series(np.random.randn(n)).cumsum()\n",
    "    optimal_sharpe = -1000\n",
    "    for i in np.arange(1, 11):\n",
    "        signal = (tri.diff(i) / i).fillna(0)\n",
    "        daily_pnl = signal.shift() * tri.diff()\n",
    "        sharpe = daily_pnl.mean() / daily_pnl.std() * np.sqrt(252)\n",
    "        if(sharpe > optimal_sharpe):\n",
    "            optimal_sharpe = sharpe\n",
    "            best_pnl = daily_pnl.copy() \n",
    "    best_sharpes.append(optimal_sharpe)\n",
    "best_sharpes = np.array(best_sharpes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0.        , 0.        , 0.00857143, 0.01714286, 0.02857143,\n",
       "        0.1       , 0.18857143, 0.35714286, 0.55714286, 0.76      ,\n",
       "        0.92571429, 0.96285714, 0.73142857, 0.48      , 0.25428571,\n",
       "        0.21428571, 0.07142857, 0.03714286, 0.01714286, 0.00285714]),\n",
       " array([-1.5  , -1.325, -1.15 , -0.975, -0.8  , -0.625, -0.45 , -0.275,\n",
       "        -0.1  ,  0.075,  0.25 ,  0.425,  0.6  ,  0.775,  0.95 ,  1.125,\n",
       "         1.3  ,  1.475,  1.65 ,  1.825,  2.   ]),\n",
       " <BarContainer object of 20 artists>)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD6CAYAAACxrrxPAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAPl0lEQVR4nO3df6zdd13H8eeLwWgCc4C9wFxb7haLMvUP5s2YQHSRYbqRtBhEtsUAZlJRZzAQkxrMrPMPByYYCUNsYIER3RioWF3J+DVCYtxcB/tBWweXenWtkxXEKiEwpm//OKd4envvPae933vOPZ89H0nT7/l+P+fcV7/35tXP/X7P93tSVUiSpt9TJh1AktQNC12SGmGhS1IjLHRJaoSFLkmNsNAlqRFDCz3JzUkeS/KlZbYnybuTzCd5MMnF3ceUJA3z1BHGfBB4D3DLMtuvALb2/7wE+NP+3yvauHFjzc7OjhRSktRz3333fb2qZpbaNrTQq+rzSWZXGLIDuKV6VyjdneRZSc6rqkdXet3Z2Vn2798/7MtLkgYk+ZfltnVxDP184JGBx0f66yRJYzTWk6JJdibZn2T/sWPHxvmlJal5XRT6UWDzwONN/XWnqKo9VTVXVXMzM0seApIknaEuCn0v8Pr+u10uBY4PO34uSere0JOiSW4FLgM2JjkC/B7wNICqeh+wD7gSmAe+DfzyWoWVJC1vlHe5XD1kewG/0VkiSdIZ8UpRSWqEhS5JjbDQJakRo1z6L+l07D53Fc893l0OPek4Q5ekRljoktQIC12SGmGhS1IjPCkqLTK7645VPX9hQ0dBpNPkDF2SGmGhS1IjPOQiLbKw4ZpJR5DOiDN0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wg+JVpNmd91xxs9d2NBhEGmMnKFLUiNGKvQk25I8nGQ+ya4ltm9JcleSLyZ5MMmV3UeVJK1kaKEnOQu4CbgCuAi4OslFi4b9LnB7Vb0YuAp4b9dBJUkrG2WGfgkwX1WHq+px4DZgx6IxBfxAf/lc4N+6iyhJGsUoJ0XPBx4ZeHwEeMmiMbuBTyb5TeAZwOWdpJMkjayrk6JXAx+sqk3AlcCHk5zy2kl2JtmfZP+xY8c6+tKSJBit0I8Cmwceb+qvG3QtcDtAVf0DsAHYuPiFqmpPVc1V1dzMzMyZJZYkLWmUQr8X2JrkgiRn0zvpuXfRmH8FXgGQ5EX0Ct0puCSN0dBCr6ongOuAO4FD9N7NciDJDUm294e9DXhTkgeAW4E3VlWtVWhJ0qlGulK0qvYB+xatu35g+SDwsm6jSZJOh1eKSlIjLHRJaoSFLkmN8G6LatLChmsmHUEaOwtdWkdWddvfG1/VYRJNIw+5SFIjLHRJaoSFLkmNsNAlqRGeFJXWkdW9O+d4Zzk0nZyhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGjFSoSfZluThJPNJdi0z5heTHExyIMlfdBtTkjTMU4cNSHIWcBPwSuAIcG+SvVV1cGDMVuB3gJdV1TeTPHetAkuSljbKDP0SYL6qDlfV48BtwI5FY94E3FRV3wSoqse6jSlJGmaUQj8feGTg8ZH+ukEvBF6Y5O+T3J1kW1cBJUmjGXrI5TReZytwGbAJ+HySn6iq/xwclGQnsBNgy5YtHX1pSRKMNkM/CmweeLypv27QEWBvVX2vqv4Z+DK9gj9JVe2pqrmqmpuZmTnTzJKkJYxS6PcCW5NckORs4Cpg76IxH6c3OyfJRnqHYA53F1OSNMzQQq+qJ4DrgDuBQ8DtVXUgyQ1JtveH3Ql8I8lB4C7gt6vqG2sVWpJ0qpGOoVfVPmDfonXXDywX8Nb+H0nSBHilqCQ1wkKXpEZY6JLUCAtdkhrR1YVFUvd2nzvpBNJUcYYuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIyx0SWqEH3AhtWI1Hwiy+3h3OTQxztAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIyx0SWqEhS5JjbDQJakRFrokNcJL/7WmZnfdccbPXdjQYRDpScAZuiQ1YqRCT7ItycNJ5pPsWmHca5JUkrnuIkqSRjG00JOcBdwEXAFcBFyd5KIlxp0DvAW4p+uQkqThRpmhXwLMV9XhqnocuA3YscS4PwDeAXynw3ySpBGNUujnA48MPD7SX/d9SS4GNlfVmZ8BkyStyqpPiiZ5CvAu4G0jjN2ZZH+S/ceOHVvtl5YkDRil0I8Cmwceb+qvO+Ec4MeBzyVZAC4F9i51YrSq9lTVXFXNzczMnHlqSdIpRin0e4GtSS5IcjZwFbD3xMaqOl5VG6tqtqpmgbuB7VW1f00SS5KWNLTQq+oJ4DrgTuAQcHtVHUhyQ5Ltax1QkjSaka4Urap9wL5F665fZuxlq48lSTpdXikqSY2w0CWpERa6JDXCQpekRnj7XK2phQ3XTDqC9KThDF2SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhrhlaKSmN21uo8DXrjxVR0l0Wo4Q5ekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhrhvVwksbDhmlW+wvFOcmh1nKFLUiMsdElqhIUuSY2w0CWpERa6JDXCQpekRljoktSIkQo9ybYkDyeZT7Jrie1vTXIwyYNJPpPkBd1HlSStZOiFRUnOAm4CXgkcAe5NsreqDg4M+yIwV1XfTvJrwDuB161FYEnr0O5zV/FcL0rqyigz9EuA+ao6XFWPA7cBOwYHVNVdVfXt/sO7gU3dxpQkDTNKoZ8PPDLw+Eh/3XKuBT6xmlCSpNPX6b1ckvwSMAf8zDLbdwI7AbZs2dLll9Yamt11xxk/d2FDh0EkrWiUGfpRYPPA4039dSdJcjnwdmB7VX13qReqqj1VNVdVczMzM2eSV5K0jFFm6PcCW5NcQK/IrwJOujVbkhcDfwZsq6rHOk+piVr9nfgkjcPQGXpVPQFcB9wJHAJur6oDSW5Isr0/7I+AZwIfTXJ/kr1rlliStKSRjqFX1T5g36J11w8sX95xLknSafJKUUlqhIUuSY2w0CWpERa6JDXCQpekRljoktQIC12SGmGhS1IjLHRJaoSFLkmNsNAlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIzr9kGitU7vPnXQCSWPgDF2SGmGhS1IjPOQiaaJmd91xxs9duPFVHSaZfs7QJakRFrokNcJDLpImamHDNat49vHOcrTAGbokNcJCl6RGWOiS1AgLXZIaYaFLUiMsdElqhIUuSY3wfeiSptdq7iS6u733sDtDl6RGOEOfFt7TXNIQztAlqREjzdCTbAP+BDgLeH9V3bho+9OBW4CfBL4BvK6qFrqN2gBn2dL60eDx96Ez9CRnATcBVwAXAVcnuWjRsGuBb1bVDwN/DLyj66CSpJWNMkO/BJivqsMASW4DdgAHB8bsAHb3lz8GvCdJqqo6zLo+OMuWtE6NUujnA48MPD4CvGS5MVX1RJLjwA8CX+8ipCStK6ud2K3RIZuxvsslyU5gZ//ht5I8fIYvtZHp+s9imvJOU1aYrrzTlBWmK+80ZYXfz2ryvmC5DaMU+lFg88DjTf11S405kuSpwLn0To6epKr2AHtG+JorSrK/quZW+zrjMk15pykrTFfeacoK05V3mrLC2uUd5W2L9wJbk1yQ5GzgKmDvojF7gTf0l38B+GyTx88laR0bOkPvHxO/DriT3tsWb66qA0luAPZX1V7gA8CHk8wD/0Gv9CVJYzTSMfSq2gfsW7Tu+oHl7wCv7TbailZ92GbMpinvNGWF6co7TVlhuvJOU1ZYo7zxyIgktcFL/yWpEVNR6Elem+RAkv9NsuyZ4SQLSR5Kcn+S/ePMuCjHqHm3JXk4yXySXePMOJDhOUk+leQr/b+fvcy4/+nv1/uTLD4pvtYZV9xPSZ6e5CP97fckmR1nviXyDMv7xiTHBvbnr0wiZz/LzUkeS/KlZbYnybv7/5YHk1w87owDWYZlvSzJ8YH9ev1S48YhyeYkdyU52O+Ctywxpvt9W1Xr/g/wIuBHgM8BcyuMWwA2TkNeeieYvwpcCJwNPABcNIGs7wR29Zd3Ae9YZty3JrQvh+4n4NeB9/WXrwI+MsHv/Sh53wi8Z1IZF2X5aeBi4EvLbL8S+AQQ4FLgnnWc9TLg7ya9T/tZzgMu7i+fA3x5iZ+DzvftVMzQq+pQVZ3pRUhjN2Le799SoaoeB07cUmHcdgAf6i9/CHj1BDKsZJT9NPhv+BjwiiQZY8ZB6+X7OpKq+jy9d6YtZwdwS/XcDTwryXnjSXeyEbKuG1X1aFV9ob/838AhelfUD+p8305FoZ+GAj6Z5L7+Vanr2VK3VFj8DR+H51XVo/3lfweet8y4DUn2J7k7yavHEw0YbT+ddOsJ4MStJyZh1O/ra/q/Zn8syeYltq8X6+XndFQ/leSBJJ9I8mOTDgPQPwT4YuCeRZs637fr5gMuknwaeP4Sm95eVX8z4su8vKqOJnku8Kkk/9T/X71zHeUdi5WyDj6oqkqy3NueXtDftxcCn03yUFV9teusTxJ/C9xaVd9N8qv0frv42QlnasEX6P2cfivJlcDHga2TDJTkmcBfAr9VVf+11l9v3RR6VV3ewWsc7f/9WJK/pvfr75oUegd5R7mlQidWyprka0nOq6pH+7/uPbbMa5zYt4eTfI7ejGMchd7ZrSfGZGjeqhrM9n565zHWq7H9nK7WYGFW1b4k702ysaomco+XJE+jV+Z/XlV/tcSQzvdtM4dckjwjyTknloGfA5Y8G75OjHJLhXEYvG3DG4BTfrtI8uz0PsSEJBuBl3Hy7ZPX0rTdemJo3kXHSbfTO766Xu0FXt9/R8alwPGBQ3TrSpLnnzh3kuQSev02kf/Y+zk+AByqqnctM6z7fTvps8EjnjH+eXrHl74LfA24s7/+h4B9/eUL6b2j4AHgAL1DH+s2b/3/We4v05vpTiQvvWPNnwG+AnwaeE5//Ry9T6cCeCnwUH/fPgRcO+aMp+wn4AZge395A/BRYB74R+DCCf+8Dsv7h/2f0QeAu4AfnWDWW4FHge/1f2avBd4MvLm/PfQ+4Oar/e/9su8yWwdZrxvYr3cDL51g1pfTO6f3IHB//8+Va71vvVJUkhrRzCEXSXqys9AlqREWuiQ1wkKXpEZY6JLUCAtdkhphoUtSIyx0SWrE/wFIdvJ+uT0QiwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(best_sharpes, bins=20, range=(-1.5, 2), density=True)\n",
    "plt.hist(sharpes, bins=20, range=(-1.5,2), density=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/site-packages/ipykernel_launcher.py:1: VisibleDeprecationWarning: Passing `normed=True` on non-uniform bins has always been broken, and computes neither the probability density function nor the probability mass function. The result is only correct if the bins are uniform, when density=True will produce the same result anyway. The argument will be removed in a future version of numpy.\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n",
      "/usr/local/lib/python3.7/site-packages/ipykernel_launcher.py:5: VisibleDeprecationWarning: Passing `normed=True` on non-uniform bins has always been broken, and computes neither the probability density function nor the probability mass function. The result is only correct if the bins are uniform, when density=True will produce the same result anyway. The argument will be removed in a future version of numpy.\n",
      "  \"\"\"\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "H,X1 = np.histogram(sharpes, bins=50, normed=True)\n",
    "dx = X1[1] - X1[0]\n",
    "F1 = np.cumsum(H)*dx\n",
    "\n",
    "H,X2 = np.histogram(best_sharpes, bins=50, normed=True)\n",
    "dx = X2[1] - X2[0]\n",
    "F2 = np.cumsum(H)*dx\n",
    "\n",
    "plt.plot(X1[1:], F1)\n",
    "plt.plot(X2[1:], F2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\data_analysis\notebooks\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\notebooks\luigi_example.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-03-23T07:46:00.501053Z",
     "start_time": "2021-03-23T07:45:56.205992Z"
    }
   },
   "source": [
    "!pip install -e /opt/ssl_libs/workspace/luigi/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:17:56.273793Z",
     "start_time": "2022-11-17T01:17:55.627740Z"
    }
   },
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:17:58.870919Z",
     "start_time": "2022-11-17T01:17:58.638839Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import sys"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:17:59.703667Z",
     "start_time": "2022-11-17T01:17:59.424160Z"
    }
   },
   "outputs": [],
   "source": [
    "from research.research.base import *\n",
    "from research.research.transform import *\n",
    "from research.research.target_position import *\n",
    "from research.research.parameter_tune import hyperparameter_tunning, sensitivity_plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:02.286718Z",
     "start_time": "2022-11-17T01:18:01.858727Z"
    }
   },
   "outputs": [],
   "source": [
    "# some random feature\n",
    "feature = pd.Series(np.random.normal(size=1500), index=pd.date_range(\"2015-01-01\", \"2021-01-01\")[0:1500])\n",
    "feature.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:07.802050Z",
     "start_time": "2022-11-17T01:18:07.775288Z"
    }
   },
   "outputs": [],
   "source": [
    "# Signal is a wrapper of pandas series, and we override the __repr__ to make it look like pandas\n",
    "signal = Signal(feature)\n",
    "print(type(signal))\n",
    "signal"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## transform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:13.048001Z",
     "start_time": "2022-11-17T01:18:13.022465Z"
    }
   },
   "outputs": [],
   "source": [
    "# Transform are wrapper class and pandas operations\n",
    "\n",
    "TransformEWMA({'window':5})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:17.653961Z",
     "start_time": "2022-11-17T01:18:17.627191Z"
    }
   },
   "outputs": [],
   "source": [
    "# with __call__ functions implemtned, transform instance behave like functions, \n",
    "# which take one input parameter of pandas series\n",
    "TransformEWMA({'window':5})(feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:20.836188Z",
     "start_time": "2022-11-17T01:18:20.811015Z"
    }
   },
   "outputs": [],
   "source": [
    "# compare with pandas version\n",
    "feature.ewm(span=5).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## target position transform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:31.883134Z",
     "start_time": "2022-11-17T01:18:31.858150Z"
    }
   },
   "outputs": [],
   "source": [
    "# a special type of transform, which generates position for backtesting\n",
    "BinaryThreshold({'threshold':2})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:32.810775Z",
     "start_time": "2022-11-17T01:18:32.623888Z"
    }
   },
   "outputs": [],
   "source": [
    "BinaryThreshold({'threshold':2})(feature).plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:36.539135Z",
     "start_time": "2022-11-17T01:18:36.335813Z"
    }
   },
   "outputs": [],
   "source": [
    "# which is equivalent to \n",
    "feature.apply(lambda s: 1 if s>2 else -1 if s<-2 else 0).plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## signal interacts with transform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:39.459150Z",
     "start_time": "2022-11-17T01:18:39.432959Z"
    }
   },
   "outputs": [],
   "source": [
    "# signal can directly interacts with transform intance\n",
    "signal.apply_transform(TransformEWMA({'window':5}))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:46.509244Z",
     "start_time": "2022-11-17T01:18:46.483158Z"
    }
   },
   "outputs": [],
   "source": [
    "# signal can also interact with multiple tranforms\n",
    "signal.apply_transforms([TransformEWMA({'window':5}), TransformDiff({'window': 2})])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:49.425772Z",
     "start_time": "2022-11-17T01:18:49.399786Z"
    }
   },
   "outputs": [],
   "source": [
    "# which is equivalent to \n",
    "feature.ewm(span=5).mean().diff(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## generate position"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:18:54.109326Z",
     "start_time": "2022-11-17T01:18:53.889937Z"
    }
   },
   "outputs": [],
   "source": [
    "# we apply 10 day span ewma, and then 5 day difference on signal\n",
    "# we do long short position with a threshold of 0.5 on signal\n",
    "position = generate_position(signal, \n",
    "                             transforms=[TransformEWMA({'window': 10}),\n",
    "                                         TransformDiff({'window':5}),\n",
    "                                         BinaryThreshold({'threshold': 0.5})])\n",
    "print(type(position))\n",
    "position.plot(title='')\n",
    "# which is the same as pandas version\n",
    "feature.ewm(span=10).mean().diff(5).apply(lambda s: 1 if s>0.5 else -1 if s<-0.5 else 0).plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## strategy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:05.921431Z",
     "start_time": "2022-11-17T01:19:05.695494Z"
    }
   },
   "outputs": [],
   "source": [
    "# we first generate a dummy tradable as some brownian motion\n",
    "tradable = pd.Series(np.random.normal(size=1500), index=feature.index).cumsum()\n",
    "tradable.plot(title='tradable')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:18.999669Z",
     "start_time": "2022-11-17T01:19:18.948236Z"
    }
   },
   "outputs": [],
   "source": [
    "# Strategy is a class, which instance is a callable that generate pnl from given position\n",
    "# UnitStrategy here is a simple delta1 backtesting framework\n",
    "strategy = UnitStrategy(tradable, bid_ask_spread=0)\n",
    "print(type(strategy))\n",
    "\n",
    "strategy(position = position).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:22.016667Z",
     "start_time": "2022-11-17T01:19:21.690862Z"
    }
   },
   "outputs": [],
   "source": [
    "# let's look at the cumulative pnl\n",
    "strategy(position = position)['cumpnl'].plot(title='strategy output pnl')\n",
    "plt.show()\n",
    "# which is equivalent to the pandas version\n",
    "(tradable.diff() * position.shift(1)).cumsum().plot(title='pandas output pnl')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## hyper parameter tunning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:27.708143Z",
     "start_time": "2022-11-17T01:19:27.683382Z"
    }
   },
   "outputs": [],
   "source": [
    "# we often need to try different choices of hyperparameters in tranforms\n",
    "# we explictly enumerate all choices in list, and also include the Transform class\n",
    "[TransformEWMA, {'window': [3,5,7,9,11]}]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:28.950670Z",
     "start_time": "2022-11-17T01:19:28.412959Z"
    }
   },
   "outputs": [],
   "source": [
    "# then the high level function hyperparameter_tunning will try all of combinations of hyperparameters\n",
    "df = hyperparameter_tunning(\n",
    "    signal = signal,\n",
    "    transform_factories=[(TransformEWMA,{'window':[3,5,7,9,11]}),\n",
    "                         (TransformDiff, {'window': [1,3,5]}),\n",
    "                         (BinaryThreshold, {'threshold': [0,1,0.3,0.5]})],\n",
    "    strategy=strategy,\n",
    "    multiprocessing=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:34.168156Z",
     "start_time": "2022-11-17T01:19:34.035072Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# parameters are named with prefix t{i}_ , where i the the ith transform\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:47.497915Z",
     "start_time": "2022-11-17T01:19:47.474007Z"
    }
   },
   "outputs": [],
   "source": [
    "# we can double check it does include all combinations\n",
    "pd.unique(df['t0_window'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:50.203620Z",
     "start_time": "2022-11-17T01:19:50.166983Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# the backtest results are wrapped in column 'backtest'\n",
    "df['backtest'].iloc[0].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## sensitivity analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:19:54.856761Z",
     "start_time": "2022-11-17T01:19:54.656043Z"
    }
   },
   "outputs": [],
   "source": [
    "# say we think the parameter combination in row 3 looks good\n",
    "# and want to check all other combinations with similar value\n",
    "print(df.iloc[3])\n",
    "df.iloc[3]['backtest']['cumpnl'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T01:20:07.849844Z",
     "start_time": "2022-11-17T01:20:06.980313Z"
    }
   },
   "outputs": [],
   "source": [
    "# some handy way to generate sensitivity analysis\n",
    "\n",
    "sensitivity_plot(df, df.columns[:3], idx=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\notebooks\research_tool_demo.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:22.805720Z",
     "start_time": "2022-11-17T05:54:22.078381Z"
    }
   },
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:23.034923Z",
     "start_time": "2022-11-17T05:54:22.808182Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import sys"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:23.650573Z",
     "start_time": "2022-11-17T05:54:23.037590Z"
    }
   },
   "outputs": [],
   "source": [
    "from research.research.base import *\n",
    "from research.research.transform import *\n",
    "from research.research.target_position import *\n",
    "from research.research.parameter_tune import hyperparameter_tunning, sensitivity_plot,collect_backtest_col, collect_position\n",
    "\n",
    "from data_analysis.data_analysis.overfitting_tests import run_overfitting_tests, run_overfitting_tests_multi, \\\n",
    "    run_overfitting_test_for_each_parameter, highlight_report\n",
    "from telemetry.telemetry.performance import PerformanceAnalytics, compare_performances\n",
    "from telemetry.telemetry.position import position_report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:11:05.258719Z",
     "start_time": "2022-11-17T05:11:02.145714Z"
    }
   },
   "source": [
    "from golem.data_base_queries import load_tris\n",
    "\n",
    "tri_full= load_tris(['USD','EUR','GBP','JPY','AUD','CHF','NOK','SEK'],start_date='2002-01-01',end_date='2018-01-01',\n",
    "               tenor='5Y',table_name='swap_tri',fwdtenor2load='3M', to_downsample=True, verbose=True\n",
    "               )\n",
    "\n",
    "tri = tri_full.loc[:,pd.IndexSlice[:,'tri']].droplevel(axis=1, level=1)\n",
    "tri\n",
    "\n",
    "tri_full.to_parquet('golem_tri_full.pqt')\n",
    "tri.to_parquet('golem_tri.pqt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:23.816724Z",
     "start_time": "2022-11-17T05:54:23.653430Z"
    }
   },
   "outputs": [],
   "source": [
    "tri = pd.read_parquet(r'C:\\Dev\\projects\\transfer\\myversion\\golem_tri.pqt')\n",
    "\n",
    "tri = tri.ffill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:24.523038Z",
     "start_time": "2022-11-17T05:54:23.819830Z"
    }
   },
   "outputs": [],
   "source": [
    "tri.plot(figsize=(15,5), grid=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:24.564555Z",
     "start_time": "2022-11-17T05:54:24.525239Z"
    }
   },
   "outputs": [],
   "source": [
    "ccys = tri.columns\n",
    "entry_delay = 1\n",
    "\n",
    "bid_ask_spread={\n",
    "  \"USD\": 0.003,\n",
    "  \"EUR\": 0.004,\n",
    "  \"GBP\": 0.006,\n",
    "  \"JPY\": 0.004,\n",
    "  \"AUD\": 0.01,\n",
    "  \"CHF\": 0.01,\n",
    "  \"NOK\": 0.025,\n",
    "  \"SEK\": 0.015}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Momentum signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:24.599735Z",
     "start_time": "2022-11-17T05:54:24.566407Z"
    }
   },
   "outputs": [],
   "source": [
    "# diff ret\n",
    "diff_ret_factories = [(TransformDiff, {'window': [21, 42, 63, 84, 126, 189, 252]}),\n",
    "                      (BinaryThreshold, {'threshold': 0}),\n",
    "                     ]\n",
    "# diff ret vol scaled\n",
    "diff_ret_vol_scale_factories = [(TransformDiff, {'window': [21, 42, 63, 84, 126, 189, 252], 'vol_scaling_window':[21,63]}),\n",
    "                      (BinaryThreshold, {'threshold': [0.1,0.2,0.3,]}),\n",
    "                     ]\n",
    "\n",
    "# ewma ret\n",
    "ewma_ret_factories = [(TransformEWMARet, {'window': [1 * t for t in [21, 42, 63, 84, 126, 189, 252]]}),\n",
    "                      (BinaryThreshold, {'threshold': 0}),\n",
    "                     ]\n",
    "# straddle delta (t test pvalue)\n",
    "momentum_pvalue_factories = [(TransformMomentumP, {'window':[21, 42, 63, 84, 126, 189, 252]}),\n",
    "                             (BinaryThreshold, {'threshold': [0, 0.1, 0.2, 0.3, 0.4,0.5, 0.6]}),]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:24.630372Z",
     "start_time": "2022-11-17T05:54:24.601756Z"
    }
   },
   "outputs": [],
   "source": [
    "# quick and dirty way to have entry delay by shifting backward tri in strategy callable\n",
    "# alternatively can shift forward the signal\n",
    "strategy_multi = MultiStrategy(tri.shift(-entry_delay), bid_ask_spread=bid_ask_spread)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:25.355628Z",
     "start_time": "2022-11-17T05:54:24.632690Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret = hyperparameter_tunning(Signal(tri), diff_ret_factories,strategy_multi,multiprocessing=True,verbose=True)\n",
    "\n",
    "backtest_diff_ret.sort_values('sharpe', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:27.622453Z",
     "start_time": "2022-11-17T05:54:25.358831Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret_vol_scale = hyperparameter_tunning(Signal(tri), diff_ret_vol_scale_factories,strategy_multi,multiprocessing=True,verbose=True)\n",
    "\n",
    "backtest_diff_ret_vol_scale.sort_values('sharpe', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:54:28.334275Z",
     "start_time": "2022-11-17T05:54:27.624858Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_ewma_ret = hyperparameter_tunning(Signal(tri), ewma_ret_factories,strategy_multi,multiprocessing=True,verbose=True)\n",
    "\n",
    "backtest_ewma_ret.sort_values('sharpe', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:18.077841Z",
     "start_time": "2022-11-17T05:54:28.336695Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "backtest_momentum_pvalue = hyperparameter_tunning(Signal(tri), momentum_pvalue_factories,strategy_multi,multiprocessing=True,verbose=True)\n",
    "\n",
    "backtest_momentum_pvalue.sort_values('sharpe', ascending=False).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# cross sectional"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:18.120993Z",
     "start_time": "2022-11-17T05:56:18.080331Z"
    }
   },
   "outputs": [],
   "source": [
    "diff_ret_cs_factories = [(TransformDiff, {'window': [21, 42, 63, 84, 126, 189, 252], 'vol_scaling_window':63, 'vol_lower_bound':0.01}),\n",
    "                         (CrossSectionalLongShort,{'n_long':[3],'n_short':[3]}),\n",
    "                           ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:23.270347Z",
     "start_time": "2022-11-17T05:56:18.123437Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret_cs = hyperparameter_tunning(Signal(tri),\n",
    "                                          diff_ret_cs_factories,\n",
    "                                          MultiStrategy(tri.shift(-entry_delay), bid_ask_spread=bid_ask_spread,\n",
    "                                                        vol_scaling=True, vol_scaling_window=63, vol_lower_bound=0.01),\n",
    "                                          multiprocessing=True, verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:23.419226Z",
     "start_time": "2022-11-17T05:56:23.273210Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret_cs.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# overfitting test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:23.615907Z",
     "start_time": "2022-11-17T05:56:23.421698Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:23.920692Z",
     "start_time": "2022-11-17T05:56:23.618162Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret.iloc[2]['backtest'][['cumpnl','cumpnl_net']].plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## overfitting test for one tradable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:23.968216Z",
     "start_time": "2022-11-17T05:56:23.926512Z"
    }
   },
   "outputs": [],
   "source": [
    "# USD position\n",
    "collect_backtest_col(backtest_diff_ret, 'USD_pos')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:24.006096Z",
     "start_time": "2022-11-17T05:56:23.971037Z"
    }
   },
   "outputs": [],
   "source": [
    "# USD daily pnls\n",
    "collect_backtest_col(backtest_diff_ret,'USD_pnl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:27.063621Z",
     "start_time": "2022-11-17T05:56:24.008447Z"
    }
   },
   "outputs": [],
   "source": [
    "highlight_report(run_overfitting_tests(df_daily_pnls=collect_backtest_col(backtest_diff_ret,'USD_pnl'),\n",
    "                      df_positions=collect_backtest_col(backtest_diff_ret, 'USD_pos'),\n",
    "                     df_tri_ret=tri['USD'].diff(), signal_selected='63_0'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T02:04:07.320362Z",
     "start_time": "2022-11-17T02:04:07.283667Z"
    }
   },
   "source": [
    "## overfitting test for multiple tradable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:27.160069Z",
     "start_time": "2022-11-17T05:56:27.065933Z"
    }
   },
   "outputs": [],
   "source": [
    "# all position\n",
    "collect_position(backtest_diff_ret)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:27.199621Z",
     "start_time": "2022-11-17T05:56:27.162497Z"
    }
   },
   "outputs": [],
   "source": [
    "# aggregated daily pnl\n",
    "collect_backtest_col(backtest_diff_ret, 'pnl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:32.654804Z",
     "start_time": "2022-11-17T05:56:27.203003Z"
    }
   },
   "outputs": [],
   "source": [
    "highlight_report(run_overfitting_tests_multi(\n",
    "df_daily_pnls=collect_backtest_col(backtest_diff_ret,'pnl'),\n",
    "df_positions=collect_position(backtest_diff_ret),\n",
    "df_tri_ret=tri.diff(),\n",
    "signal_selected='63_0'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# position report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:32.745875Z",
     "start_time": "2022-11-17T05:56:32.657557Z"
    }
   },
   "outputs": [],
   "source": [
    "collect_position(backtest_diff_ret)['63_0']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:32.907528Z",
     "start_time": "2022-11-17T05:56:32.748062Z"
    }
   },
   "outputs": [],
   "source": [
    "position_report(collect_position(backtest_diff_ret)['63_0'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# performance report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:32.962519Z",
     "start_time": "2022-11-17T05:56:32.910718Z"
    }
   },
   "outputs": [],
   "source": [
    "backtest_diff_ret.iloc[2]['backtest'][['cumpnl','cumpnl_net','cumcost']].reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:32.997531Z",
     "start_time": "2022-11-17T05:56:32.965124Z"
    }
   },
   "outputs": [],
   "source": [
    "perf = PerformanceAnalytics(backtest_diff_ret.iloc[2]['backtest'][['cumpnl','cumpnl_net','cumcost']].reset_index().dropna(),\n",
    "                           load_asof={'timestamp': 'index', 'net_pnl': 'cumpnl_net',\n",
    "                                     'gross_pnl': 'cumpnl', 'cost': 'cumcost',\n",
    "                                     'vol_budget': 1.0, })"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:33.119472Z",
     "start_time": "2022-11-17T05:56:33.000060Z"
    }
   },
   "outputs": [],
   "source": [
    "perf.compute_statistics()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# compare performance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:33.171614Z",
     "start_time": "2022-11-17T05:56:33.121529Z"
    }
   },
   "outputs": [],
   "source": [
    "# net cumpnl\n",
    "collect_backtest_col(backtest_diff_ret,'cumpnl_net')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:35.306687Z",
     "start_time": "2022-11-17T05:56:33.175330Z"
    }
   },
   "outputs": [],
   "source": [
    "df_rolling_sharpes, stats_comparison=\\\n",
    "compare_performances(collect_backtest_col(backtest_diff_ret,'cumpnl_net').reset_index().dropna(),\n",
    "                    load_asof={'timestamp': 'index',\n",
    "                             'net_pnls': ['21_0', '42_0','63_0','84_0','189_0','252_0'],\n",
    "                             'rolling_sharpe_window': 252,\n",
    "                             'vol_budget': 1.0,\n",
    "                             })"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-17T05:56:35.366756Z",
     "start_time": "2022-11-17T05:56:35.309311Z"
    }
   },
   "outputs": [],
   "source": [
    "stats_comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\notebooks\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\setup.py
----------------------------------------
import setuptools

setuptools.setup(
    name="research",
    version="0.1",
    author="ahabre",
    author_email="",
    description="pipeline",
    long_description="",
    long_description_content_type="text/markdown",
    url="[na]",
    packages=setuptools.find_packages(),
    classifiers=[
        "Programming Language :: Python :: 3",
    ],
)

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\base.py
----------------------------------------
from abc import ABC, abstractmethod
from dataclasses import dataclass
from typing import List, Union
import pandas as pd
import numpy as np


class Transform(ABC):
    def __init__(self, params: dict):
        self.params = params
        self.name = params.get("name", "")

    @abstractmethod
    def __call__(self, signal: pd.Series) -> pd.Series:
        """ returns the transformed signal time series
        """
        pass


class Signal:
    def __init__(self, s: pd.Series):
        assert isinstance(s, (pd.Series, pd.DataFrame))
        assert isinstance(s.index, pd.DatetimeIndex)
        assert s.index.is_monotonic_increasing
        self.data = s

    def __repr__(self):
        return self.data.__repr__()

    def apply_transform(self, transform: Transform):
        return Signal(transform(self.data))

    def apply_transforms(self, transforms: List[Transform]):
        output = self.data
        for transform in transforms:
            output = transform(output)
        return Signal(output)


class Strategy(ABC):
    @abstractmethod
    def __call__(self, position) -> pd.DataFrame:
        """
        given position, generate PnL
        """
        pass


@dataclass
class UnitStrategy(Strategy):
    """
    Simple Delta 1 Strategy

    :param target_time_series: tradable / total return index price time series
    :param bid_ask_spread: bid/ask spread for target_time_series
    :param vol_scaling: if True, use inverse of realized vol of return from target_time_series to scale position
    :param vol_scaling_window: num of observations to be used to estimate vol
    :param vol_lower_bound, lower_bound for estimated vol, thus introduce a upper_bound on scaled position
    :param vol_calculation_time_series,optional. the time series used to calculate hist vol for vol scaling,
           if None, then use target_time_series
    """
    target_time_series: pd.Series
    bid_ask_spread: float = 0
    vol_scaling: bool = False
    vol_scaling_window: int = 63
    vol_lower_bound: float = 0
    vol_calculation_time_series: pd.Series = None

    def __post_init__(self):
        assert isinstance(self.target_time_series, pd.Series)
        assert isinstance(self.target_time_series.index, pd.DatetimeIndex)
        assert self.target_time_series.index.is_monotonic_increasing
        assert self.bid_ask_spread >= 0
        df_tradable = pd.DataFrame(self.target_time_series)
        df_tradable.columns = ['tradable']
        # for vol_scaling: we calculate rvol inadvance
        if self.vol_scaling:
            if self.vol_calculation_time_series is None:
                df_tradable['rvol'] = df_tradable['tradable'].diff().rolling(self.vol_scaling_window).std() * np.sqrt(
                    252)
            else:
                rvol = self.vol_calculation_time_series.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
                rvol.name = 'rvol'
                df_tradable = pd.merge_asof(left=df_tradable, right=rvol, left_index=True, right_index=True)
            df_tradable['rvol'] = df_tradable['rvol'].clip(lower=self.vol_lower_bound)
        self.df_tradable = df_tradable

    def __call__(self, position: pd.Series) -> pd.DataFrame:
        """
        given position, generate PnL
        """
        df_pos = pd.DataFrame(position)
        df_pos.columns = ['pos']

        df = pd.merge_asof(left=self.df_tradable, right=df_pos, left_index=True, right_index=True)

        if self.vol_scaling:
            df['pos_unscaled'] = df['pos']
            df['pos'] = df['pos_unscaled'] / df['rvol']

        df['pnl'] = df['tradable'].diff() * df['pos'].shift(1)
        df['cumpnl'] = df['pnl'].cumsum()
        df['cost'] = df['pos'].diff().abs() * self.bid_ask_spread / 2.0
        df['cumcost'] = df['cost'].cumsum()
        df['pnl_net'] = df['pnl'] - df['cost']
        df['cumpnl_net'] = df['cumpnl'] - df['cumcost']
        return df


class MultiStrategy(UnitStrategy):
    """
    Delta 1 Strategy on multiple target,
    effectively a wrapper of multiple UnitStrategy

    :param target_time_series: tradable / total return index price time series
    :param bid_ask_spread: bid/ask spread for target_time_series
    :param vol_scaling: if True, use inverse of realized vol of return from target_time_series to scale position
    :param vol_scaling_window: num of observations to be used to estimate vol
    :param vol_lower_bound, lower_bound for estimated vol, thus introduce a upper_bound on scaled position
    :param vol_calculation_time_series,optional, if not None then need to have same col as target_time_series.
           the time series used to calculate hist vol for vol scaling, if None, then use target_time_series.
    """
    target_time_series: pd.DataFrame
    bid_ask_spread: Union[float, dict] = 0
    vol_scaling: bool = False
    vol_scaling_window: int = 63
    vol_lower_bound: Union[float, dict] = 0
    vol_calculation_time_series: pd.DataFrame = None

    def __post_init__(self):
        assert isinstance(self.target_time_series, pd.DataFrame)
        assert isinstance(self.target_time_series.index, pd.DatetimeIndex)
        assert self.target_time_series.index.is_monotonic_increasing
        self.unit_strategies = dict()
        for col in self.target_time_series.columns:
            if isinstance(self.bid_ask_spread, dict):
                bid_ask_spread_col = self.bid_ask_spread[col]
            else:
                bid_ask_spread_col = self.bid_ask_spread
            assert bid_ask_spread_col >= 0
            self.unit_strategies[col] = UnitStrategy(
                target_time_series=self.target_time_series[col],
                bid_ask_spread=bid_ask_spread_col,
                vol_scaling=self.vol_scaling,
                vol_scaling_window=self.vol_scaling_window,
                vol_lower_bound=self._get_vol_lower_bound(col),
                vol_calculation_time_series=self._get_vol_calculation_time_series(col)
            )

    def _get_vol_lower_bound(self, col):
        if isinstance(self.vol_lower_bound, dict):
            return self.vol_lower_bound[col]
        else:
            return self.vol_lower_bound

    def _get_vol_calculation_time_series(self, col):
        if self.vol_calculation_time_series is None:
            return None
        else:
            return self.vol_calculation_time_series[col]

    def __call__(self, positions: pd.DataFrame) -> pd.DataFrame:
        """
        given position, generate PnL
        """
        assert positions.columns.isin(self.target_time_series.columns).all()
        df = pd.DataFrame()
        for col in positions.columns:
            tmp_unitstrategy = self.unit_strategies[col]
            tmp_res = tmp_unitstrategy(positions[col])
            df[col + '_pos'] = tmp_res['pos']
            df[col + '_pnl'] = tmp_res['pnl']
            df[col+'_cumpnl'] = tmp_res['cumpnl']
            df[col+'_cumcost'] = tmp_res['cumcost']
            df[col+'_pnl_net'] = tmp_res['pnl_net']
            df[col+'_cumpnl_net'] = tmp_res['cumpnl_net']
        df['pnl'] = df[[col+'_pnl' for col in positions.columns]].sum(axis=1, min_count=1)
        df['cumpnl'] = df[[col+'_cumpnl' for col in positions.columns]].sum(axis=1, min_count=1)
        df['cumcost'] = df[[col+'_cumcost' for col in positions.columns]].sum(axis=1, min_count=1)
        df['pnl_net'] = df[[col+'_pnl_net' for col in positions.columns]].sum(axis=1, min_count=1)
        df['cumpnl_net'] = df[[col+'_cumpnl_net' for col in positions.columns]].sum(axis=1, min_count=1)
        return df


def generate_position(signal: Signal,
                      transforms: List[Transform]) -> pd.Series:
    pos = signal.apply_transforms(transforms).data
    pos.name = 'pos'
    return pos

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\cross_sectional.py
----------------------------------------
import pandas as pd
from dataclasses import dataclass
from research.research.target_position import CrossSectionalLongShort
from research.research.base import MultiStrategy, Signal
from research.research.transform import Transform


@dataclass
class MultiRankingStrategy:
    """
    another representation of MultiStrategy,
    PnL returned: given the price and signal of multiple assetes,
                  calculate the PnL of always long asset with largest
                  (and also 2nd largest, 3rd largest,..., smallest) signal value

    :param target_time_series: tradable / total return index price time series
    :param bid_ask_spread: bid/ask spread for target_time_series
    :param vol_scaling: if True, use inverse of realized vol of return from target_time_series to scale position
    :param vol_scaling_window: num of observations to be used to estimate vol
    :param vol_lower_bound, lower_bound for estimated vol, thus introduce a upper_bound on scaled position
    :param n_long: number of assets to long, will be passed to class CrossSectionalLongShort
    :param n_shrot: number of assets to short, will be passed to class CrossSectionalLongShort
    """
    target_time_series: pd.DataFrame
    bid_ask_spread: float = 0
    vol_scaling: bool = False
    vol_scaling_window: int = 63
    vol_lower_bound: float = 0
    n_long: int = 1
    n_short: int = 1

    def __post_init__(self):
        assert isinstance(self.target_time_series, pd.DataFrame)
        assert isinstance(self.target_time_series.index, pd.DatetimeIndex)
        assert self.target_time_series.index.is_monotonic_increasing
        assert self.bid_ask_spread >= 0

    def __call__(self, signals: Signal) -> pd.DataFrame:
        """
        given signals (not position), generate PnL by signal ranking asset
        """
        long_pos = list(range(1, self.n_long+1))  # e.g. [1,2,3]
        short_pos = list(range(-self.n_short, 0,))  # e.g. [-3,-2,-1]
        cs = CrossSectionalLongShort({'n_long': self.n_long,
                                      'n_short': self.n_short,
                                      'long_pos': long_pos,
                                      'short_pos': short_pos})
        multi_strategy = MultiStrategy(target_time_series=self.target_time_series,
                                       bid_ask_spread=self.bid_ask_spread,
                                       vol_scaling=self.vol_scaling,
                                       vol_scaling_window=self.vol_scaling_window,
                                       vol_lower_bound=self.vol_lower_bound)

        pos_long_short = signals.apply_transform(cs)
        pnl_ranking = pd.DataFrame()
        for pos in short_pos + long_pos:
            binary_map = _TransformBinaryMap({'key': pos, 'value': 1, 'others': 0})
            pnl_ranking[pos] = multi_strategy(pos_long_short.apply_transform(binary_map).data)['cumpnl']
        return pnl_ranking


class _TransformBinaryMap(Transform):
    # check all input value, pick out specific value
    # e.g. map all value=1 to 1 and everything else to 0
    def __init__(self, params: dict):
        super().__init__(params)
        self.key = self.params['key']
        self.value = self.params.get('value', 1)
        self.others = self.params.get('others', 0)

    def __call__(self, signal: pd.Series) -> pd.Series:
        data = signal.copy()
        f = data == self.key
        data[f] = self.value
        data[~f] = self.others
        return data

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\overfitting_test.py
----------------------------------------
import pandas as pd
import numpy as np
from typing import Union
from research.research.base import Signal, Strategy, Transform, UnitStrategy, generate_position
from typing import List, Tuple, Generator, Type
from copy import deepcopy
from research.research.parameter_tune import hyperparameter_tunning
from tqdm.autonotebook import tqdm
from multiprocessing import Pool
from telemetry.telemetry.stats import sharpe
from research.research.parameter_tune import _transform_generator
from itertools import product


def get_pass_threshold_quick(positions, threshold=0.95, trials=2000):
    #     predictions = np.array(optimizer.tried_predicts)
    size = len(positions[0])
    rets = np.reshape(np.random.normal(size=size*trials), [size,trials])
    #     pnls = np.matmul(np.array(predictions), dd)
    stds = (np.matmul(positions ** 2, rets ** 2)/size - np.matmul(positions, rets) ** 2/size/size) ** 0.5
    means = np.array(np.matmul(np.array(positions), rets) / size)
    max_sharpes = np.max(means/stds, axis=0) * np.sqrt(252)
    if isinstance(threshold, list):
        return [np.quantile(max_sharpes, t) for t in threshold]
    else:
        return np.quantile(max_sharpes, threshold)


def get_positions(signal, transform_factories):
    generators = product(*[_transform_generator(factory) for factory in transform_factories])
    positions = []
    for transforms in generators:
        positions.append(generate_position(signal, transforms).fillna(0).values)
    return np.array(positions)


# def get_overfit_sharpe_threshold(signal: Signal,
#                                  transform_factories: List[Tuple[Type[Transform], dict]],
#                                  target_position_transform_factory: Tuple[Type[Transform], dict],
#                                  strategy: UnitStrategy,
#                                  brownian: bool = False,
#                                  threshold: float = 0.95,
#                                  trials: int = 500) -> float:
#     sharpes_random = []
#     for i in range(trials):
#         random_target = generate_random_tradable(strategy.target_time_series, brownian=brownian)
#         random_strategy = deepcopy(strategy)
#         random_strategy.target_time_series = random_target
#         df = hyperparameter_tunning(signal=signal,
#                                     transform_factories=transform_factories,
#                                     target_position_transform_factory=target_position_transform_factory,
#                                     strategy=random_strategy,
#                                     multiprocessing=False,
#                                     verbose=False)
#         sharpes_random.append(df['sharpe'].max())
#     return np.quantile(sharpes_random, threshold)
#
#
# def generate_brownian_motion(index: pd.DatetimeIndex) -> pd.Series:
#     return pd.Series(np.random.normal(size=len(index)).cumsum(), index=index)
#
#
# def generate_random_tradable(tradable: Union[pd.Series, pd.DataFrame], brownian: bool = False) -> pd.Series:
#     """
#     generate the random tradable by either brownian motion, or shuffle the return of input tradable
#     new random tradable has same index as input tradable
#     :param tradable: tradable price time series, e.g. ETF, Total Return Index
#     :param brownian: if True, generate brownian motion,
#                     if False, generate random tradable by shuffling return of input tradable
#     :return:
#     """
#     assert isinstance(tradable, (pd.Series, pd.DataFrame))
#     if brownian:
#         # brownian motion
#         if isinstance(tradable, pd.Series):
#             new_tradable = generate_brownian_motion(index=tradable.index)
#         else:
#             new_tradable = pd.DataFrame(index=tradable.index)
#             for col in tradable.columns:
#                 new_tradable[col] = generate_brownian_motion(index=tradable.index)
#     else:
#         # shuffle the return
#         # we keep the first day level unchanged, thus last day level should be unchanged as well
#         idx_series = pd.Series(range(len(tradable)), index=range(len(tradable)))
#         shuffled_idx = idx_series[1:].sample(frac=1, replace=False).index
#         returns = tradable.diff().reset_index(drop=True)
#         returns.index = list(returns.index)
#         shuffled_returns = returns.loc[shuffled_idx]
#         new_tradable = pd.concat([tradable.iloc[0:1], shuffled_returns]).cumsum()
#         new_tradable.index = tradable.index
#     if isinstance(tradable, pd.Series):
#         new_tradable.name = tradable.name
#     return new_tradable

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\parameter_tune.py
----------------------------------------
import pandas as pd
import numpy as np
from itertools import product
from typing import List, Tuple, Generator, Type, Callable, Union
from research.research.base import Signal, Strategy, Transform, generate_position
from tqdm.autonotebook import tqdm
from multiprocessing import Pool
from telemetry.telemetry.stats import daily_pnl, sharpe, sortino, DAILY


def hyperparameter_tunning(signal: Signal,
                           transform_factories: List[Tuple[Type[Transform], dict]],
                           strategy: Strategy,
                           multiprocessing: bool = False,
                           verbose: bool = True) -> pd.DataFrame:
    """

    :param signal:
    :param transform_factories:
    :param strategy:
    :param multiprocessing: boolean, if true, use multiprocessing to speed up
    :param verbose: boolean, whether to turn on progress bar
    :return:
    """

    generators = product(*[_transform_generator(factory) for factory in transform_factories])
    t2sr = Transforms2StrategyResults(strategy, signal)

    results = []
    if verbose:
        num_combination = np.prod([_dict_value_len(factory[1]) for factory in transform_factories])
        if not multiprocessing:
            for transforms in tqdm(generators, total=num_combination):
                df = t2sr(transforms)
                results.append(df)
        else:
            with Pool() as p:
                results = list(tqdm(p.imap(t2sr, generators), total=num_combination))
    else:
        if not multiprocessing:
            for transforms in generators:
                df = t2sr(transforms)
                results.append(df)
        else:
            with Pool() as p:
                results = p.map(t2sr, generators)

    return pd.concat(results, ignore_index=True)


def sensitivity_plot(df: pd.DataFrame, feature_cols: List[str], idx: int,
                     col_backtest: str = 'backtest', subcol_mtm: str = 'cumpnl')->None:
    """
    generate sensitivity analysis plot in one go
    :param df:
    :param feature_cols: column names of all features in df
    :param idx: the row number of the df,
            which hyperparameter combination to do sensitivity analysis on
    :param col_backtest: the column in df which contain another dataframe of backtest results
    :param subcol_mtm: the column in df[col_backtest] which contain mtm (or total pnl) to plot
    :return:
    """
    import matplotlib.pyplot as plt

    def get_f_from_config(config: dict) -> pd.Series:
        f = df.notnull().any(axis=1)
        for k, v in config.items():
            f = f & df[k].eq(v)
        return f
    # the value of hyperparameters for row idx in df
    config_idx = df[feature_cols].iloc[idx].to_dict()

    for grpby in config_idx.keys():
        filtered_dict = {k: v for k, v in config_idx.items() if k != grpby}
        xx = df.loc[get_f_from_config(filtered_dict)]
        fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(10, 5), gridspec_kw={'width_ratios': [4, 1]})
        for _, row in xx.iterrows():
            axes[0].plot(row[col_backtest][subcol_mtm], label=grpby + ': ' + str(row[grpby]))
        axes[0].tick_params(axis='x', rotation=45)
        axes[0].legend()
        axes[0].set_title(f'signal sensitivity analysis on {grpby}')
        axes[1].barh([grpby + ': ' + str(s) for s in xx[grpby].values],
                     [p[subcol_mtm].ffill().iloc[-1] for p in xx[col_backtest]])
        axes[1].yaxis.tick_right()
        fig.tight_layout()

        plt.show()


def sensitivity_heatmap(df: pd.DataFrame, values, index: str, columns: str, aggfunc='mean',
                        pivot_kwargs: dict=dict(), ax=None, **heatmap_kwargs) -> None:
    """

    :param df: dataframe with backtesting stats and hyperparameters
    :param values: column name with value to aggregate, will be passed to pandas pivot_table, e.g. 'sharpe'
    :param index: column name for pivot_table index
    :param columns: column name for pivot_table column
    :param aggfunc: aggregation function for pivot_table
    :param pivot_kwargs: other parameters to be passed to pivot_table
    :param heatmap_kwargs: other kew-worded parameters to be passed to seaborn heatmap,
                           e.g. vmax=1, vmin=-1
    :return:
    """
    from research.research.plots_helper import plot_heatmap

    pivot_table = df.pivot_table(values=values, index=index, columns=columns, aggfunc=aggfunc, **pivot_kwargs)
    plot_heatmap(pivot_table, ax=ax, **heatmap_kwargs)


# ############################### Internal class and functions ###############################

class Transforms2StrategyResults:
    """
    callable that take transform as input and return strategy result
    initialized with strategy and signal
    """
    def __init__(self, strategy: Strategy, signal: Signal):
        self.strategy = strategy
        self.signal = signal

    def __call__(self, transforms: Tuple[Transform]) -> pd.DataFrame:
        """
        given transform, generate pnl, and also record the transform params
        :param transforms:
        :return:
        """
        pos = generate_position(self.signal, list(transforms))
        df_backtest = self.strategy(pos)
        df_param = pd.concat([_extract_params(t, f"t{i}_") for i, t in enumerate(transforms)], axis=1)
        df_param['tot_pnl'] = df_backtest['cumpnl'].ffill().iloc[-1]
        if 'cumpnl_net' in df_backtest.columns:
            df_param['tot_pnl_net'] = df_backtest['cumpnl_net'].ffill().iloc[-1]
        if 'pnl' in df_backtest.columns:
            df_param['sharpe'] = sharpe(df_backtest['pnl'], period=DAILY)
        else:
            df_param['sharpe'] = sharpe(daily_pnl(df_backtest['cumpnl']), period=DAILY)
        if 'pnl_net' in df_backtest.columns:
            df_param['sharpe_net'] = sharpe(df_backtest['pnl_net'], period=DAILY)
        elif 'cumpnl_net' in df_backtest.columns:
            df_param['sharpe_net'] = sharpe(daily_pnl(df_backtest['cumpnl_net']), period=DAILY)
        df_param['sortino'] = sortino(daily_pnl(df_backtest['cumpnl']), period=DAILY)
        df_param['backtest'] = [df_backtest]
        df_param['tag'] = create_tag_for_transform_param(transforms)
        return df_param


def _dict_value_len(params: dict) -> int:
    """
    for dictionary which value is list, calculate product of value length for dict
    i.e. len of params_expander generator
    :param params: dictionary of params, value can be list of values
            e.g.: {'window': 5}, {'window': [5,10], 'threshold': [1,2]}
    :return: int
    example:
    >>> _dict_value_len({'window': [5,10], 'threshold': [1,2]})
    4  # 2*2
    """
    result = 1
    for v in params.values():
        if type(v) == list:
            result = result * len(v)
    return result


def _params_expander(params: dict) -> Generator:
    """
    expand a dictionary of list to a generator of dictionary
    :param params: dictionary of params, value can be list of values
            e.g.: {'window': 5}, {'window': [5,10], 'threshold': [1,2]}
    :return: a generator of params after expanding value list in params

    example:
    >>> params_generator = _params_expander({'window': [5,10], 'threshold': [1,2]})
    >>> next(params_generator)
    {'window': 5, 'threshold': 1}

    """
    # first expand value list in dict and make a list of values
    # i.e. {'window': [5,10], 'threshold': [1,2]}
    #  => [[('window', 5), ('window', 10)], [('threshold', 1), ('threshold', 2)]]
    params_list = []
    for k, v in params.items():
        if type(v) != list:
            v = [v]
        params_list.append(list(zip([k]*len(v), v)))

    for d in product(*params_list):
        yield dict(d)


def _transform_generator(transform_factory: (Type[Transform], dict)) -> Generator:
    """
    take transform class and params dictionary as input, return transform generator
    :param transform_factory: e.g. (TransformEWMA, {'window': [21,63]})
    :return:
    """
    cls_transform, configs = transform_factory
    for params in _params_expander(configs):
        yield cls_transform(params)


def _extract_params(transform: Transform, prefix: str = "") -> pd.DataFrame:
    """
    extract params from a transform and return as one row dataframe
    :param transform:
    :param prefix:
    :return:
    """
    # filter for keys not starting with '_', which is internal params
    params = transform.params
    params = {k: params[k] for k in filter(lambda s: s[0] != '_', params.keys())}

    df = pd.DataFrame(params, index=[0])
    df.columns = [prefix+col for col in df.columns]
    return df


def create_tag_for_transform_param(transforms: tuple):
    """
    create a tag (str format) for the transforms, by using the params in the transforms
    :param transforms:
    :return:
    """
    tag = []
    for t in transforms:
        params = [t.params[k] for k in filter(lambda s: s[0] != '_', t.params.keys())]
        tag.append('_'.join([str(p) for p in params]))
    return '_'.join(tag)


def collect_backtest_col(xdf: Union[pd.DataFrame, pd.Series], col: str = 'pnl'):
    """
    handy function to work on output of function "hyperparameter_tunning",
    it will go over each backtest and collect the specified col, e.g. pnl, pnl_net
    useful for comparing different backtest
    :param xdf: pandas DataFrame, output of hyperparameter_tunning
    :param col: str, col name in backtest to be retrieved
    :return:
    """
    if isinstance(xdf, pd.Series):
        return xdf['backtest'][col].rename(xdf['tag'])
    else:
        return pd.concat([collect_backtest_col(xdf.iloc[i], col=col) for i in range(len(xdf))], axis=1)


def collect_position(xdf: Union[pd.DataFrame, pd.Series]):
    """
    handy function to work on output of function "hyperparameter_tunning",
    it will go over each backtest and collect all positions
    :param xdf:
    :return:
    """
    if isinstance(xdf, pd.Series):
        xx = xdf['backtest'][[col for col in xdf['backtest'].columns if 'pos' in col]]
        xx.rename(columns=lambda col: col.split('_')[0], inplace=True)
        xx.columns = pd.MultiIndex.from_product([[xdf['tag']], xx.columns])
        return xx
    else:
        return pd.concat([collect_position(xdf.iloc[i]) for i in range(len(xdf))], axis=1)

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\plots_helper.py
----------------------------------------
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from telemetry.telemetry.stats import sharpe


# ################## plot pnl ########################
def plot_cumpnl(cumpnl, figsize=(12, 7.5), title="PnL and Rolling 1Y Sharpe", ax=None):
    if ax is None:
        fig = plt.figure(figsize=figsize)
        ax = fig.add_subplot(111)
    ax.plot(cumpnl, label='pnl')
    ax.legend(loc='upper left')
    ax.set_ylabel('pnl')
    ax2 = ax.twinx()
    ax2.plot(cumpnl.diff().rolling(252).apply(sharpe),label='rolling 1y sharpe',color='red')
    ax2.legend(loc='upper right')
    ax2.set_ylabel('Rolling Sharpe')
    ax.set_title(title)
    return ax


# ################## position stats ######################
def get_position_stats(pos: pd.Series) -> pd.Series:
    d = dict()
    d['long'] = pos.eq(1).sum()
    d['partial_long'] = (pos.gt(0)&pos.lt(1)).sum()
    d['flat'] = pos.eq(0).sum()
    d['partial_short'] = (pos.lt(0)&pos.gt(-1)).sum()
    d['short'] = pos.eq(-1).sum()
    return pd.Series(d)


def plot_positions_stats(positions: pd.DataFrame, width=0.25, ax=None):
    if ax is None:
        fig, ax = plt.subplots(figsize=(10, 7))

    def autolabel(rects):
        """Attach a text label above each bar in *rects*, displaying its height."""
        for rect in rects:
            height = rect.get_height()
            ax.annotate('{}'.format(height),
                        xy=(rect.get_x() + rect.get_width() / 2, height),
                        xytext=(0, 3),  # 3 points vertical offset
                        textcoords="offset points",
                        ha='center', va='bottom')

    labels = positions.index
    x = np.arange(len(labels))

    num_col = len(positions.columns)  # num of columns
    mid = (num_col-1)/2.0  # which col at center
    for i, col in enumerate(positions.columns):
        rect = ax.bar(x + (i-mid) * width, height=positions[col], width=width, label=col)
        autolabel(rect)

    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.set_ylabel('Count of days')
    ax.legend()
    return ax


# ############### bucket analysis #######################

def returns_per_position(positions, returns,
                         qcut_kwargs={}, cut_kwargs={}):
    """
    it is important to match the index between position and returns,
    usually you need to shift 1 day: returns = cumpnl.diff().shift(-1)

    :param positions:
    :param returns:
    :param qcut_kwargs:
    :param cut_kwargs:
    :return:
    example:
    >>> bucket_normalized_return, bucket_counts, df = returns_per_position(
    pos, cumpnl.diff().shift(-1), qcut_kwargs={'q':7})
    """
    assert (not qcut_kwargs or not cut_kwargs), 'Choose between qcut or cut.'
    df = pd.concat([returns,
                    positions,
                    ], axis=1).dropna()
    df.columns = ['returns', 'positions']
    df['return_normalized'] = (df['returns'] / df['positions'].abs()).replace([np.inf, -np.inf], np.nan)
    if qcut_kwargs:
        df['cuts'] = pd.qcut(df['positions'], **qcut_kwargs)
    elif cut_kwargs:
        df['cuts'] = pd.cut(df['positions'], **cut_kwargs)
    bucket_counts = df['cuts'].value_counts().sort_index()
    bucket_normalized_return = df.groupby('cuts')['return_normalized'].mean().sort_index()
    return bucket_normalized_return, bucket_counts, df


def returns_per_holding_period(positions, returns,
                               qcut_kwargs={}, cut_kwargs={}):
    """
    it is important to match the index between position and returns,
    usually you need to shift 1 day: returns = cumpnl.diff().shift(-1)

    You must choose either qcut args or cut args.
    Refer to the pandas documentation for pd.qcut or pd.cut.


    >>> bucket_normalized_return, counts, df = returns_per_holding_period(
    pos, cumpnl.diff().shift(-1), qcut_kwargs={'q':7})
    """
    assert (not qcut_kwargs or not cut_kwargs), 'Choose between qcut or cut.'
    positions = np.sign(positions)
    df = pd.concat([returns,
                    positions,
                    (positions != positions.shift()).cumsum()
                    ], axis=1).dropna()
    df.columns = ['returns', 'positions', 'groups']
    df['holding_period'] = df.groups.map(dict(df.groups.value_counts()))
    df = df.reset_index().set_index('groups')
    counts = df[~df.index.duplicated(keep='first')]['holding_period']

    if qcut_kwargs:
        df['cuts'] = pd.qcut(counts, **qcut_kwargs)
    elif cut_kwargs:
        df['cuts'] = pd.cut(counts, **cut_kwargs)
    bucket_counts = df.loc[~df.index.duplicated(keep='first'), 'cuts'].value_counts().sort_index()
    bucket_mean_daily_return = df.groupby('cuts')['returns'].mean().sort_index()
    return bucket_mean_daily_return, bucket_counts, df


# ############### heatmap #######################
def plot_heatmap(df, figsize=(12, 7.5), cmap='RdYlBu', vmax=None, vmin=None, ax=None, fillna=np.nan,  **kwargs):
    if ax is None:
        fig = plt.figure(figsize=figsize)
        ax = fig.add_subplot(111)
    sns.heatmap(df.fillna(fillna), annot=True, cmap=cmap, vmax=vmax, vmin=vmin, ax=ax, **kwargs)
    return ax

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\sharpe_filtering.py
----------------------------------------
import pandas as pd
import numpy as np
from scipy import stats
from sklearn.base import BaseEstimator, RegressorMixin
from sklearn.utils.validation import check_array, check_X_y, check_is_fitted
from telemetry.telemetry.stats import daily_pnl, sharpe, sortino, DAILY
from tqdm.autonotebook import tqdm
from data_analysis.data_analysis import walkforward_training, WalkForwardSplit


class SharpeFiltering(BaseEstimator, RegressorMixin):
    """
    filtering on sharpe ratio, implemented in sklearn Regressor style
    X is portfolio daily return, y is dummy input but need to share same index as X
    when sharpe is higher then the threshold, returned predict is same as X,
    otherwise return NaN
    """
    def __init__(self, sharpe_threshold, **params):
        self.params = params
        self.sharpe_threshold = sharpe_threshold
        self.sharpe_ = None

    def fit(self, X, y=None):
        assert len(X.columns) == 1
        # X is returns
        if y is None:
            y = pd.Series([0] * len(X), index=X.index)
        return self._fit(X, y)

    def _fit(self, X, y):
        X_, y_ = check_X_y(X, y)
        self.sharpe_ = sharpe(X[X.columns[0]])

    def predict(self, X):
        """If sharpe larger than threshold, return X,
        else return 0
        Parameters
        ----------
        X : array of shape [n_samples, n_features]
            The input samples.
        Returns
        -------
        y : array of shape [n_samples]
            The predicted target values.
        """
        check_is_fitted(self)
        if self.sharpe_ > self.sharpe_threshold:
            return X[X.columns[0]]
        else:
            return pd.Series([np.NaN] * len(X), index=X.index)


def walkforward_sharpe_filtering(df_backtest: pd.DataFrame, splitter,
                                 sharpe_threshold=0.57, xtra_cols=[]) -> pd.DataFrame:
    """

    :param df_backtest:
    :param splitter:
    :param sharpe_threshold:
    :param xtra_cols: list of columns in df_backtest, which value will be copied to the filtered backtest output
    :return:
    Example:
    --------
    >>> splitter = WalkForwardSplit(train_size=252*5, test_size=252, gap=0, expanding=False)
    >>> threshold = stats.norm.ppf(0.9) / np.sqrt(5)

    """
    df_backtest_filtered = []
    for idx, df_tmp in tqdm(df_backtest.iterrows(), total=len(df_backtest)):
        X = df_tmp['backtest'][['pnl']].dropna()
        y = pd.Series([0] * len(X), index=X.index)
        models, y_preds = walkforward_training(X,
                                               y,
                                               model=SharpeFiltering(sharpe_threshold),
                                               splitter=splitter,
                                               verbose=False)
        df_tmp_mom = df_tmp['backtest'][['tradable', 'pos', 'rvol', 'pos_unscaled']].copy()
        df_tmp_mom['pnl'] = y_preds
        df_tmp_mom['cumpnl'] = y_preds.cumsum()
        df_tmp_mom['active'] = y_preds.notnull().shift(-1)
        new_backtest = pd.DataFrame([[idx, sharpe(y_preds), df_tmp_mom]],
                                    columns=['idx',  'sharpe', 'backtest'], index=[0])
        for col in xtra_cols:
            new_backtest[col] = df_tmp[col]
        df_backtest_filtered.append(new_backtest)

    df_backtest_filtered = pd.concat(df_backtest_filtered, ignore_index=True)
    return df_backtest_filtered


def get_total_pnl(df_backtest_filtered):
    return pd.concat([df_backtest_filtered.iloc[i]['backtest']['pnl'] for i in range(len(df_backtest_filtered))],
                     axis=1).mean(axis=1).cumsum()


def get_standalone_pnl_and_exposure(df_backtest_filtered, groupby):
    """
    group the different backtest by some column, check the pnl if we trade each of them on its own,
    and also the weighting of it at the time.
    e.g. we have a bunch of backtest on CNH, KRW, etc.
    what would be the pnl if we trade CNH on its own,
    and further, what is the exposure allocation percentage on CNH at the time

    :param df_backtest_filtered:
    :param groupby:
    :return:
    """
    pnl_by_grouping = pd.DataFrame()
    for group_name, df_tmp in df_backtest_filtered.groupby(groupby):
        r = pd.concat([df_tmp.iloc[i]['backtest']['cumpnl'] for i in range(len(df_tmp))], axis=1).diff()
        pnl_by_grouping[group_name] = r.mean(axis=1).cumsum()

    exposure_by_grouping = pd.DataFrame()
    for group_name, df_tmp in df_backtest_filtered.groupby(groupby):
        r = pd.concat([df_tmp.iloc[i]['backtest']['cumpnl'] for i in range(len(df_tmp))], axis=1).diff()
        exposure_by_grouping[group_name] = r.notna().sum(axis=1)

    # normalize
    exposure_by_grouping = exposure_by_grouping.apply(lambda row: row / row.sum(), axis=1)

    return pnl_by_grouping, exposure_by_grouping


def get_grouped_pnl_and_position(df_backtest_filtered, groupby):
    """
    group the different backtest by some column, calculate PnL contribution from each group.
    e.g. we have a bunch of backtest on CNH, KRW, etc. with total pnl to be 2 mn
    what would be the pnl contribution from each ccy, which sum up to this 2mn
    :param df_backtest_filtered:
    :param groupby:
    :return:
    """

    def _get_filtered_pos(df):
        pos = pd.Series(index=df.index)
        pos.loc[df['active'].fillna(False)] = df['pos']
        return pos

    pnl_by_group = pd.DataFrame()
    pos_group = pd.DataFrame()
    active_counts_by_group = pd.DataFrame()
    for group_name, df_backtest_tmp in df_backtest_filtered.groupby(groupby):
        # pnl by group
        df_tmp = pd.concat([df_backtest_tmp.iloc[i]['backtest'][['pnl']] for i in range(len(df_backtest_tmp))], axis=1)
        pnl_by_group[group_name] = df_tmp.sum(axis=1)
        # pos by group
        pos_group_tmp = pd.concat(
            [_get_filtered_pos(df_backtest_tmp.iloc[i]['backtest']) for i in range(len(df_backtest_tmp))], axis=1)
        pos_group_tmp['total_pos'] = pos_group_tmp.sum(axis=1)
        pos_group[group_name] = pos_group_tmp['total_pos']
        active_counts_by_group[group_name] = pos_group_tmp.drop(columns=['total_pos']).notnull().sum(axis=1)
    pnl_by_group = pnl_by_group.div(active_counts_by_group.sum(axis=1).shift(1).replace(0, 1, inplace=False), axis=0).cumsum()
    pos_group = pos_group.div(active_counts_by_group.sum(axis=1).replace(0, 1, inplace=False), axis=0)
    return pnl_by_group, pos_group, active_counts_by_group

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\target_position.py
----------------------------------------
import pandas as pd
import numpy as np
from research.research.base import Transform
from typing import Union


class BinaryThreshold(Transform):
    def __init__(self, params: dict):
        super().__init__(params)
        self.threshold = self.params['threshold']

    def __call__(self, signal: Union[pd.Series, pd.DataFrame]) -> Union[pd.Series, pd.DataFrame]:
        if isinstance(signal, pd.Series):
            return self._on_series(signal)
        elif isinstance(signal, pd.DataFrame):
            pos = pd.DataFrame()
            for col in signal.columns:
                pos[col] = self._on_series(signal[col])
            return pos
        else:
            raise ValueError("input signal need to be either Series or DataFrame")

    def _on_series(self, signal: pd.Series):
        pos = signal.apply(
            lambda s: 1 if s > self.threshold else -1 if s < -self.threshold else 0)
        # keep na as na
        pos.loc[signal.isna()] = np.NaN
        pos.name = 'pos'
        return pos


class BinaryEntryExitThreshold(Transform):
    def __init__(self, params: dict):
        super().__init__(params)
        self.threshold_entry = self.params['threshold_entry']
        self.threshold_exit = self.params['threshold_exit']

    def __call__(self, signal: pd.Series) -> pd.Series:

        df = pd.DataFrame(signal, columns=['signal'])
        df['pos'] = np.NaN
        df.loc[df['spread_zscore'].gt(self.threshold_entry), 'pos'] = -1
        df.loc[df['spread_zscore'].lt(-self.threshold_entry), 'pos'] = 1
        df.loc[df['spread_zscore'].gt(-self.threshold_exit) & df['spread_zscore'].lt(self.threshold_exit), 'pos'] = 0
        df['pos'] = df['pos'].ffill()
        return df['pos']


class CrossSectionalLongShort(Transform):
    """
    given a dataframe with same type of signals on different assets through time,
    at each timestamp, long the assets with nlargest signal,
    short the assets with nsmallest signal

    if number of valid signal is smaller than n_long + n_short, won't take
    position at that timestamp
    """
    def __init__(self, params: dict):
        """

        :param params: dict, with following accepted keys
                        'n_long': int, number of assets to long, default 1
                        'n_short': int, number of assets to short, default 1
                        'long_pos': float or List of numbers, default 1, long position
                            (if of type list, from small signal to large signal, the length must match n_long,)
                        'short_pos' float or List of numbers, default -1, short position
                            (if of type list, from small signal to large signal, the length must match n_short,)
        example:
        # long 2 assets with largest signal, with position of 1 for each of the 2 assets
        # short 2 assets with smallest signal, with position of -1 for each of the 2 assets
        >>> params1 = {
        ...         'n_long': 2,
        ...         'n_short': 2,
        ...        }
        # long 3 assets with largest signal, with position of 2 for each of the 3 assets
        # short 3 assets with smallest signal, with position of -1 for each of the 3 assets
        >>> params2 = {
        ...         'n_long': 3,
        ...         'n_short': 3,
        ...         'long_pos': 2,
        ...         'short_pos': -1
        ...        }
        # long 3 assets with largest signal, among which the largest signal asset take position=3,
        # 2nd largest asset take position=2, 3rd largest asset take position=1
        # short 2 assets with smallest signal, among which the smallest signal asset take position=-3,
        2nd smallest asset take position=-2, 3rd smallest asset take position=-1
        >>> params3 = {
        ...         'n_long': 3,
        ...         'n_short': 3,
        ...         'long_pos': [1,2,3],
        ...         'short_pos': [-3,-2,-1]
        ...        }
        """

        super().__init__(params)
        self.n_long = self.params.get('n_long', 1)
        self.n_short = self.params.get('n_short', 1)
        self.long_pos = self.params.get('long_pos', 1)
        self.short_pos = self.params.get('short_pos', -1)
        assert isinstance(self.n_long, int)
        assert isinstance(self.n_short, int)
        assert isinstance(self.long_pos, (list, int, float))
        assert isinstance(self.short_pos, (list, int, float))
        if isinstance(self.long_pos, list):
            assert len(self.long_pos) == self.n_long
        if isinstance(self.short_pos, list):
            assert len(self.short_pos) == self.n_short
        self.n_asset = 0

    def __call__(self, signals: pd.DataFrame) -> pd.DataFrame:
        assert len(signals.columns) >= self.n_long + self.n_short,\
            "total num of long and short larger than num of assets in signal"
        # assert signals.notna().sum(axis=1).min() >= self.n_long + self.n_short, \
        #     "too many signal data missing, not enough assets for long short"
        self.n_asset = len(signals.columns)
        positions = signals.apply(self.on_snapshot, axis=1)
        return positions

    def on_snapshot(self, signal_snapshot: pd.Series) -> pd.Series:

        n_valid = signal_snapshot.notna().sum()

        if n_valid >= self.n_long+self.n_short:
            s = pd.Series([0] * len(signal_snapshot), index=signal_snapshot.index)

            # only take position when there are enough assets
            # idx_sort = snapshot_notnull.values.argsort()
            # s.loc[snapshot_notnull.index[idx_sort[:self.n_short]]] = -1
            # s.loc[snapshot_notnull.index[idx_sort[-self.n_long:]]] = 1

            idx_sort = signal_snapshot.values.argsort()
            s.iloc[idx_sort[:self.n_short]] = self.short_pos
            if n_valid == self.n_asset:
                s.iloc[idx_sort[-self.n_long:]] = self.long_pos
            else:
                # na at end of idx_sort according to np convention
                s.iloc[idx_sort[-self.n_long-self.n_asset+n_valid:-self.n_asset+n_valid]] = self.long_pos
        else:
            s = pd.Series(index=signal_snapshot.index)
        return s


class CrossSectionalLongShortHold(Transform):
    """
    Similar to CrossSectionalLongShort, but will reduce turnover by holding the position
    until it drop out of some range. e.g. enter long position when asset is top 2,
    exit that long position when this asset drop out of top 3.

    given a dataframe with same type of signals on different assets through time,
    at each timestamp, long the assets with nlargest signal,
    short the assets with nsmallest signal.

    if number of valid signal is smaller than n_long + n_short, won't take
    position at that timestamp
    """
    def __init__(self, params: dict):
        """
        :param params: dict, with following accepted keys
                        'n_long': int, number of assets to long, default 1
                        'n_short': int, number of assets to short, default 1
                        'n_long_exit': int, default to be equal to n_long, and need to be larger or equal to n_long.
                                       for any long position on a tradable, we will hold the position
                                       until it drop out of top n_long assets
                        'n_short_exit': int, default to be equal to n_short, and need to be larger or equal to n_short.
                                       for any short position on a tradable, we will hold the position
                                       until it drop out of bottom n_short assets
        example:
        # CrossSectionalLongShortHold({'n_long':2, 'n_short':2, 'n_long_exit':3, 'n_short_exit':3})
        # long 2 assets with largest signal, with position of 1 for each of the 2 assets
        # short 2 assets with smallest signal, with position of -1 for each of the 2 assets
        # hold position until they drop out of top/bottom 3 assets
        >>> params1 = {
        ...         'n_long': 2,
        ...         'n_short': 2,
        ...         'n_long_exit': 3,
        ...         'n_short_exit': 3,
        ...        }

        """

        super().__init__(params)
        self.n_long = self.params.get('n_long', 1)
        self.n_short = self.params.get('n_short', 1)
        self.n_long_exit = self.params.get('n_long_exit', self.n_long)
        self.n_short_exit = self.params.get('n_short_exit', self.n_short)
        assert isinstance(self.n_long, int)
        assert isinstance(self.n_short, int)
        assert isinstance(self.n_long_exit, int)
        assert isinstance(self.n_short_exit, int)
        assert self.n_long <= self.n_long_exit
        assert self.n_short <= self.n_short_exit
        self.n_asset = 0

    def __call__(self, signals: pd.DataFrame) -> pd.DataFrame:
        assert len(signals.columns) >= self.n_long + self.n_short, \
            "total num of long and short larger than num of assets in signal"
        self.n_asset = len(signals.columns)
        position = []

        pos = np.array([0] * self.n_asset)
        for row in signals.itertuples():
            pos = self.on_snapshot(row[1:], prev_pos=pos)
            position.append(pd.DataFrame([pos], index=[row[0]]))
        position = pd.concat(position, axis=0)
        position.columns = signals.columns
        return position

    def on_snapshot(self, signal_snapshot, prev_pos):

        signal_snapshot = np.array(signal_snapshot)
        n_valid = np.sum(~np.isnan(signal_snapshot))

        if (n_valid >= self.n_long + self.n_short_exit) and (n_valid >= self.n_short + self.n_long_exit):

            idx_sort = signal_snapshot.argsort()

            idx_short = idx_sort[:self.n_short]
            idx_short_hold = idx_sort[self.n_short:self.n_short_exit]

            if n_valid == self.n_asset:
                idx_long = idx_sort[-self.n_long:]
                idx_long_hold = idx_sort[-self.n_long_exit:-self.n_long]

            else:
                idx_long = idx_sort[-self.n_long - self.n_asset + n_valid:-self.n_asset + n_valid]
                idx_long_hold = idx_sort[-self.n_long_exit - self.n_asset + n_valid:-self.n_long-self.n_asset + n_valid]

            s = np.array([0]*len(signal_snapshot))
            s[idx_long] = 1
            s[idx_short] = -1
            s[idx_long_hold] = np.maximum(prev_pos[idx_long_hold], 0)
            s[idx_short_hold] = np.minimum(prev_pos[idx_short_hold], 0)
        else:
            s = np.array([0]*len(signal_snapshot))
        return s

    # def __call__(self, signals: pd.DataFrame) -> pd.DataFrame:
    #     assert len(signals.columns) >= self.n_long + self.n_short,\
    #         "total num of long and short larger than num of assets in signal"
    #     # assert signals.notna().sum(axis=1).min() >= self.n_long + self.n_short, \
    #     #     "too many signal data missing, not enough assets for long short"
    #     self.n_asset = len(signals.columns)
    #     positions_group = signals.apply(self.on_snapshot, axis=1)
    #     positions_long = (positions_group['long'] + positions_group['long_hold']).ffill()
    #     positions_short = (positions_group['short'] + positions_group['short_hold']).ffill()
    #     return (positions_long + positions_short).fillna(0)
    #
    # def on_snapshot(self, signal_snapshot: pd.Series) -> pd.Series:
    #
    #     n_valid = signal_snapshot.notna().sum()
    #     s_long = pd.Series([0] * len(signal_snapshot), index=signal_snapshot.index)
    #     s_short = pd.Series([0] * len(signal_snapshot), index=signal_snapshot.index)
    #     s_long_hold = pd.Series([0] * len(signal_snapshot), index=signal_snapshot.index)
    #     s_short_hold = pd.Series([0] * len(signal_snapshot), index=signal_snapshot.index)
    #
    #     if n_valid >= self.n_long+self.n_short:
    #
    #         idx_sort = signal_snapshot.values.argsort()
    #         s_short.iloc[idx_sort[:self.n_short]] = -1
    #         s_short_hold.iloc[idx_sort[self.n_short:self.n_short_exit]] = np.NaN
    #
    #         if n_valid == self.n_asset:
    #             s_long.iloc[idx_sort[-self.n_long:]] = 1
    #             s_long_hold.iloc[idx_sort[-self.n_long_exit:-self.n_long]] = np.NaN
    #         else:
    #             # na at end of idx_sort according to np convention
    #             s_long.iloc[idx_sort[-self.n_long-self.n_asset+n_valid:-self.n_asset+n_valid]] = 1
    #             s_long_hold.iloc[idx_sort[-self.n_long_exit - self.n_asset + n_valid:-self.n_long-self.n_asset + n_valid]] = np.NaN
    #
    #     return pd.concat([s_long, s_short, s_long_hold, s_short_hold],
    #                      keys=['long', 'short', 'long_hold', 'short_hold'])


class CrossSectionalLongShortHoldBalance(Transform):
    """
    Similar to CrossSectionalLongShortHold, but will keep the number of long and short balanced.
    Reduce turnover by holding the position until it drop out of some range. e.g. enter long position when asset is top 2,
    exit that long position when this asset drop out of top 3.
    Only add new top (bottom) when old trade exit.

    given a dataframe with same type of signals on different assets through time,
    at each timestamp, long the assets with nlargest signal,
    short the assets with nsmallest signal.

    if number of valid signal is smaller than n_long + n_short, won't take
    position at that timestamp
    """
    def __init__(self, params: dict):
        """
        :param params: dict, with following accepted keys
                        'n_long': int, number of assets to long, default 1
                        'n_short': int, number of assets to short, default 1
                        'n_long_exit': int, default to be equal to n_long, and need to be larger or equal to n_long.
                                       for any long position on a tradable, we will hold the position
                                       until it drop out of top n_long assets
                        'n_short_exit': int, default to be equal to n_short, and need to be larger or equal to n_short.
                                       for any short position on a tradable, we will hold the position
                                       until it drop out of bottom n_short assets
        example:
        # CrossSectionalLongShortHoldBalance({'n_long':2, 'n_short':2, 'n_long_exit':3, 'n_short_exit':3})
        # long 2 assets with largest signal, with position of 1 for each of the 2 assets
        # short 2 assets with smallest signal, with position of -1 for each of the 2 assets
        # hold position until they drop out of top/bottom 3 assets
        >>> params1 = {
        ...         'n_long': 2,
        ...         'n_short': 2,
        ...         'n_long_exit': 3,
        ...         'n_short_exit': 3,
        ...        }

        """

        super().__init__(params)
        self.n_long = self.params.get('n_long', 1)
        self.n_short = self.params.get('n_short', 1)
        self.n_long_exit = self.params.get('n_long_exit', self.n_long)
        self.n_short_exit = self.params.get('n_short_exit', self.n_short)
        assert isinstance(self.n_long, int)
        assert isinstance(self.n_short, int)
        assert isinstance(self.n_long_exit, int)
        assert isinstance(self.n_short_exit, int)
        assert self.n_long <= self.n_long_exit
        assert self.n_short <= self.n_short_exit
        self.n_asset = 0

    def __call__(self, signals: pd.DataFrame) -> pd.DataFrame:
        assert len(signals.columns) >= self.n_long + self.n_short, \
            "total num of long and short larger than num of assets in signal"
        self.n_asset = len(signals.columns)
        position = []

        pos = np.array([0] * self.n_asset)
        for row in signals.itertuples():
            pos = self.on_snapshot(row[1:], prev_pos=pos)
            position.append(pd.DataFrame([pos], index=[row[0]]))
        position = pd.concat(position, axis=0)
        position.columns = signals.columns
        return position

    def on_snapshot(self, signal_snapshot, prev_pos):

        signal_snapshot = np.array(signal_snapshot)
        n_valid = np.sum(~np.isnan(signal_snapshot))

        if n_valid >= self.n_long + self.n_short:

            idx_sort = signal_snapshot.argsort()

            idx_short = idx_sort[:self.n_short]
            # here idx_short_hold will include idx_short, since we figure out short_hold first
            idx_short_hold = idx_sort[:self.n_short_exit]

            if n_valid == self.n_asset:
                idx_long = idx_sort[-self.n_long:]
                idx_long_hold = idx_sort[-self.n_long_exit:]

            else:
                idx_long = idx_sort[-self.n_long - self.n_asset + n_valid:-self.n_asset + n_valid]
                idx_long_hold = idx_sort[
                                -self.n_long_exit - self.n_asset + n_valid:- self.n_asset + n_valid]

            s = np.array([0] * len(signal_snapshot))
            # s[idx_long] = 1
            # s[idx_short] = -1
            s[idx_long_hold] = np.maximum(prev_pos[idx_long_hold], 0)
            s[idx_short_hold] = np.minimum(prev_pos[idx_short_hold], 0)
            xtra_long_needed = self.n_long - (s > 0).sum()
            xtra_short_needed = self.n_short - (s < 0).sum()

            if xtra_short_needed > 0:
                idx_old_short = np.arange(len(s))[s < 0]
                # use assume_unique=True so that numpy doesn't sort the results
                idx_new_short = np.setdiff1d(idx_short, idx_old_short, assume_unique=True)[:xtra_short_needed]
                s[idx_new_short] = -1
            if xtra_long_needed > 0:
                idx_old_long = np.arange(len(s))[s > 0]
                idx_new_long = np.setdiff1d(idx_long, idx_old_long, assume_unique=True)[-xtra_long_needed:]
                s[idx_new_long] = 1

        else:
            s = np.array([0] * len(signal_snapshot))
        return s

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\transform.py
----------------------------------------
import pandas as pd
import numpy as np
from scipy import stats
from typing import Union
from research.research.base import Transform


class TransformRollingMean(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int
        """
        super().__init__(params)
        self.window = self.params['window']

    def __call__(self, signal: pd.Series) -> pd.Series:
        return signal.rolling(self.window).mean()


class TransformEWMA(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int, used as pandas ewm span
        """
        super().__init__(params)
        self.window = self.params['window']

    def __call__(self, signal: pd.Series) -> pd.Series:
        return signal.ewm(span=self.window, adjust=True).mean()


class TransformDiff(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int
                        optional keys: vol_scaling_window: int, if not set then does't perform vol scaling
                                       vol_lower_bound: float, default 0.05
        """
        super().__init__(params)
        self.window = self.params['window']
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        output = signal.diff(self.window)

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformMARet(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int
                        optional keys: vol_scaling_window: int, if not set then does't perform vol scaling
                                       vol_lower_bound: float, default 0.05
        """
        super().__init__(params)
        self.window = self.params['window']
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        output = signal - signal.rolling(self.window).mean().shift(1)

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformEWMARet(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int
                        optional keys: vol_scaling_window: int, if not set then does't perform vol scaling
                                       vol_lower_bound: float, default 0.05
        """
        super().__init__(params)
        self.window = self.params['window']
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        output = signal - signal.ewm(span=self.window, adjust=True).mean().shift(1)

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformMADiff(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: short_window: int
                                       long_window: int
                        optional keys: vol_scaling_window: int, if not set then does't perform vol scaling
                                       vol_lower_bound: float, default 0.05
        """
        super().__init__(params)
        self.short_window = self.params['short_window']
        self.long_window = self.params['long_window']
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        output = signal.rolling(self.short_window).mean() - signal.rolling(self.long_window).mean()

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformEWMADiff(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: short_window: int
                                       long_window: int
                        optional keys: vol_scaling_window: int, if not set then does't perform vol scaling
                                       vol_lower_bound: float, default 0.05
        """
        super().__init__(params)
        self.short_window = self.params['short_window']
        self.long_window = self.params['long_window']
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        output = signal.ewm(span=self.short_window, adjust=True).mean() - signal.ewm(span=self.long_window,
                                                                                     adjust=True).mean()

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformZScore(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: window: int
                        optional keys: mode: str, defulat 'ewma", otherwise doing simple zscore
        """
        super().__init__(params)
        self.window = self.params['window']
        self.mode = self.params.get('mode', 'ewma')

    def __call__(self, signal: pd.Series) -> pd.Series:

        if self.mode == 'ewma':
            grp = signal.ewm(span=self.window, adjust=True)
        else:
            grp = signal.rolling(self.window)
        mu = grp.mean()
        std = grp.std()
        return (signal - mu) / std


class TransformRSI(Transform):
    def __init__(self, params: dict):
        super().__init__(params)
        self.window = self.params['window']
        self.mode = self.params.get('mode', 'ewma')  # 'ewma', 'sma'
        self.vol_scaling_window = self.params.get('vol_scaling_window', None)
        self.vol_lower_bound = self.params.get('vol_lower_bound', 0.05)

    def __call__(self, signal: pd.Series) -> pd.Series:
        delta = signal.diff().fillna(0)
        up, down = delta.clip(lower=0), delta.clip(upper=0)
        if self.mode == 'ewma':
            roll_up = up.ewm(span=self.window).mean()
            roll_down = down.abs().ewm(span=self.window).mean()
        else:
            roll_up = up.rolling(self.window).mean()
            roll_down = down.abs().rolling(self.window).mean()
        #         RS = roll_up/roll_down
        #         RSI= 100 - 100/(1+RS)
        output = 100 * roll_up / (roll_up + roll_down)

        if not self.vol_scaling_window:
            return output
        else:
            rvol = signal.diff().rolling(self.vol_scaling_window).std() * np.sqrt(252)
            rvol = rvol.clip(lower=self.vol_lower_bound)
            return output / rvol


class TransformMomentumP(Transform):
    def __init__(self, params: dict):
        """
        calculate the p-value momentum with given tri
        :param params: dict
                        required keys: window: int, window size for p-value momentum
        """
        super().__init__(params)
        self.window = self.params['window']

    def __call__(self, signal: Union[pd.Series, pd.DataFrame]) -> Union[pd.Series, pd.DataFrame]:
        if isinstance(signal, pd.Series):
            return self._on_series(signal)
        elif isinstance(signal, pd.DataFrame):
            pos = pd.DataFrame()
            for col in signal.columns:
                pos[col] = self._on_series(signal[col])
            return pos
        else:
            raise ValueError("input signal need to be either Series or DataFrame")

    def _on_series(self, signal: pd.Series) -> pd.Series:
        return signal.diff().rolling(self.window).apply(
            lambda x: stats.norm.cdf(x.mean() * np.sqrt(self.window) / x.std()) * 2 - 1)


class TransformFuncWrapper(Transform):
    def __init__(self, params: dict):
        """

        :param params: dict
                        required keys: func: Callable, will be as pd.Series.apply(func)
        """
        super().__init__(params)
        self.func = self.params['func']

    def __call__(self, signal: pd.Series) -> pd.Series:
        return signal.apply(self.func)

# Class Signal;
#
#
# params = {"t1_param": 5, "t2_param": 2}
#
# class SignalPackage
#
#     def __init__(self, signal, ):
#         "signal": Signal(ts)
#         "t1": TransformRollingMean
#         "t2": TransformFFTCoef
#
#
#
#
# sig = Signal(ts)
#
#
#
# t1 = TransformRollingMean()
# t2 = TransformDiffEMA()
#
# sig1 = sig.apply_transform(t1)
# sig2 = sig1.apply_transform(t2)
#
# sig_new = sig.apply_transforms([t1, t2])

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\turnover_analysis.py
----------------------------------------
import pandas as pd
import math
from itertools import combinations
from typing import Union, Callable


def nCr(n: int, r: int) -> float:
    f = math.factorial
    return f(n) / f(r) / f(n-r)


def mix_signal(signals: pd.DataFrame) -> pd.Series:
    return signals.fillna(0).sum(axis=1)


def shapley_naive(l: list,
                  eval_func: Callable[[Union[list, tuple]], Union[float, pd.Series]]):
    """
    calculate shapley value from naive way
    coalitional game interpretation:
    https://towardsdatascience.com/making-sense-of-shapley-values-dc67a8e4c5e8

    shapley_i(v) = (1/N) sum_S{N/{i}} [Cr(N-1, S) * *(v(S+i)-v(s))]
    :param l: list of elements to be evaluated
    :param eval_func: function which take any sublist of l,
            and return the reward value of the coalition of that sublist members
    :return:
    """

    res = dict()
    n = len(l)
    for i in l:
        res_i = 0
        # calcaulte for item i
        l_i = l.copy()
        l_i.remove(i)

        for k in range(0, len(l)):
            for subset in combinations(l_i, k):
                tmp = (1/n) / nCr(n-1, k) * (eval_func(subset + (i,)) - eval_func(subset))
                res_i = res_i + tmp

        res[i] = res_i
    return res


def pos2turnover(position: Union[pd.Series, pd.DataFrame]):
    def _pos2turnover(pos: pd.Series):
        assert isinstance(pos, pd.Series)
        # do not allow na in the middle
        assert len(pos.dropna()) == len(pos.ffill().dropna()), "input data contain non-heading NaNs "
        if len(pos.dropna()) > 0:
            f_first_trade = pos.dropna().index[0]
            res = pos.diff()
            res.loc[f_first_trade] = pos.loc[f_first_trade]
            return res.abs()
        else:
            return pd.Series(index=pos.index, name=pos.name)

    if isinstance(position, pd.Series):
        return _pos2turnover(position)
    elif isinstance(position, pd.DataFrame):
        return position.apply(_pos2turnover)
    else:
        raise ValueError("input data need to be either pandas Series or pandas DataFrame")


def turnover_shapley(pos: pd.DataFrame,
                     mix_func: Callable[[pd.DataFrame], pd.Series] = mix_signal,
                     turnover_func: Callable[[pd.Series], pd.Series] = pos2turnover,
                     shapley_scope: Union[str, list, tuple] = 'default') -> pd.DataFrame:
    """
    turnover attribution of multiple signal, by idea of shapley value
    :param pos: pandas DataFrame, each column contains position of one signal
    :param mix_func: function which used to mix multiple signals' positions,
                    takes one pandas DataFrame as input, and return one pandas Series
    :param turnover_func: function to convert position to turnover,
                    takes one pandas Series, and return one pandas Series
    :param shapley_scope: list or tuple to include for shapley calculation,
                        if 'default', use pos.columns
    :return:
    """
    cache = dict()

    def _calculate_turnover_after_mixing(signals: tuple):
        key = list(signals)
        key.sort()
        key = tuple(signals)
        if key in cache:
            return cache[key]

        p = mix_func(pos[list(signals)])
        cache[key] = turnover_func(p).fillna(0)
        return cache[key]

    # shapley
    if shapley_scope == 'default':
        shapley_scope = pos.columns
    res = shapley_naive(list(shapley_scope), _calculate_turnover_after_mixing)

    return pd.DataFrame(res)


def turnover_weighted(pos: pd.DataFrame,
                      mix_func: Callable[[pd.DataFrame], pd.Series] = mix_signal,
                      turnover_func: Callable[[pd.Series], pd.Series] = pos2turnover,
                      weight: str = 'l1') -> pd.DataFrame:
    """
    turnover attribution of multiple signal, by l1 or l2 weight
    :param pos: pandas DataFrame, each column contains position of one signal
    :param mix_func: function which used to mix two signals' positions,
                    takes one pandas DataFrame as input, and return one pandas Series
    :param turnover_func: function to convert position to turnover,
                    takes one pandas Series, and return one pandas Series
    :return:
    :param weight: str, 'l1' or 'l2'
    :return:
    """

    assert weight in ('l1', 'l2')
    res = pd.DataFrame(index=pos.index)
    p = mix_func(pos)
    res['all'] = turnover_func(p)
    for col in pos.columns:
        res[f"{col}_standalone"] = turnover_func(pos[col])
    if weight == 'l1':
        w_sum = res[[f"{col}_standalone" for col in pos.columns]].abs().sum(axis=1)
        for col in pos.columns:
            res[col] = res['all'].mul(res[f"{col}_standalone"].abs()).div(w_sum)
    else:
        # l2
        w_sum = res[[f"{col}_standalone" for col in pos.columns]].pow(2).sum(axis=1)
        for col in pos.columns:
            res[col] = res['all'].mul(res[f"{col}_standalone"].pow(2)).div(w_sum)
    return res[list(pos.columns)]


def position_report(positions: Union[pd.Series, pd.DataFrame])->pd.DataFrame:
    def _position_report_per_tradable(position: pd.Series):
        assert isinstance(position, pd.Series)
        xdf = pd.DataFrame(index=[position.name])
        xdf['start'] = position.index[0]
        xdf['end'] = position.index[-1]
        xdf['# of days'] = len(position)
        xdf['Not nan days'] = len(position.dropna())
        xdf['pos>0 days ratio'] = position.gt(0).mean()
        xdf['pos<0 days ratio'] = position.lt(0).mean()
        xdf['pos=0 days ratio'] = position.eq(0).mean()
        xdf['max pos'] = position.max()
        xdf['min pos'] = position.min()
        xdf['average pos'] = position.mean()
        xdf['avearge abs pos'] = position.abs().mean()
        xdf['average daily turnover'] = position.diff().abs().mean()
        xdf['ratio: turnover / abs pos'] = position.diff().abs().mean() / position.abs().mean()
        pos_sign = position.map(lambda x: 1 if x > 0 else -1 if x < 0 else 0)
        pos_sign_change = pos_sign.diff().abs().gt(0)
        entries = pos_sign.loc[pos_sign_change & pos_sign.ne(0)]
        xdf['average holding periods'] = len(position.dropna()) / len(entries)
        return xdf
    assert isinstance(positions, (pd.Series, pd.DataFrame))
    if isinstance(positions, pd.Series):
        outputs = _position_report_per_tradable(positions)
    else:
        outputs = [_position_report_per_tradable(positions[col]) for col in positions.columns]
        outputs = pd.concat(outputs, axis=0)
    return outputs.T

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\research\research\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\setup.py
----------------------------------------
import setuptools

setuptools.setup(
    name="telemetry",
    version="0.2.4",
    author="zlhuang",
    author_email="zlhuang@shellstreetlabs.com",
    description="portfolio analytics",
    long_description="various metrics for portfolio analytics",
    long_description_content_type="text/markdown",
    url="[na]",
    packages=setuptools.find_packages(),
    classifiers=[
        "Programming Language :: Python :: 3",
    ],
)


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\notebooks\performance_analytic_demo.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from telemetry.telemetry.performance import PerformanceAnalytics, compare_performances\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Simulate Pnl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "timestamps = pd.bdate_range(start='1/1/2000', end='01/08/2020')\n",
    "daily_return = np.random.normal(1.5, np.sqrt(252.0), len(timestamps))\n",
    "daily_cost = np.repeat(0.5, len(timestamps))\n",
    "gross_pnl = np.cumsum(daily_return)\n",
    "net_pnl = np.cumsum(daily_return-daily_cost)\n",
    "cost_pnl = np.cumsum(daily_cost)\n",
    "\n",
    "data = pd.DataFrame(\n",
    "    {\n",
    "        'date': timestamps, \n",
    "        'net_pnl': net_pnl, \n",
    "        'gross_pnl': gross_pnl, \n",
    "        'cost': cost_pnl, \n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Generate Peformance Analytics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "perf = PerformanceAnalytics(\n",
    "    data, \n",
    "    load_asof = {'timestamp': 'date', 'net_pnl': 'net_pnl', \n",
    "                 'gross_pnl': 'gross_pnl', 'cost': 'cost',\n",
    "                 'vol_budget': 1.0}, \n",
    "    watermark = {'features': 'Demo'}, \n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "perf.chart()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "perf.compute_statistics()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Performance Analytics for multiple pnls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "timestamps = pd.bdate_range(start='1/1/2000', end='01/08/2020')\n",
    "\n",
    "# generate pnl1\n",
    "daily_return1 = np.random.normal(1.5, np.sqrt(252.0), len(timestamps))\n",
    "daily_cost1 = np.repeat(0.5, len(timestamps))\n",
    "gross_pnl1 = np.cumsum(daily_return1)\n",
    "net_pnl1 = np.cumsum(daily_return1-daily_cost1)\n",
    "cost_pnl1 = np.cumsum(daily_cost1)\n",
    "\n",
    "# generate pnl2\n",
    "daily_return2 = np.random.normal(1.0, np.sqrt(252.0), len(timestamps))\n",
    "daily_cost2 = np.repeat(0.5, len(timestamps))\n",
    "gross_pnl2 = np.cumsum(daily_return2)\n",
    "net_pnl2 = np.cumsum(daily_return2-daily_cost2)\n",
    "cost_pnl2 = np.cumsum(daily_cost2)\n",
    "\n",
    "data = pd.DataFrame(\n",
    "    {\n",
    "        'date': timestamps, \n",
    "        'net_pnl1': net_pnl1, \n",
    "        'gross_pnl1': gross_pnl1, \n",
    "        'cost1': cost_pnl1,\n",
    "        \n",
    "        'net_pnl2': net_pnl2, \n",
    "        'gross_pnl2': gross_pnl2, \n",
    "        'cost2': cost_pnl2,\n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "load_asof = {\n",
    "    'timestamp': 'date',\n",
    "    'net_pnls': ['net_pnl1', 'net_pnl2'], \n",
    "    'rolling_sharpe_window': 500,\n",
    "    'vol_budget': 1.0, \n",
    "}\n",
    "\n",
    "df_rolling_sharpes, df_stats = compare_performances(data, load_asof, to_show_plot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_rolling_sharpes.loc[:, pd.IndexSlice[:, 'net_pnlRollingSharpe500']].plot(figsize=(8, 8)).grid()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  },
  "vscode": {
   "interpreter": {
    "hash": "da1449f7a2abf94c01e2d68de94c61b4c17cb33749c868715e445a7ec877b75c"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\notebooks\post_trade_analysis.ipynb
----------------------------------------
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from telemetry.telemetry.stats import num_zero_cross, sortino, get_pnl_by_vol\n",
    "from telemetry.telemetry.period import YEARLY\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "dates = pd.bdate_range(start='1/1/2000', end='1/01/2020')\n",
    "df = pd.DataFrame(np.random.normal(0, 1, len(dates)), index=dates, columns=[\"daily_return\"])\n",
    "df[\"level\"] = df[\"daily_return\"].cumsum().fillna(0)\n",
    "df[\"position\"] = np.sin(np.arange(len(dates)) / 100)\n",
    "df[\"daily_pnl\"] = df[\"daily_return\"] * df[\"position\"].shift(1).fillna(0)\n",
    "df[\"cumpnl\"] = df[\"daily_pnl\"].cumsum().fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "fig, ax_arr = plt.subplots(1, 2, figsize=(16, 8))\n",
    "\n",
    "df[['cumpnl', \"level\"]].plot(ax=ax_arr[0]).grid()\n",
    "df[[\"position\"]].plot(ax=ax_arr[1]).grid()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Turnover"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "load_asof = {\"position\": \"position\"}\n",
    "df_input = df.copy()\n",
    "start_timestamp = None\n",
    "end_timestamp = None\n",
    "\n",
    "df_output = num_zero_cross(df, load_asof, start_timestamp, end_timestamp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_output.plot(figsize=(8, 8)).grid()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pnl by volatility target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# vol budget is 1.0\n",
    "\n",
    "pnl_by_vol, num_of_days, yearly_pnl_by_vol = get_pnl_by_vol(df, {\"cumpnl\": \"cumpnl\"}, None, None, 1.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "yearly_pnl_by_vol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "pnl_by_vol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "num_of_days"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sortino \n",
    "#### example from https://www.cmegroup.com/education/files/rr-sortino-a-sharper-ratio.pdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "annual_returns = np.array([ 0.17,  0.15,  0.23, -0.05,  0.12,  0.09,  0.13, -0.04])\n",
    "sortino(annual_returns, period = YEARLY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\notebooks\__init__.py
----------------------------------------

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\performance.py
----------------------------------------
import matplotlib.pyplot as plt
import pandas as pd
from telemetry.telemetry.stats import *
from types import MappingProxyType


class PerformanceAnalytics(object):
    
    def __init__(
            self,
            data: pd.DataFrame,
            load_asof: dict = None,
            watermark: dict = None,
    ):

        """
        Construct Performance Analytics Class

        Example input of data:
                  date	            net_pnl	          gross_pnl	cost
        0	2000-01-03	-11.681287576069018	-11.181287576069018	0.5
        1	2000-01-04	-27.843212674919897	-26.843212674919897	1.0
        2	2000-01-05	-30.378730093788864	-28.878730093788864	1.5
        3	2000-01-06	-46.351511152393144	-44.351511152393144	2.0
        4	2000-01-07	-33.798454109752704	-31.298454109752704	2.5

        Example input of load_asof:
        {'timestamp': 'date', 'net_pnl': 'net_pnl',
         'gross_pnl': 'gross_pnl', 'cost': 'cost',
         'vol_budget': 1.0, }

        Example input of watermark:
        {'features': 'Demo'}

        :param data: data frame contains
        :type: pd.DataFrame
        :param load_asof:
        :type: dict
        """
        assert isinstance(data, pd.DataFrame)
        self.__data = data

        if load_asof is None:
            self.__load_asof = {
                'timestamp': 'date',
                'net_pnl': 'net_pnl',
                'gross_pnl': 'gross_pnl',
                'cost': 'cost',
                'vol_budget': 1.0,
            }
        else:
            self.__load_asof = MappingProxyType(load_asof.copy())

        if watermark is None:
            self.__watermark = {}
        else:
            self.__watermark = watermark.copy()
        self.output_df = None

    @property
    def data(self):
        return self.__data

    @property
    def gross_pnl(self):
        _df = self.extract_cols(['timestamp', 'gross_pnl'])
        if not _df.empty:
            _df = _df.set_index('timestamp')['gross_pnl']
        return _df

    @property
    def net_pnl(self):
        _df = self.extract_cols(['timestamp', 'net_pnl'])
        if not _df.empty:
            _df = _df.set_index('timestamp')['net_pnl']
        return _df

    @property
    def cost(self):
        _df = self.extract_cols(['timestamp', 'cost'])
        if not _df.empty:
            _df = _df.set_index('timestamp')['cost']
        return _df

    def extract_cols(self, cols):
        assert set(cols).issubset(set(self.__load_asof.keys()))
        _cols = [self.__load_asof[x] for x in cols]
        if set(_cols).issubset(set(self.__data.columns)):
            _df = self.__data[_cols]
            _df.columns = cols
        else:
            _df = pd.DataFrame()

        return _df

    def chart(
            self,
            net_pnl: pd.DataFrame = None,
            rolling_window: int = 500,
            show_plot: bool = True,
            plot_scaler: float = 8,
    ):
        """

        :param net_pnl:
        :param rolling_window:
        :param show_plot:
        :param plot_scaler:
        :return:
        """
        if net_pnl is None:
            net_pnl = self.net_pnl

        returns = net_pnl.diff().dropna()
        # rolling sharpe
        _rolling_sharpe = 16 * (returns.rolling(rolling_window).mean() / returns.rolling(rolling_window).std(ddof=1))

        if show_plot:
            fig, ax = plt.subplots(figsize=(plot_scaler * 2, plot_scaler * 1.5), nrows=2, ncols=2)
            ax = ax.flatten()

            net_pnl.plot(ax=ax[0])

            ax[0].set_title('Cumulative P&L')
            ax[0].set_xlabel('Time')
            ax[0].set_ylabel('P&L')

            drawdown(net_pnl).plot(ax=ax[2])
            ax[2].set_title('Drawdown')
            ax[2].set_xlabel('Time')
            ax[2].set_ylabel('Drawdown')

            _rolling_sharpe.plot(ax=ax[1])  # plot the rolling sharpe
            ax[1].set_xlabel('Time')
            ax[1].set_ylabel('Sharpe Ratio')
            ax[1].set_title(f'Rolling {rolling_window}-day Sharpe Ratio')

            returns.groupby(returns.index.year).sum().plot.bar(ax=ax[3])  # plot the rolling sharpe
            ax[3].set_xlabel('Yearly Pnl')
            ax[3].set_ylabel('Yearly Pnl')
            ax[3].set_title("Yearly Pnl")

            for _ax in ax:
                _ax.grid()
                _ax.legend()

            fig.tight_layout()

        df = pd.concat([net_pnl, _rolling_sharpe], axis=1)
        if isinstance(net_pnl, pd.Series):
            df.columns = [net_pnl.name, net_pnl.name + f"RollingSharpe{rolling_window}"]

        return df

    def compute_statistics(self):
        
        gross_pnl_by_year, total_num_days, gross_avg_pnl_per_year = pnl_by_year(self.gross_pnl)
        net_pnl_by_year, total_num_days, net_avg_pnl_per_year = pnl_by_year(self.net_pnl)
        net_max_underwater = max_underwater_period(self.net_pnl)

        dd_start_dates = pd.DatetimeIndex(net_max_underwater['start_date']).strftime("%Y-%m-%d")
        dd_end_dates = pd.DatetimeIndex(net_max_underwater['end_date']).strftime("%Y-%m-%d")
        dd_dates_pairs = zip(dd_start_dates, dd_end_dates)

        # basic infos
        performance_info = {
            "backtest start": self.gross_pnl.index[0],
            "backtest end": self.gross_pnl.index[-1],
            "# days": len(self.gross_pnl.index),  # TODO: it's not natural calendar days count, just snapshots count
        }
        performance_info.update(self.__watermark)  # add user's input info

        gross_performance_analytics = {
            "gross sharpe": sharpe(daily_pnl(self.gross_pnl)),
            "gross sortino": sortino(daily_pnl(self.gross_pnl)),
            "gross yearly pnl avg": gross_avg_pnl_per_year,
            "gross pnl std daily": return_std(daily_pnl(self.gross_pnl)),
            "gross 5% daily downside move": pd.DataFrame(daily_pnl(self.gross_pnl)).quantile(0.05)[0],
            "gross 10% daily downside move": pd.DataFrame(daily_pnl(self.gross_pnl)).quantile(0.10)[0],
            "gross 20% daily downside move": pd.DataFrame(daily_pnl(self.gross_pnl)).quantile(0.20)[0],

            "max_drawdown/yearly_pnl": 1.0 / drawdown_ratio(daily_pnl(self.gross_pnl)),
            "max drawdown overall": min(drawdown(self.gross_pnl)),
        }

        net_performance_analytics = {    
            "sharpe": sharpe(daily_pnl(self.net_pnl)),
            "sortino": sortino(daily_pnl(self.net_pnl)),
            "cost over net": cost_over_net(self.gross_pnl, self.net_pnl),
            "avg rolling 1y sharpe": rolling_sharpe(daily_pnl(self.net_pnl), 252).mean(),
            "net sharpe last 1y": last_ndays_sharpe(daily_pnl(self.net_pnl), 252),
            "net sharpe last 2y": last_ndays_sharpe(daily_pnl(self.net_pnl), 500),
            "net sharpe last 5y": last_ndays_sharpe(daily_pnl(self.net_pnl), 1250),
            "net pnl std daily": return_std(daily_pnl(self.net_pnl)),
            "max loss 1w": max_nday_loss(self.net_pnl, 5),
            "max loss 1m": max_nday_loss(self.net_pnl, 21),
            "max loss 3m": max_nday_loss(self.net_pnl, 63),
            "max loss 6m": max_nday_loss(self.net_pnl, 126),
            "max loss 1y": max_nday_loss(self.net_pnl, 252),

            "max drawdown overall": min(drawdown(self.net_pnl)),
            "max_drawdown/yearly_pnl": 1.0 / drawdown_ratio(daily_pnl(self.net_pnl)),
            "max_drawdown/(pnl std daily * 200)": min(drawdown(self.net_pnl))/return_std(daily_pnl(self.net_pnl))/200,
            "max time underwater (days)": net_max_underwater['length'].values[0],
            "max time underwater period": (
                "\n".join([f"{_start_time} to {_end_time}" for _start_time, _end_time in dd_dates_pairs])
            ),

            "net 5% daily downside move": pd.DataFrame(daily_pnl(self.net_pnl)).quantile(0.05)[0],
            "net 10% daily downside move": pd.DataFrame(daily_pnl(self.net_pnl)).quantile(0.10)[0],
            "net 20% daily downside move": pd.DataFrame(daily_pnl(self.net_pnl)).quantile(0.20)[0],
            "net 99% 1d VaR": - daily_pnl(self.net_pnl).quantile(0.01),
            "net 99% 1d CVaR": - daily_pnl(self.net_pnl).loc[
                daily_pnl(self.net_pnl) <= daily_pnl(self.net_pnl).quantile(0.01)].mean(),
            "net yearly pnl avg": net_avg_pnl_per_year,

            "net yearly pnl by vol budget": get_pnl_by_vol(self.net_pnl.to_frame(),
                                                           {"cumpnl": "net_pnl"}, None, None,
                                                           vol_budget=self.__load_asof["vol_budget"])[2],
            "vol budget": self.__load_asof["vol_budget"],
        }
        
        info_df = pd.DataFrame.from_dict(performance_info, orient='index')
        info_df['type'] = 'info'

        gross_df = pd.DataFrame.from_dict(gross_performance_analytics, orient='index')
        gross_df['type'] = 'gross'

        net_df = pd.DataFrame.from_dict(net_performance_analytics, orient='index')
        net_df['type'] = 'net'
        
        self.output_df = pd.concat([info_df, gross_df, net_df], axis=0).reset_index().set_index(['type', 'index'])
        self.output_df.columns = ['value']
        
        return self.output_df


def compare_performances(
        data: pd.DataFrame,
        load_asof: dict,
        to_show_plot: bool = True,
        plot_scaler: float = 8.0,
):
    """
    Construct Performance Analytics Class

    Example input of
    `data`:
              date	            net_pnl	          gross_pnl	cost
    0	2000-01-03	-11.681287576069018	-11.181287576069018	0.5
    1	2000-01-04	-27.843212674919897	-26.843212674919897	1.0
    2	2000-01-05	-30.378730093788864	-28.878730093788864	1.5
    3	2000-01-06	-46.351511152393144	-44.351511152393144	2.0
    4	2000-01-07	-33.798454109752704	-31.298454109752704	2.5

    Example input of
    `load_asof`:
    {'timestamp': 'date',
     'net_pnls': ['net_pnl', 'gross_pnl'],
     'rolling_sharpe_window': 500,
     'vol_budget': 1.0,
     }

     Example Returns of
     `df_rolling_sharpes`:
     pnl_name	AggPnlSimpleSum	                        365days-2.0-True
    variable	net_pnl	    net_pnlRollingSharpe250	    net_pnl	    net_pnlRollingSharpe250
    timestamp
    2009-01-05	-39.656381	-1.011929	                -39.656381	-1.011929
    2009-01-06	-20.936626	-0.482379	                -20.936626	-0.482379
    2009-01-07	24.689345	0.394123	                24.689345	0.394123
    2009-01-08	-30.587571	-0.367729	                -30.587571	-0.367729
    2009-01-09	44.757377	0.400631	                44.757377	0.400631

    Example Returns of


    :param data:
    :param load_asof:
    :param to_show_plot:
    :param plot_scaler:
    :return:
    """

    all_rolling_sharpes = []
    all_stats = []

    for col in load_asof['net_pnls']:
        perf = PerformanceAnalytics(
            data,
            load_asof={'timestamp': load_asof['timestamp'],
                       'net_pnl': col,
                       'gross_pnl': col,
                       'vol_budget': load_asof["vol_budget"], }
        )
        _rolling_sharpe = perf.chart(
            rolling_window=load_asof['rolling_sharpe_window'],
            show_plot=False,
        )

        _rolling_sharpe.columns = pd.MultiIndex.from_tuples(
            [(col, x) for x in _rolling_sharpe.columns], names=['pnl_name', 'variable'],
        )
        all_rolling_sharpes.append(_rolling_sharpe)
        _stats = perf.compute_statistics().copy()
        _stats.columns = [col]
        all_stats.append(_stats)

    _ = PerformanceAnalytics(pd.DataFrame()).chart(
        data.set_index(load_asof["timestamp"])[load_asof['net_pnls']],
        rolling_window=load_asof["rolling_sharpe_window"],
        show_plot=to_show_plot,
        plot_scaler=plot_scaler,
    )

    df_rolling_sharpes = pd.concat(all_rolling_sharpes, axis=1)
    df_stats = pd.concat(all_stats, axis=1)

    return df_rolling_sharpes, df_stats


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\period.py
----------------------------------------
APPROX_BDAYS_PER_MONTH = 21
APPROX_BDAYS_PER_YEAR = 252
APPROX_CAL_DAYS_PER_YEAR = 365

MONTHS_PER_YEAR = 12
WEEKS_PER_YEAR = 52
QTRS_PER_YEAR = 4

DAILY = 'daily'
WEEKLY = 'weekly'
MONTHLY = 'monthly'
QUARTERLY = 'quarterly'
YEARLY = 'yearly'

ANNUALIZATION_FACTORS = {
    DAILY: APPROX_BDAYS_PER_YEAR,
    WEEKLY: WEEKS_PER_YEAR,
    MONTHLY: MONTHS_PER_YEAR,
    QUARTERLY: QTRS_PER_YEAR,
    YEARLY: 1
}


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\portf_optim.py
----------------------------------------
import pandas as pd
import numpy as np


class FixedWeightPortfOptim(object):
    def __init__(
            self,
            pnls: pd.DataFrame,
            wts: pd.DataFrame,
            pos: pd.DataFrame,
            cost: float = 0,
    ):
        """
        `pnls`, `wts` and `pos` should be all DataFrame and have exactly the same
        index and columns

        This optim pnl&pos calculator is just for

        :param pnls:
        :param wts:
        :param pos:
        :param cost:
        """

        self.__wts = wts
        self.__pnls = pnls
        self.__pos = pos
        self.__cost = cost

    def pnl_optim(self):
        """
        Support
        :return:
        """
        # make a copy to keep the source data frame untouched
        df_pnls = self.__pnls.copy()
        df_wts = self.__wts.copy()

        assert np.all(df_pnls.index == df_wts.index)  # make sure they have the same index
        assert set(df_pnls.columns).issubset(set(df_wts.columns))  # wts can be longer

        df_pnls = df_pnls.assign(
            **{x: 0 for x in set(df_wts.columns)-set(df_pnls.columns)}
        )
        df_pnls = df_pnls[df_wts.columns]  # reorder the columns

        daily_pnls = df_pnls.diff()
        daily_wts = df_wts.shift(1)

        daily_pnl_weighted = daily_pnls * daily_wts.values
        agg_pnl_weighted = daily_pnl_weighted

        agg_cumpnl = agg_pnl_weighted.fillna(0).cumsum(axis=0)

        return agg_cumpnl

    def pos_optim(self):
        df_pos = self.__pos.copy()
        df_wts = self.__wts.copy()

        assert np.all(df_pos.index == df_wts.index)
        assert set(df_pos.columns).issubset(set(df_wts.columns))

        df_pos = df_pos.assign(
            **{x: 0 for x in set(df_wts.columns)-set(df_pos.columns)})

        agg_pos = df_pos[df_wts.columns] * df_wts.values

        return agg_pos

    def cost_optim(self, tolerance: float = 10e-6):
        """
        Calculate the rebalancing cost from input position and cost basis.

        Assumption:

        :param tolerance:
        :return:
        """
        agg_pos = self.pos_optim()
        agg_pos_diff = agg_pos.diff(1)

        wts_diff = self.__wts.diff(1)
        is_rebalancing_date = (wts_diff >= tolerance)
        rebalancing_cost = np.abs(is_rebalancing_date * agg_pos_diff.values * self.__cost)

        return rebalancing_cost



........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\position.py
----------------------------------------
import pandas as pd
from typing import Union


def position_report(positions: Union[pd.Series, pd.DataFrame]) -> pd.DataFrame:
    """
    given position time series, generate report of position stats
    :param positions: pandas Series or DataFrame, each column should be position of one tradable
    :return: position report
    """
    def _position_report_per_tradable(position: pd.Series):
        assert isinstance(position, pd.Series)
        xdf = pd.DataFrame(index=[position.name])
        xdf['start'] = position.index[0]
        xdf['end'] = position.index[-1]
        xdf['# of days'] = len(position)
        xdf['Not nan days'] = len(position.dropna())
        xdf['pos>0 days ratio'] = position.gt(0).mean()
        xdf['pos<0 days ratio'] = position.lt(0).mean()
        xdf['pos=0 days ratio'] = position.eq(0).mean()
        xdf['max pos'] = position.max()
        xdf['min pos'] = position.min()
        xdf['average pos'] = position.mean()
        xdf['avearge abs pos'] = position.abs().mean()
        xdf['average daily turnover'] = position.diff().abs().mean()
        xdf['ratio: turnover / abs pos'] = position.diff().abs().mean() / position.abs().mean()
        pos_sign = position.map(lambda x: 1 if x > 0 else -1 if x < 0 else 0)
        pos_sign_change = pos_sign.diff().abs().gt(0)
        entries = pos_sign.loc[pos_sign_change & pos_sign.ne(0)]
        xdf['average holding periods'] = len(position.dropna()) / len(entries)
        return xdf
    assert isinstance(positions, (pd.Series, pd.DataFrame))
    if isinstance(positions, pd.Series):
        outputs = _position_report_per_tradable(positions)
    else:
        outputs = [_position_report_per_tradable(positions[col]) for col in positions.columns]
        outputs = pd.concat(outputs, axis=0)
    return outputs.T

........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\resampler.py
----------------------------------------
import pandas as pd
import numpy as np


def resample_by_change(wts, threshold=0, func=None):
    """

    :param wts:
    :param threshold:
    :param func:
    :return:
    """
    if func is None:
        func = lambda x, y: np.linalg.norm(x - y)

    # create a copy of initial wts
    processed_wts = wts.copy()

    for ind in np.arange(1, len(wts.index)):
        former_wts = processed_wts.iloc[ind - 1, :].values
        curr_wts = processed_wts.iloc[ind, :].values

        if func(curr_wts, former_wts) <= threshold:
            processed_wts.iloc[ind, :] = processed_wts.iloc[ind - 1, :].values

    return processed_wts


def resample_by_freq(wts, freq='M'):
    """

    :param wts:
    :param freq:
    :return:
    """
    if freq == 'M':
        func = lambda x: x.strftime("%Y/%m")
    elif freq == 'Q':
        func = lambda x: '/'.join([str(x.year), str((x.month - 1) // 3 + 1)])
    elif freq == 'Y':
        func = lambda x: '/'.join([str(x.year)])
    else:
        raise TypeError('`freq` cannot be {}'.format(freq))

    df_input = wts.copy()
    df_processed = df_input.copy()
    df_processed['initial_index'] = df_processed.index
    df_processed['group'] = [func(x) for x in df_processed.index]
    df_selected = df_processed.groupby('group').first()
    df_selected = df_selected.set_index('initial_index')

    df_initial_range = pd.DataFrame(index=df_input.index)
    df_output = pd.concat([df_selected, df_initial_range], axis=1, sort=True)
    df_output = df_output.ffill()

    return df_output


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\stats.py
----------------------------------------
from itertools import groupby
from operator import itemgetter

import pandas as pd
import numpy as np
from .period import DAILY, ANNUALIZATION_FACTORS, APPROX_BDAYS_PER_YEAR, APPROX_CAL_DAYS_PER_YEAR
import datetime


def daily_pnl(cumpnl):
    if isinstance(cumpnl, np.ndarray):
        assert cumpnl.ndim == 1
        cumpnl = pd.Series(cumpnl)

    assert isinstance(cumpnl, pd.Series)

    return cumpnl.diff().dropna()


def annualization_factor(period, annualization=None):
    if annualization is None:
        try:
            factor = ANNUALIZATION_FACTORS[period]
        except KeyError:
            raise ValueError(
                "Period cannot be '{}'. "
                "Can be '{}'.".format(
                    period, "', '".join(ANNUALIZATION_FACTORS.keys())
                )
            )
    else:
        factor = annualization
    return factor


def return_std(returns):
    assert isinstance(returns, (pd.Series, np.ndarray))
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1

    return np.nanstd(returns, ddof=1)


def sharpe(
        returns,
        period=DAILY,
        to_annualize: bool = True,
        axis: int = 0,
) -> (float, np.ndarray):
    """
    Calculate the estimated sharpe ratio from input sample returns.

    Example:
    --------
    >>> from telemetry.stats import sharpe
    >>> import numpy as np
    >>> input_returns = np.random.normal(0, 1, (2520, 20))
    >>> # by default the annualization is applied
    >>> print("2D array of returns' sharpe example: ", sharpe(input_returns, axis=0))  # 2D returns np array example
    >>> print("1D array of returns' sharpe example: ", sharpe(input_returns[:, 0]))  # 1D returns np array example
    >>> # example without annualization factor, with argument `to_annualize` set as `False`
    >>> print("2D array of returns' sharpe example no annualization: ", sharpe(input_returns, axis=0, to_annualize=False))

    :param returns:
    :param period:
    :param to_annualize:
    :param axis:
    :return:
    """
    assert isinstance(returns, (pd.Series, pd.DataFrame, np.ndarray)), f"Cannot process `returns` of type {type(returns)}"

    if isinstance(returns, (pd.DataFrame, pd.Series)):
        returns = returns.values  # convert to numpy array

    # `returns` can only be np.ndarray
    if returns.ndim in (1, 2):
        dim_returns = returns.ndim
    else:
        raise TypeError(f"Dimension of input returns cannot be {returns.ndim}")

    if to_annualize:
        ann_factor = annualization_factor(period)
    else:
        ann_factor = 1.0  # no annualization adjustment

    if dim_returns == 1:
        return np.nanmean(returns) / np.nanstd(returns, ddof=1) * np.sqrt(ann_factor)  # return float value output
    else:
        # return np.ndarray as output for each columns based on axis choice
        return np.nanmean(returns, axis=axis) / np.nanstd(returns, ddof=1, axis=axis) * np.sqrt(ann_factor)


def rolling_sharpe(returns, window, period=DAILY):
    assert isinstance(returns, (pd.Series, np.ndarray))
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1

    ann_factor = annualization_factor(period)

    sharpe = returns.rolling(window).mean(skipna=True) / returns.rolling(window).std(ddof=1) * np.sqrt(ann_factor)

    return sharpe.dropna()


def last_ndays_sharpe(returns, n, period=DAILY):
    assert isinstance(returns, (pd.Series, np.ndarray))
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1

    ann_factor = annualization_factor(period)

    return returns.tail(n).mean(skipna=True) / returns.tail(n).std(ddof=1) * np.sqrt(ann_factor)


def sortino(returns, period=DAILY):
    assert isinstance(returns, (pd.Series, np.ndarray))
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1

    ann_factor = annualization_factor(period)

    downside_returns = returns[returns < 0]

    downside_vol = np.sqrt(np.sum(downside_returns**2)/len(returns))

    return np.nanmean(returns) / downside_vol * np.sqrt(ann_factor)


def rolling_sortino(returns, window, period=DAILY):
    assert isinstance(returns, (pd.Series, np.ndarray))
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1

    def _downside_std(x):
        downside_returns = x[x<0]
        return np.sqrt(np.sum(downside_returns**2)/len(x))

    ann_factor = annualization_factor(period)

    sortino = returns.rolling(window).mean(skipna=True) / returns.rolling(window).apply(_downside_std) * np.sqrt(
        ann_factor)

    return sortino.dropna()


def stability(returns, window=APPROX_BDAYS_PER_YEAR):
    if isinstance(returns, np.ndarray):
        assert returns.ndim == 1
        returns = pd.Series(returns)

    assert isinstance(returns, pd.Series)

    _stability = returns.rolling(window).std(ddof=1)

    return _stability


def drawdown(cumpnl):
    if isinstance(cumpnl, np.ndarray):
        assert cumpnl.ndim == 1
        cumpnl = pd.Series(cumpnl)

    assert isinstance(cumpnl, (pd.Series, pd.DataFrame))

    rollmax = cumpnl.cummax()
    _drawdown = cumpnl - rollmax

    return _drawdown


def recover_period(cumpnl):
    """

    :param cumpnl:
    :return:
    """
    _drawdown = -np.sign(drawdown(cumpnl))
    cum_drawdown = _drawdown.cumsum()
    former_drawdown = (cum_drawdown * (1 - _drawdown)).cummax()

    return cum_drawdown - former_drawdown


def max_nday_loss(cumpnl, n):
    if isinstance(cumpnl, np.ndarray):
        assert cumpnl.ndim == 1
        cumpnl = pd.Series(cumpnl)

    assert isinstance(cumpnl, pd.Series)

    daily_pl = daily_pnl(cumpnl)

    return daily_pl.rolling(n).sum().dropna().min()


def pnl_by_year(cumpnl, scale=1.0):
    if isinstance(cumpnl, np.ndarray):
        assert cumpnl.ndim == 1
        cumpnl = pd.Series(cumpnl)

    assert isinstance(cumpnl, pd.Series)

    pnl_df = pd.DataFrame(cumpnl).diff()  # compute the absolute pnls
    pnl_df.columns = ['pnl']
    pnl_df['year'] = pnl_df.index.year

    pnl_by_year = pnl_df.groupby("year")['pnl'].sum() / scale

    num_days_by_year = pnl_df.groupby("year")['pnl'].count()

    total_num_days = num_days_by_year.sum()

    # avg_pnl_per_year = pnl_by_year[num_days_by_year[num_days_by_year > 240].index].mean()
    avg_pnl_per_year = pnl_df['pnl'].sum() / scale / (total_num_days / ANNUALIZATION_FACTORS[DAILY])

    return pnl_by_year, total_num_days, avg_pnl_per_year


def cost_over_net(gross_pnl, net_pnl):
    return ((gross_pnl - net_pnl) / net_pnl).rolling(252).mean().mean()


def time_underwater(cumpnl):
    if isinstance(cumpnl, np.ndarray):
        assert cumpnl.ndim == 1
        cumpnl = pd.Series(cumpnl)

    dd = drawdown(cumpnl)

    lst = list(np.sign(dd))

    underwater_periods = []
    for k, v in groupby(enumerate(lst), key=itemgetter(1)):
        if k:
            v = list(v)
            start, end = v[0][0], v[-1][0]
            underwater_periods.append((start, end, end - start, dd.index[start], dd.index[end]))

    return pd.DataFrame(underwater_periods, columns=['start', 'end', 'length', 'start_date', 'end_date']
                        ).sort_values('length', ascending=False)


def max_underwater_period(cumpnl):
    return time_underwater(cumpnl).head(1)


def avg_returns_per_holding_period(positions, returns,
                                   qcut_kwargs={}, cut_kwargs={}):
    """You must choose either qcut args or cut args.
        Refer to the pandas documentation for pd.qcut or pd.cut.

    :parameters:
        :positions: a pandas Series containing positions indexed by time.
        :returns:   a pandas Series with daily returns, indexed by time.
        :qcut_kwargs (optional): if not None, applies pd.qcut to the holding periods.
        :cut_kwargs (optional): if not None, applies pd.cut to the holding periods.
    :returns:
        :holding_period: a time series of average returns indexed by their holding periods.
        :counts: a time series of counts per bin - number of times the backtest held the
                 position for the specified amount of time.

    """

    assert (not qcut_kwargs or not cut_kwargs), 'Choose between qcut or cut.'

    positions = np.sign(positions)

    df = pd.concat([returns,
                    positions,
                    (positions != positions.shift()).cumsum()
                    ], axis=1).dropna()

    df.columns = ['returns', 'positions', 'groups']

    df['holding_period'] = df.groups.map(dict(df.groups.value_counts()))

    if qcut_kwargs:
        df['holding_period'] = pd.qcut(df['holding_period'], **qcut_kwargs)

    elif cut_kwargs:
        df['holding_period'] = pd.cut(df['holding_period'], **cut_kwargs)

    hperiod = df.groupby('holding_period').returns.mean()
    hperiod.index = hperiod.index.astype(str)
    hperiod.name = 'average_returns'
    hperiod.index.name = 'holding_period'

    counts = df[df['holding_period'] != df['holding_period'].shift()]['holding_period'].value_counts()
    counts.index = counts.index.astype(str)
    counts.name = 'instances'
    counts.index.name = 'holding_period'

    return hperiod, counts


def holding_period(cumpnl: pd.Series, ):
    """

    :param cumpnl:
    :return:
    """
    assert isinstance(cumpnl, pd.Series), f"Input must be cumulative pnl of type `pd.Series`, not {type(cumpnl)}"
    df = cumpnl.diff().dropna().to_frame().copy()
    df.columns = ['pnl']
    df['holding flg'] = (cumpnl.diff().dropna() == 0).cumsum()
    holding_periods = df[cumpnl.diff().dropna() != 0].groupby("holding flg").agg(['count', 'sum'])

    return holding_periods.groupby(('pnl', 'count')).agg(['count', 'mean'])


def pnl_per_trade(
        df_input: pd.DataFrame,
        load_asof: dict,
        start_timestamp: datetime.datetime,
        end_timestamp: datetime.datetime,
) -> (float, float, float):
    """
    The `pnl_per_trade` = `total_pnl` / `total_turnover` between `start_timestamp` and `end_timestamp`
    where `total_pnl` = `end_pnl` - `start_pnl` and `total_turnover` = sum(abs(position.diff()))

    Note:
    -----
    1. You need to multiply the returned value by 2 to get the breakeven cost. For example, we have the
    input as
                pnl     position
    2020-02-01  0       0
    2020-02-02  0       1
    2020-02-03  1       0

    So, total pnl is `1`, and total turnover is `2`, pnl per trade is `0.5`. Under 2-side bid-offer assumption, the
    break-even bid-offer is `1`.

    :param df_input:
    :param load_asof:
    :param start_timestamp:
    :param end_timestamp:
    :return:
    """
    df_interval = df_input.loc[start_timestamp:end_timestamp, :]  # get the time interval want to look at
    total_pnl = df_interval[load_asof["cumpnl"]].values[-1] - df_interval[load_asof["cumpnl"]].values[0]
    # we firstly ffill the cumpnl, then fill all NaN to be 0, then calculate the position delta from
    # one snapshot to next snapshot
    total_turnover = np.sum(np.abs(df_interval[load_asof["position"]].ffill().fillna(0).diff()))

    return (total_pnl / total_turnover), total_pnl, total_turnover


def get_pnl_by_vol(
        df_input: pd.DataFrame,
        load_asof: dict,
        start_timestamp: datetime.datetime,
        end_timestamp: datetime.datetime,
        vol_budget: float = 1.0,
):
    """
    Calculate the return under daily volatility budget.

    :param df_input:
    :param load_asof:
    :param start_timestamp:
    :param end_timestamp:
    :param vol_budget:
    :return:
    """
    df_interval = df_input.loc[start_timestamp:end_timestamp, :]  # get the time interval want to look at
    total_pnl = df_interval[load_asof["cumpnl"]].values[-1] - df_interval[load_asof["cumpnl"]].values[0]
    daily_vol = df_interval[load_asof["cumpnl"]].diff().std()

    pnl_by_vol = vol_budget / daily_vol * total_pnl  # get the output pnl
    num_of_days = (df_interval.index[-1] - df_interval.index[0]).days
    yearly_pnl_by_vol = pnl_by_vol / (num_of_days * 1.0 / APPROX_CAL_DAYS_PER_YEAR)

    return pnl_by_vol, num_of_days, yearly_pnl_by_vol


def num_zero_cross(
        df_input: pd.DataFrame,
        load_asof: dict,
        start_timestamp: datetime.datetime,
        end_timestamp: datetime.datetime,
):
    """
    Count how many times the position flips the sign.
    Positions are converted into {-1, 0, 1}, we only count when the value shifts e.g. -1 to 0, 0 to 1 and -1 to 1
    Turnover is thus the absolute value shift. CumTurnover is the cumulative sum of the turnover.

    Example:
    --------
    >>> import pandas as pd
    >>> import numpy as np
    >>> from telemetry.stats import num_zero_cross
    >>> df = pd.DataFrame(np.random.normal(0, 1, len(dates)), index=dates, columns=["daily_return"])

    :param df_input:
    :param load_asof:
    :param start_timestamp:
    :param end_timestamp:
    :return: pd.DataFrame, turnover statistics
    """

    df_interval = df_input.loc[start_timestamp:end_timestamp, :]  # get the time interval want to look at
    df_positions = df_interval[load_asof["position"]].ffill().fillna(0)
    df_output = np.abs(np.sign(df_positions).diff()).to_frame().fillna(0)
    df_output.columns = ["daily_turnover"]
    df_output["cum_turnover"] = df_output["daily_turnover"].cumsum().fillna(0)

    return df_output


def drawdown_ratio(
        returns,
        period=DAILY,
        to_annualize: bool = True,
        axis: int = 0,
) -> (float, np.ndarray):
    """
    Calculate the estimated sharpe ratio from input sample returns.

    Example:
    --------
    >>> from telemetry.stats import drawdown_ratio
    >>> import numpy as np
    >>> input_returns = np.random.normal(0, 1, (2520, 20))
    >>> # by default the annualization is applied
    >>> print("2D array of returns' drawdown_ratio example: ", drawdown_ratio(input_returns, axis=0))  # 2D returns np array example
    >>> print("1D array of returns' drawdown_ratio example: ", drawdown_ratio(input_returns[:, 0]))  # 1D returns np array example
    >>> # example without annualization factor, with argument `to_annualize` set as `False`
    >>> print("2D array of returns' drawdown_ratio example no annualization: ", drawdown_ratio(input_returns, axis=0, to_annualize=False))

    :param returns:
    :param period:
    :param to_annualize:
    :param axis:
    :return:
    """
    assert isinstance(returns, (pd.Series, pd.DataFrame, np.ndarray)), f"Cannot process `returns` of type {type(returns)}"

    if isinstance(returns, (pd.DataFrame, pd.Series)):
        returns = returns.values  # convert to numpy array

    # `returns` can only be np.ndarray
    if returns.ndim in (1, 2):
        dim_returns = returns.ndim
    else:
        raise TypeError(f"Dimension of input returns cannot be {returns.ndim}")

    if to_annualize:
        ann_factor = annualization_factor(period)
    else:
        ann_factor = 1.0  # no annualization adjustment

    if dim_returns == 1:
        cumpnls = np.cumsum(returns)
        dd = np.maximum.accumulate(cumpnls) - cumpnls
        return np.mean(returns) / np.max(dd) * ann_factor
    else:
        # return np.ndarray as output for each columns based on axis choice
        cumpnls = np.cumsum(returns, axis=axis)
        dd = np.maximum.accumulate(cumpnls) - cumpnls
        return np.mean(returns, axis=axis) / np.max(dd, axis=axis) * ann_factor



........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\utils.py
----------------------------------------
import os
import nbformat
import nbconvert
from nbconvert.preprocessors import ExecutePreprocessor


def generate_report(
    local_notebook_name: str,
    notebook_repo: str,
    asof_date: str,
    report_name_prefix: str,
    output_repo: str = "./",
    timeout: int = 1200,
    kernel_name: str = "python3",
):
    """
    Generic function to run jupyter notebook, and save into html file.

    Example:
    >>> output_file_name = generate_report("./notebooks/demo_report.ipynb", "./notebooks/", "2020-11-01", "demo",
    ... output_repo="./", timeout=1200, kernel_name="python3")
    >>> print(output_file_name)
    ./demo_report_as_of_2020-11-01.html

    :param local_notebook_name: the full file path to the jupyter notebook
    :param notebook_repo: the repo where we want to run the notebook. The default directory path for the notebook's
        python kernel will be under this `notebook_repo`.
    :param asof_date: the as of date we run the notebook
    :param report_name_prefix: name of the output report
    :param output_repo: the repo to save the output report
    :param timeout: max time limit in seconds to run the notebook
    :param kernel_name: kernel type
    :return: filename for
    """
    with open(local_notebook_name) as f:
        print(f'Load notebook from {local_notebook_name}')
        nb = nbformat.read(f, as_version=4)
        print(f'Run the notebook, under repo {notebook_repo}')
        ep = ExecutePreprocessor(timeout=timeout, kernel_name=kernel_name)
        ep.preprocess(nb, {'metadata': {'path': notebook_repo}})

    local_report_file_name = os.path.join(output_repo, f'{report_name_prefix}_report_as_of_{asof_date}.html')
    print("Will output the report to file: {}".format(local_report_file_name))

    with open(local_report_file_name, mode='w', encoding='utf-8') as f:
        html_exporter = nbconvert.HTMLExporter()
        html_exporter.exclude_input = True
        (body, resources) = html_exporter.from_notebook_node(nb)
        f.write(body)
        f.close()

    return local_report_file_name


........................................
File Path: C:\Users\adelh\OneDrive\Documents\dev\systematic\new\telemetry\telemetry\__init__.py
----------------------------------------

........................................
